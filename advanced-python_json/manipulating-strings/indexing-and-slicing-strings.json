[
	{
		"component": "header",
		"variant": 1,
		"value": "Indexing and Slicing <span style=\"\">Strings</span>"
	},
	{
		"component": "text",
		"value": "<span style=\"\">Strings</span> use indexes and slices the same way lists do. You can think of the <span style=\"\">string</span> 'Hello world!' as a list and each character in the <span style=\"\">string</span> as an item with a corresponding index."
	},
	{
		"component": "text",
		"value": "'   H   e   l   l   o       w   o   r   l   d    !   '<br>    0   1   2   3   4   5   6   7   8   9   10   11<br>The space and exclamation point are included in the character count, so 'Hello world!' is 12 characters long, from H at index 0 to ! at index 11."
	},
	{
		"component": "text",
		"value": "Enter the following into the interactive <span style=\"\">shell</span>:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> spam = 'Hello world!'<br>>>> spam[0]<br>'H'<br>>>> spam[4]<br>'o'<br>>>> spam[-1]<br>'!'<br>>>> spam[0:5]<br>'Hello'<br>>>> spam[:5]<br>'Hello'<br>>>> spam[6:]<br>'world!'"
	},
	{
		"component": "text",
		"value": "If you specify an index, you’ll get the character at that position in the <span style=\"\">string</span>. If you specify a range from one index to another, the starting index is included and the ending index is not. That’s why, if spam is 'Hello world!', spam[0:5] is 'Hello'. The sub<span style=\"\">string</span> you get from spam[0:5] will include everything from spam[0] to spam[4], leaving out the space at index 5."
	},
	{
		"component": "text",
		"value": "Note that slicing a <span style=\"\">string</span> does not modify the original <span style=\"\">string</span>. You can capture a slice from one <span style=\"\">variable</span> in a separate <span style=\"\">variable</span>. Try typing the following into the interactive <span style=\"\">shell</span>:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> spam = 'Hello world!'<br>>>> fizz = spam[0:5]<br>>>> fizz<br>'Hello'"
	},
	{
		"component": "text",
		"value": "By slicing and storing the resulting sub<span style=\"\">string</span> in another <span style=\"\">variable</span>, you can have both the whole <span style=\"\">string</span> and the sub<span style=\"\">string</span> handy for quick, easy access."
	},
	{
		"component": "text",
		"value": "The in and not in <span style=\"\">Operators</span> with <span style=\"\">Strings</span><br>The in and not in <span style=\"\">operators</span> can be used with <span style=\"\">strings</span> just like with list values. An expression with two <span style=\"\">strings</span> joined using in or not in will evaluate to a Boolean <span style=\"\">True</span> or <span style=\"\">False</span>. Enter the following into the interactive <span style=\"\">shell</span>:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> 'Hello' in 'Hello World'<br>True<br>>>> 'Hello' in 'Hello'<br>True<br>>>> 'HELLO' in 'Hello World'<br>False<br>>>> '' in 'spam'<br>True<br>>>> 'cats' not in 'cats and dogs'<br>False"
	},
	{
		"component": "text",
		"value": "These expressions test whether the first <span style=\"\">string</span> (the exact <span style=\"\">string</span>, case sensitive) can be found within the second <span style=\"\">string</span>."
	}
]