[
	{
		"component": "header",
		"variant": 1,
		"value": "Practice Questions"
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "What are escape characters?",
		"decoration": {
			"type": "number",
			"value": 1
		}
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "What do the \\n and \\t escape characters represent?",
		"decoration": {
			"type": "number",
			"value": 2
		}
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "How can you put a \\ backslash character in a string?",
		"decoration": {
			"type": "number",
			"value": 3
		}
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "The string value \"Howl's Moving Castle\" is a valid string. Why isn’t it a problem that the single quote character in the word Howl's isn’t escaped?",
		"decoration": {
			"type": "number",
			"value": 4
		}
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "If you don’t want to put \\n in your string, how can you write a string with newlines in it?",
		"decoration": {
			"type": "number",
			"value": 5
		}
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "What do the following expressions evaluate to?",
		"decoration": {
			"type": "number",
			"value": 6
		}
	},
	{
		"component": "text",
		"value": "'Hello world!'[1]"
	},
	{
		"component": "text",
		"value": "'Hello world!'[0:5]"
	},
	{
		"component": "text",
		"value": "'Hello world!'[:5]"
	},
	{
		"component": "text",
		"value": "'Hello world!'[3:]"
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "What do the following expressions evaluate to?",
		"decoration": {
			"type": "number",
			"value": 7
		}
	},
	{
		"component": "text",
		"value": "'Hello'.upper()"
	},
	{
		"component": "text",
		"value": "'Hello'.upper().isupper()"
	},
	{
		"component": "text",
		"value": "'Hello'.upper().lower()"
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "What do the following expressions evaluate to?",
		"decoration": {
			"type": "number",
			"value": 8
		}
	},
	{
		"component": "text",
		"value": "'Remember, remember, the fifth of November.'.split()"
	},
	{
		"component": "text",
		"value": "'-'.join('There can be only one.'.split())"
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "What string methods can you use to right-justify, left-justify, and center a string?",
		"decoration": {
			"type": "number",
			"value": 9
		}
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "How can you trim whitespace characters from the beginning or end of a string?",
		"decoration": {
			"type": "number",
			"value": 1
		}
	},
	{
		"component": "header",
		"variant": 1,
		"value": "Practice Project"
	},
	{
		"component": "text",
		"value": "For practice, write a program that does the following."
	},
	{
		"component": "header",
		"variant": 1,
		"value": "<span style=\"\">Tab</span>le Printer"
	},
	{
		"component": "text",
		"value": "Write a function named print<span style=\"\">Tab</span>le() that takes a list of lists of <span style=\"\">strings</span> and displays it in a well-organized <span style=\"\">tab</span>le with each column right-justified. Assume that all the inner lists will contain the same number of <span style=\"\">strings</span>. For example, the value could look like this:"
	},
	{
		"component": "text",
		"value": "<span style=\"\">tab</span>leData = [['apples', 'oranges', 'cherries', 'banana'],<br>             ['Alice', 'Bob', 'Carol', 'David'],<br>             ['dogs', 'cats', 'moose', 'goose']]<br>Your print<span style=\"\">Tab</span>le() function would print the following:"
	},
	{
		"component": "text",
		"value": "apples Alice  dogs<br> oranges   Bob  cats<br>cherries Carol moose<br>  banana David goose<br>Hint: Your <span style=\"\">code</span> will first have to find the longest <span style=\"\">string</span> in each of the inner lists so that the whole column can be wide enough to fit all the <span style=\"\">strings</span>. You can store the maximum width of each column as a list of <span style=\"\">integers</span>. The print<span style=\"\">Tab</span>le() function can begin with colWidths = [0] * len(<span style=\"\">tab</span>leData), which will create a list containing the same number of 0 values as the number of inner lists in <span style=\"\">tab</span>leData. That way, colWidths[0] can store the width of the longest <span style=\"\">string</span> in <span style=\"\">tab</span>leData[0], colWidths[1] can store the width of the longest <span style=\"\">string</span> in <span style=\"\">tab</span>leData[1], and so on. You can then find the largest value in the colWidths list to find out what <span style=\"\">integer</span> width to pass to the rjust() <span style=\"\">string</span> method."
	}
]