[
	{
		"component": "header",
		"variant": 1,
		"value": "Character Classes"
	},
	{
		"component": "text",
		"value": "In the earlier phone number regex example, you learned that \\d could stand for any numeric digit. That is, \\d is shorthand for the regular expression (0|1|2|3|4|5|6|7|8|9). There are many such shorthand character classes, as shown in <span style=\"\">Tab</span>le 7-1."
	},
	{
		"component": "text",
		"value": "<span style=\"\">Tab</span>le 7-1. Shorthand <span style=\"\">Codes</span> for Common Character Classes"
	},
	{
		"component": "text",
		"value": "Shorthand character class"
	},
	{
		"component": "text",
		"value": "Represents"
	},
	{
		"component": "text",
		"value": "\\d         Any numeric digit from 0 to 9."
	},
	{
		"component": "text",
		"value": "\\D         Any character that is not a numeric digit from 0 to 9."
	},
	{
		"component": "text",
		"value": "\\w      Any letter, numeric digit, or the underscore character. (Think of this as matching “word” characters.)"
	},
	{
		"component": "text",
		"value": "\\W      Any character that is not a letter, numeric digit, or the underscore character."
	},
	{
		"component": "text",
		"value": "\\s      Any space, <span style=\"\">tab</span>, or newline character. (Think of this as matching “space” characters.)"
	},
	{
		"component": "text",
		"value": "\\S      Any character that is not a space, <span style=\"\">tab</span>, or newline."
	},
	{
		"component": "text",
		"value": "Character classes are nice for shortening regular expressions. The character class [0-5] will match only the numbers 0 to 5; this is much shorter than typing (0|1|2|3|4|5)."
	},
	{
		"component": "text",
		"value": "For example, enter the following into the interactive <span style=\"\">shell</span>:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> xmasRegex = re.compile(r'\\d+\\s\\w+')<br>>>> xmasRegex.findall('12 drummers, 11 pipers, 10 lords, 9 ladies, 8 maids, 7swans, 6 geese, 5 rings, 4 birds, 3 hens, 2 doves, 1 partridge')<br>['12 drummers', '11 pipers', '10 lords', '9 ladies', '8 maids', '7 swans', '6geese', '5 rings', '4 birds', '3 hens', '2 doves', '1 partridge']"
	},
	{
		"component": "text",
		"value": "The regular expression \\d+\\s\\w+ will match text that has one or more numeric digits (\\d+), followed by a whitespace character (\\s), followed by one or more letter/digit/underscore characters (\\w+). The findall() method returns all matching <span style=\"\">strings</span> of the regex pattern in a list."
	}
]