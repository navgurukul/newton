[
	{
		"component": "header",
		"variant": 1,
		"value": "Local and Global <span style=\"\">Variables</span> with the Same Name"
	},
	{
		"component": "text",
		"value": "To simplify your life, avoid using local <span style=\"\">variables</span> that have the same name as a global <span style=\"\">variable</span> or another local <span style=\"\">variable</span>. But technically, it’s perfectly legal to do so in <span style=\"\">Python</span>. To see what happens, type the following <span style=\"\">code</span> into the <span style=\"\">file</span> <span style=\"\">editor</span> and <span style=\"\">save</span> it as sameName.py:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "def spam():<br>❶     eggs = 'spam local'<br>       print(eggs) # prints 'spam local'<br>   def bacon():<br><br>❷     eggs = 'bacon local'<br>       print(eggs) # prints 'bacon local'<br>       spam()<br>       print(eggs) # prints 'bacon local'<br><br>❸ eggs = 'global'<br>   bacon()<br>   print(eggs) # prints 'global'"
	},
	{
		"component": "text",
		"value": "When you run this program, it <span style=\"\">outputs</span> the following:"
	},
	{
		"component": "text",
		"value": "bacon local<br>spam local<br>bacon local<br>global<br>There are actually three different <span style=\"\">variables</span> in this program, but confusingly they are all named eggs. The <span style=\"\">variables</span> are as follows:"
	},
	{
		"component": "text",
		"value": "❶ A <span style=\"\">variable</span> named eggs that exists in a local scope when spam() is called."
	},
	{
		"component": "text",
		"value": "❷ A <span style=\"\">variable</span> named eggs that exists in a local scope when bacon() is called."
	},
	{
		"component": "text",
		"value": "❸ A <span style=\"\">variable</span> named eggs that exists in the global scope."
	},
	{
		"component": "text",
		"value": "Since these three separate <span style=\"\">variables</span> all have the same name, it can be confusing to keep track of which one is being used at any given time. This is why you should avoid using the same <span style=\"\">variable</span> name in different scopes."
	}
]