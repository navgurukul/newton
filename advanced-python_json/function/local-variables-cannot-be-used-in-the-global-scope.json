[
	{
		"component": "header",
		"variant": 1,
		"value": "Local <span style=\"\">Variables</span> Cannot Be Used in the Global Scope"
	},
	{
		"component": "text",
		"value": "Consider this program, which will cause an <span style=\"\">error</span> when you run it:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "def spam():<br>    eggs = 31337<br>spam()<br>print(eggs)"
	},
	{
		"component": "text",
		"value": "If you run this program, the <span style=\"\">output</span> will look like this:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "Traceback (most recent call last):<br>  File \"C:/test3784.py\", line 4, in <module><br>    print(eggs)<br>NameError: name 'eggs' is not defined"
	},
	{
		"component": "text",
		"value": "The <span style=\"\">error</span> happens because the eggs <span style=\"\">variable</span> exists only in the local scope created when spam() is called. Once the program execution returns from spam, that local scope is destroyed, and there is no longer a <span style=\"\">variable</span> named eggs. So when your program tries to run print(eggs), <span style=\"\">Python</span> gives you an <span style=\"\">error</span> saying that eggs is not defined. This makes sense if you think about it; when the program execution is in the global scope, no local scopes exist, so there canâ€™t be any local <span style=\"\">variables</span>. This is why only global <span style=\"\">variables</span> can be used in the global scope."
	}
]