[
	{
		"component": "header",
		"variant": 1,
		"value": "Retrieving and Deleting Emails with IMAP"
	},
	{
		"component": "text",
		"value": "Finding and retrieving an email in <span style=\"\">Python</span> is a multistep process that requires both the imapclient and pyzmail third-party modules. Just to give you an overview, here’s a full example of logging in to an IMAP server, searching for emails, fetching them, and then extracting the text of the email messages from them."
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> import imapclient<br>>>> imapObj = imapclient.IMAPClient('imap.gmail.com', ssl=True)<br>>>> imapObj.login(' my_email_address@gmail.com ', ' MY_SECRET_PASSWORD ')<br>'my_email_address@gmail.com Jane Doe authenticated (Success)'<br>>>> imapObj.select_folder('INBOX', readonly=True)<br>>>> UIDs = imapObj.search(['SINCE 05-Jul-2014'])<br>>>> UIDs"
	},
	{
		"component": "text",
		"value": "[40032, 40033, 40034, 40035, 40036, 40037, 40038, 40039, 40040, 40041]"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> rawMessages = imapObj.fetch([40041], ['BODY[]', 'FLAGS'])<br>>>> import pyzmail<br>>>> message = pyzmail.PyzMessage.factory(rawMessages[40041]['BODY[]'])<br>>>> message.get_subject()"
	},
	{
		"component": "text",
		"value": "'Hello!'"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> message.get_addresses('from')"
	},
	{
		"component": "text",
		"value": "[('Edward Snowden', 'esnowden@nsa.gov')]"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> message.get_addresses('to')"
	},
	{
		"component": "text",
		"value": "[(Jane Doe', 'jdoe@example.com')]"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> message.get_addresses('cc')"
	},
	{
		"component": "text",
		"value": "[]"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> message.get_addresses('bcc')"
	},
	{
		"component": "text",
		"value": "[]"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> message.text_part != None"
	},
	{
		"component": "text",
		"value": "<span style=\"\">True</span>"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> message.text_part.get_payload().decode(message.text_part.charset)"
	},
	{
		"component": "text",
		"value": "'Follow the money.\\r\\n\\r\\n-Ed\\r\\n'"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> message.html_part != None"
	},
	{
		"component": "text",
		"value": "<span style=\"\">True</span>"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> message.html_part.get_payload().decode(message.html_part.charset)"
	},
	{
		"component": "text",
		"value": "'<div dir=\"ltr\"><div>So long, and thanks for all the fish!<br><br></div>-<br>Al<br></div>\\r\\n'"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> imapObj.logout()"
	},
	{
		"component": "text",
		"value": "You don’t have to memorize these steps. After we go through each step in detail, you can come back to this overview to refresh your memory."
	}
]