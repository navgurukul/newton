[
	{
		"component": "header",
		"variant": 1,
		"value": "Encrypting PDFs"
	},
	{
		"component": "text",
		"value": "A Pdf<span style=\"\">File</span>Writer object can also add encryption to a PDF document. Enter the following into the interactive <span style=\"\">shell</span>:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> import PyPDF2<br>   >>> pdfFile = open('meetingminutes.pdf', 'rb')<br>   >>> pdfReader = PyPDF2.PdfFileReader(pdfFile)<br>   >>> pdfWriter = PyPDF2.PdfFileWriter()<br>   >>> for pageNum in range(pdfReader.numPages):<br>           pdfWriter.addPage(pdfReader.getPage(pageNum))<br><br>❶ >>> pdfWriter.encrypt('swordfish')<br>   >>> resultPdf = open('encryptedminutes.pdf', 'wb')<br>   >>> pdfWriter.write(resultPdf)<br>   >>> resultPdf.close()"
	},
	{
		"component": "text",
		"value": "Before calling the write() method to <span style=\"\">save</span> to a <span style=\"\">file</span>, call the encrypt() method and pass it a password <span style=\"\">string</span> ❶. PDFs can have a user password (allowing you to view the PDF) and an owner password (allowing you to set permissions for printing, commenting, extracting text, and other features). The user password and owner password are the first and second arguments to encrypt(), respectively. If only one <span style=\"\">string</span> argument is passed to encrypt(), it will be used for both passwords."
	},
	{
		"component": "text",
		"value": "In this example, we copied the pages of meetingminutes.pdf to a Pdf<span style=\"\">File</span>Writer object. We encrypted the Pdf<span style=\"\">File</span>Writer with the password swordfish, opened a new PDF called encryptedminutes.pdf, and wrote the contents of the Pdf<span style=\"\">File</span>Writer to the new PDF. Before anyone can view encryptedminutes.pdf, they’ll have to enter this password. You may want to delete the original, unencrypted meetingminutes.pdf <span style=\"\">file</span> after ensuring its copy was correctly encrypted."
	}
]