{
	"scrolling-the-mouse_key1": "Scrolling the Mouse",
	"scrolling-the-mouse_key2": "The final PyAutoGUI mouse function is scroll(), which you pass an <span style=\"\">integer</span> argument for how many units you want to scroll the mouse up or down. The size of a unit varies for each operating system and <span style=\"\">application</span>, so you’ll have to experiment to see exactly how far it scrolls in your particular situation. The scrolling takes place at the mouse cursor’s current position. Passing a positive <span style=\"\">integer</span> scrolls up, and passing a negative <span style=\"\">integer</span> scrolls down. Run the following in IDLE’s interactive <span style=\"\">shell</span> while the mouse cursor is over the IDLE window:",
	"scrolling-the-mouse_key3": "You’ll see IDLE briefly scroll upward—and then go back down. The downward scrolling happens because IDLE automatically scrolls down to the bottom after executing an instruction. Enter this <span style=\"\">code</span> instead:",
	"scrolling-the-mouse_key4": "This imports pyperclip and sets up an empty <span style=\"\">string</span>, numbers. The <span style=\"\">code</span> then <span style=\"\">loops</span> through 200 numbers and adds each number to numbers, along with a newline. After pyperclip.copy(numbers), the clipboard will be loaded with 200 lines of numbers. Open a new <span style=\"\">file</span> <span style=\"\">editor</span> window and paste the text into it. This will give you a large text window to try scrolling in. Enter the following <span style=\"\">code</span> into the interactive <span style=\"\">shell</span>:",
	"scrolling-the-mouse_key5": "On the second line, you enter two commands separated by a semicolon, which tells <span style=\"\">Python</span> to run the commands as if they were on separate lines. The only difference is that the interactive <span style=\"\">shell</span> won’t prompt you for <span style=\"\">input</span> between the two instructions. This is important for this example because we want to the call to pyautogui.scroll() to happen automatically after the wait. (Note that while putting two commands on one line can be useful in the interactive <span style=\"\">shell</span>, you should still have each instruction on a separate line in your programs.)",
	"scrolling-the-mouse_key6": "After pressing ENTER to run the <span style=\"\">code</span>, you will have five seconds to click the <span style=\"\">file</span> <span style=\"\">editor</span> window to put it in focus. Once the pause is over, the pyautogui.scroll() call will cause the <span style=\"\">file</span> <span style=\"\">editor</span> window to scroll up after the five-second delay."
}