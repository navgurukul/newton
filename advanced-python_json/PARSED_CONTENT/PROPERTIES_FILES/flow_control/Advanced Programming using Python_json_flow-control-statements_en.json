{
	"flow-control-statements_key1": "Flow Control <span style=\"\">Statements</span>",
	"flow-control-statements_key2": "Now, let’s explore the most important piece of flow control: the <span style=\"\">statements</span> themselves. The <span style=\"\">statements</span> represent the diamonds you saw in the flowchart in Figure 2-1, and they are the actual decisions your programs will make.",
	"flow-control-statements_key3": "if <span style=\"\">Statements</span>",
	"flow-control-statements_key4": "The most common type of flow control <span style=\"\">statement</span> is the if <span style=\"\">statement</span>. An if <span style=\"\">statement</span>’s clause (that is, the block following the if <span style=\"\">statement</span>) will <span style=\"\">execute</span> if the <span style=\"\">statement</span>’s condition is <span style=\"\">True</span>. The clause is skipped if the condition is <span style=\"\">False</span>.",
	"flow-control-statements_key5": "In plain English, an if <span style=\"\">statement</span> could be read as, “If this condition is <span style=\"\">true</span>, <span style=\"\">execute</span> the <span style=\"\">code</span> in the clause.” In <span style=\"\">Python</span>, an if <span style=\"\">statement</span> consists of the following:",
	"flow-control-statements_key6": "The if keyword",
	"flow-control-statements_key7": "A condition (that is, an expression that evaluates to True or False)",
	"flow-control-statements_key8": "A colon",
	"flow-control-statements_key9": "Starting on the next line, an indented block of code (called the if clause)",
	"flow-control-statements_key10": "For example, let’s say you have some <span style=\"\">code</span> that checks to see whether someone’s name is Alice. (Pretend name was assigned some value earlier.)",
	"flow-control-statements_key11": "All flow control <span style=\"\">statements</span> end with a colon and are followed by a new block of <span style=\"\">code</span> (the clause). This if <span style=\"\">statement</span>’s clause is the block with print('Hi, Alice.'). Figure 2-3 shows what a flowchart of this <span style=\"\">code</span> would look like.",
	"flow-control-statements_key12": "Figure 2-3. The flowchart for an if <span style=\"\">statement</span>",
	"flow-control-statements_key13": "else <span style=\"\">Statements</span>",
	"flow-control-statements_key14": "An if clause can optionally be followed by an else <span style=\"\">statement</span>. The else clause is <span style=\"\">execute</span>d only when the if <span style=\"\">statement</span>’s condition is <span style=\"\">False</span>. In plain English, an else <span style=\"\">statement</span> could be read as, “If this condition is <span style=\"\">true</span>, <span style=\"\">execute</span> this <span style=\"\">code</span>. Or else, <span style=\"\">execute</span> that <span style=\"\">code</span>.” An else <span style=\"\">statement</span> doesn’t have a condition, and in <span style=\"\">code</span>, an else <span style=\"\">statement</span> always consists of the following:",
	"flow-control-statements_key15": "The else keyword",
	"flow-control-statements_key16": "A colon",
	"flow-control-statements_key17": "Starting on the next line, an indented block of code (called the else clause)",
	"flow-control-statements_key18": "Returning to the Alice example, let’s look at some <span style=\"\">code</span> that uses an else <span style=\"\">statement</span> to offer a different greeting if the person’s name isn’t Alice.",
	"flow-control-statements_key19": "Figure 2-4 shows what a flowchart of this <span style=\"\">code</span> would look like.",
	"flow-control-statements_key20": "Figure 2-4. The flowchart for an else <span style=\"\">statement</span>",
	"flow-control-statements_key21": "elif <span style=\"\">Statements</span>",
	"flow-control-statements_key22": "While only one of the if or else clauses will <span style=\"\">execute</span>, you may have a case where you want one of many possible clauses to <span style=\"\">execute</span>. The elif <span style=\"\">statement</span> is an “else if” <span style=\"\">statement</span> that always follows an if or another elif <span style=\"\">statement</span>. It provides another condition that is checked only if all of the previous conditions were <span style=\"\">False</span>. In <span style=\"\">code</span>, an elif <span style=\"\">statement</span> always consists of the following:",
	"flow-control-statements_key23": "The elif <span style=\"\">key</span>word",
	"flow-control-statements_key24": "A condition (that is, an expression that evaluates to True or False)",
	"flow-control-statements_key25": "A colon",
	"flow-control-statements_key26": "Starting on the next line, an indented block of code (called the elif clause)",
	"flow-control-statements_key27": "Let’s add an elif to the name checker to see this <span style=\"\">statement</span> in action.",
	"flow-control-statements_key28": "This time, you check the person’s age, and the program will tell them something different if they’re younger than 12. You can see the flowchart for this in Figure 2-5.",
	"flow-control-statements_key29": "Figure 2-5. The flowchart for an elif <span style=\"\">statement</span>",
	"flow-control-statements_key30": "The elif clause <span style=\"\">executes</span> if age &lt; 12 is <span style=\"\">True</span> and name == 'Alice' is <span style=\"\">False</span>. However, if both of the conditions are <span style=\"\">False</span>, then both of the clauses are skipped. It is not guaranteed that at least one of the clauses will be <span style=\"\">execute</span>d. When there is a chain of elif <span style=\"\">statements</span>, only one or none of the clauses will be <span style=\"\">execute</span>d. Once one of the <span style=\"\">statements</span>’ conditions is found to be <span style=\"\">True</span>, the rest of the elif clauses are automatically skipped. For example, open a new <span style=\"\">file</span> <span style=\"\">editor</span> window and enter the following <span style=\"\">code</span>, saving it as ",
	"flow-control-statements_key31": "Here I’ve added two more elif <span style=\"\">statements</span> to make the name checker greet a person with different answers based on age. Figure 2-6 shows the flowchart for this."
}