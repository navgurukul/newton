{
	"connecting-to-an-imap-server_key1": "Connecting to an IMAP Server",
	"connecting-to-an-imap-server_key2": "Just like you needed an SMTP object to connect to an SMTP server and send email, you need an IMAPClient object to connect to an IMAP server and receive email. First you’ll need the domain name of your email provider’s IMAP server. This will be different from the SMTP server’s domain name. <span style=\"\">Tab</span>le 16-2 lists the IMAP servers for several popular email providers.",
	"connecting-to-an-imap-server_key3": "<span style=\"\">Tab</span>le 16-2. Email Providers and Their IMAP Servers",
	"connecting-to-an-imap-server_key4": "Provider                                 IMAP server domain name",
	"connecting-to-an-imap-server_key5": "Gmail                                     imap.gmail.com",
	"connecting-to-an-imap-server_key6": "Outlook.com/Hotmail.com                 imap-mail.outlook.com",
	"connecting-to-an-imap-server_key7": "Yahoo Mail                                 imap.mail.yahoo.com",
	"connecting-to-an-imap-server_key8": "AT&amp;T                                     imap.mail.att.net",
	"connecting-to-an-imap-server_key9": "Comcast                                    imap.comcast.net",
	"connecting-to-an-imap-server_key10": "Verizon                                    incoming.verizon.net",
	"connecting-to-an-imap-server_key11": "Once you have the domain name of the IMAP server, call the imapclient.IMAPClient() function to create an IMAPClient object. Most email providers require SSL encryption, so pass the ssl=<span style=\"\">True</span> <span style=\"\">key</span>word argument. Enter the following into the interactive <span style=\"\">shell</span> (using your provider’s domain name):",
	"connecting-to-an-imap-server_key12": "In all of the interactive <span style=\"\">shell</span> examples in the following sections, the imapObj <span style=\"\">variable</span> will contain an IMAPClient object returned from the imapclient.IMAPClient() function. In this context, a client is the object that connects to the server.",
	"connecting-to-an-imap-server_key13": "Logging in to the IMAP Server",
	"connecting-to-an-imap-server_key14": "Once you have an IMAPClient object, call its login() method, passing in the username (this is usually your email address) and password as <span style=\"\">strings</span>.",
	"connecting-to-an-imap-server_key15": "'<span><a href=\"my_email_address@gmail.com\">my<i>email</i>address@gmail.com</a></span> Jane Doe authenticated (Success)'",
	"connecting-to-an-imap-server_key16": "Warning",
	"connecting-to-an-imap-server_key17": "Remember, never write a password directly into your <span style=\"\">code</span>! Instead, design your program to accept the password returned from <span style=\"\">input</span>().",
	"connecting-to-an-imap-server_key18": "If the IMAP server rejects this username/password combination, <span style=\"\">Python</span> will raise an imaplib.<span style=\"\">error</span> exception. For Gmail accounts, you may need to use an <span style=\"\">application</span>-specific password; for more details, see Gmail’s <span style=\"\">Application</span>-Specific Passwords."
}