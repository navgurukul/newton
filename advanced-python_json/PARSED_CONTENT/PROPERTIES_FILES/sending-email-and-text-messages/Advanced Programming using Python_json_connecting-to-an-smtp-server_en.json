{
	"connecting-to-an-smtp-server_key1": "Connecting to an SMTP Server",
	"connecting-to-an-smtp-server_key2": "If you’ve ever set up Thunderbird, Outlook, or another program to connect to your email account, you may be familiar with configuring the SMTP server and port. These settings will be different for each email provider, but a web search for <your provider> smtp settings should turn up the server and port to use.",
	"connecting-to-an-smtp-server_key3": "The domain name for the SMTP server will usually be the name of your email provider’s domain name, with smtp. in front of it. For example, Gmail’s SMTP server is at smtp.gmail.com. <span style=\"\">Tab</span>le 16-1 lists some common email providers and their SMTP servers. (The port is an <span style=\"\">integer</span> value and will almost always be 587, which is used by the command encryption standard, TLS.)",
	"connecting-to-an-smtp-server_key4": "<span style=\"\">Tab</span>le 16-1. Email Providers and Their SMTP Servers",
	"connecting-to-an-smtp-server_key5": "Provider                             SMTP server domain name",
	"connecting-to-an-smtp-server_key6": "Gmail                                 smtp.gmail.com",
	"connecting-to-an-smtp-server_key7": "Outlook.com/Hotmail.com             smtp-mail.outlook.com",
	"connecting-to-an-smtp-server_key8": "Yahoo Mail                             smtp.mail.yahoo.com",
	"connecting-to-an-smtp-server_key9": "AT&amp;T                                 smpt.mail.att.net (port 465)",
	"connecting-to-an-smtp-server_key10": "Comcast                             smtp.comcast.net",
	"connecting-to-an-smtp-server_key11": "Verizon                                smtp.verizon.net (port 465)",
	"connecting-to-an-smtp-server_key12": "Once you have the domain name and port information for your email provider, create an SMTP object by calling smptlib.SMTP(), passing the domain name as a <span style=\"\">string</span> argument, and passing the port as an <span style=\"\">integer</span> argument. The SMTP object represents a connection to an SMTP mail server and has methods for sending emails. For example, the following call creates an SMTP object for connecting to Gmail:",
	"connecting-to-an-smtp-server_key13": "<class 'smtplib.SMTP'><br>Entering type(smtpObj) shows you that there’s an SMTP object stored in smtpObj. You’ll need this SMTP object in order to call the methods that log you in and send emails. If the smptlib.SMTP() call is not successful, your SMTP server might not support TLS on port 587. In this case, you will need to create an SMTP object using smtplib.SMTP_SSL() and port 465 instead.",
	"connecting-to-an-smtp-server_key14": "Note",
	"connecting-to-an-smtp-server_key15": "If you are not connected to the Internet, <span style=\"\">Python</span> will raise a socket.gai<span style=\"\">error</span>: [Errno 11004] getaddrinfo failed or similar exception.",
	"connecting-to-an-smtp-server_key16": "For your programs, the differences between TLS and SSL aren’t important. You only need to know which encryption standard your SMTP server uses so you know how to connect to it. In all of the interactive <span style=\"\">shell</span> examples that follow, the smtpObj <span style=\"\">variable</span> will contain an SMTP object returned by the smtplib.SMTP() or smtplib.SMTP_SSL() function."
}