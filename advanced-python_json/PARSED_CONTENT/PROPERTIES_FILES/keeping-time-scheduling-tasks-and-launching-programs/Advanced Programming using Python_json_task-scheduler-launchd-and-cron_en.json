{
	"task-scheduler-launchd-and-cron_key1": "Task Scheduler, launchd, and cron",
	"task-scheduler-launchd-and-cron_key2": "If you are computer savvy, you may know about Task Scheduler on Windows, launchd on OS X, or the cron scheduler on Linux. These well-documented and reliable tools all allow you to schedule <span style=\"\">applications</span> to launch at specific times. If you’d like to learn more about them, you can find links to tutorials at <span><a href=\"http://nostarch.com/automatestuff/\">http://nostarch.com/automatestuff/</a></span>.",
	"task-scheduler-launchd-and-cron_key3": "Using your operating system’s built-in scheduler <span style=\"\">saves</span> you from writing your own clock-checking <span style=\"\">code</span> to schedule your programs. However, use the time.sleep() function if you just need your program to pause briefly. Or instead of using the operating system’s scheduler, your <span style=\"\">code</span> can <span style=\"\">loop</span> until a certain date and time, calling time.sleep(1) each time through the <span style=\"\">loop</span>.",
	"task-scheduler-launchd-and-cron_key4": "Opening Websites with <span style=\"\">Python</span>",
	"task-scheduler-launchd-and-cron_key5": "The webbrowser.open() function can launch a web browser from your program to a specific website, rather than opening the browser <span style=\"\">application</span> with subprocess.Popen(). See Project: mapit.py with the webbrowser Module for more details.",
	"task-scheduler-launchd-and-cron_key6": "Running Other <span style=\"\">Python</span> Scripts",
	"task-scheduler-launchd-and-cron_key7": "You can launch a <span style=\"\">Python</span> script from <span style=\"\">Python</span> just like any other <span style=\"\">application</span>. You just have to pass the <span style=\"\">python</span>.exe execu<span style=\"\">tab</span>le to Popen() and the <span style=\"\">file</span>name of the .py script you want to run as its argument. For example, the following would run the hello.py script from Chapter 1:",
	"task-scheduler-launchd-and-cron_key8": "<subprocess.Popen object at 0x000000000331CF28><br>Pass Popen() a list containing a <span style=\"\">string</span> of the <span style=\"\">Python</span> execu<span style=\"\">tab</span>le’s path and a <span style=\"\">string</span> of the script’s <span style=\"\">file</span>name. If the script you’re launching needs command line arguments, add them to the list after the script’s <span style=\"\">file</span>name. The location of the <span style=\"\">Python</span> execu<span style=\"\">tab</span>le on Windows is C:\\<span style=\"\">python3</span>4\\<span style=\"\">python</span>.exe. On OS X, it is /Library/Frameworks/<span style=\"\">Python</span>.framework/Versions/3.3/bin/<span style=\"\">python3</span>. On Linux, it is /usr/bin/<span style=\"\">python3</span>.",
	"task-scheduler-launchd-and-cron_key9": "Unlike importing the <span style=\"\">Python</span> program as a module, when your <span style=\"\">Python</span> program launches another <span style=\"\">Python</span> program, the two are run in separate processes and will not be able to share each other’s <span style=\"\">variables</span>."
}