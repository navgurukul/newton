{
	"passing-command-line-arguments-to-open()_key1": "Passing Command Line Arguments to Popen()",
	"passing-command-line-arguments-to-open()_key2": "You can pass command line arguments to processes you create with Popen(). To do so, you pass a list as the sole argument to Popen(). The first <span style=\"\">string</span> in this list will be the execu<span style=\"\">tab</span>le <span style=\"\">file</span>name of the program you want to launch; all the subsequent <span style=\"\">strings</span> will be the command line arguments to pass to the program when it starts. In effect, this list will be the value of sys.argv for the launched program.",
	"passing-command-line-arguments-to-open()_key3": "Most <span style=\"\">applications</span> with a graphical user interface (GUI) don’t use command line arguments as extensively as command line–based or <span style=\"\">terminal</span>-based programs do. But most GUI <span style=\"\">applications</span> will accept a single argument for a <span style=\"\">file</span> that the <span style=\"\">applications</span> will immediately open when they start. For example, if you’re using Windows, create a simple text <span style=\"\">file</span> called C:\\hello.txt and then enter the following into the interactive <span style=\"\">shell</span>:",
	"passing-command-line-arguments-to-open()_key4": "<subprocess.Popen object at 0x00000000032DCEB8><br>This will not only launch the Notepad <span style=\"\">application</span> but also have it immediately open the C:\\hello.txt <span style=\"\">file</span>."
}