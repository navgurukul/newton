{
	"sorting-the-values-in-a-list-with-the-sort()-method_key1": "Sorting the Values in a List with the sort() Method",
	"sorting-the-values-in-a-list-with-the-sort()-method_key2": "Lists of number values or lists of <span style=\"\">strings</span> can be sorted with the sort() method. For example, enter the following into the interactive <span style=\"\">shell</span>:",
	"sorting-the-values-in-a-list-with-the-sort()-method_key3": "You can also pass <span style=\"\">True</span> for the reverse <span style=\"\">key</span>word argument to have sort() sort the values in reverse order. Enter the following into the interactive <span style=\"\">shell</span>:",
	"sorting-the-values-in-a-list-with-the-sort()-method_key4": "There are three things you should note about the sort() method. First, the sort() method sorts the list in place; don’t try to capture the return value by writing <span style=\"\">code</span> like spam = spam.sort().",
	"sorting-the-values-in-a-list-with-the-sort()-method_key5": "Second, you cannot sort lists that have both number values and <span style=\"\">string</span> values in them, since <span style=\"\">Python</span> doesn’t know how to compare these values. Type the following into the interactive <span style=\"\">shell</span> and notice the Type<span style=\"\">Error</span> <span style=\"\">error</span>:",
	"sorting-the-values-in-a-list-with-the-sort()-method_key6": "Third, sort() uses “ASCIIbetical order” rather than actual alphabetical order for sorting <span style=\"\">strings</span>. This means uppercase letters come before lowercase letters. Therefore, the lowercase a is sorted so that it comes after the uppercase Z. For an example, enter the following into the interactive <span style=\"\">shell</span>:",
	"sorting-the-values-in-a-list-with-the-sort()-method_key7": "If you need to sort the values in regular alphabetical order, pass str. lower for the <span style=\"\">key</span> <span style=\"\">key</span>word argument in the sort() method call.",
	"sorting-the-values-in-a-list-with-the-sort()-method_key8": "This causes the sort() method to treat all the items in the list as if they were lowercase without actually changing the values in the list.",
	"sorting-the-values-in-a-list-with-the-sort()-method_key9": "Example Program: Magic 8 Ball with a List",
	"sorting-the-values-in-a-list-with-the-sort()-method_key10": "Using lists, you can write a much more elegant version of the previous chapter’s Magic 8 Ball program. Instead of several lines of nearly identical elif <span style=\"\">statements</span>, you can create a single list that the <span style=\"\">code</span> works with. Open a new <span style=\"\">file</span> <span style=\"\">editor</span> window and enter the following <span style=\"\">code</span>. <span style=\"\">Save</span> it as magic8Ball2.py.",
	"sorting-the-values-in-a-list-with-the-sort()-method_key11": "Exceptions to <span style=\"\">Indentation</span> Rules in <span style=\"\">Python</span>",
	"sorting-the-values-in-a-list-with-the-sort()-method_key12": "In most cases, the amount of <span style=\"\">indentation</span> for a line of <span style=\"\">code</span> tells <span style=\"\">Python</span> what block it is in. There are some exceptions to this rule, however. For example, lists can actually span several lines in the source <span style=\"\">code</span> <span style=\"\">file</span>. The <span style=\"\">indentation</span> of these lines do not matter; <span style=\"\">Python</span> knows that until it sees the ending square bracket, the list is not finished. For example, you can have <span style=\"\">code</span> that looks like this:",
	"sorting-the-values-in-a-list-with-the-sort()-method_key13": "Of course, practically speaking, most people use <span style=\"\">Python</span>’s behavior to make their lists look pretty and readable, like the messages list in the Magic 8 Ball program.",
	"sorting-the-values-in-a-list-with-the-sort()-method_key14": "You can also split up a single instruction across multiple lines using the \\ line continuation character at the end. Think of \\ as saying, “This instruction continues on the next line.” The <span style=\"\">indentation</span> on the line after a \\ line continuation is not significant. For example, the following is valid <span style=\"\">Python</span> <span style=\"\">code</span>:",
	"sorting-the-values-in-a-list-with-the-sort()-method_key15": "These tricks are useful when you want to rearrange long lines of <span style=\"\">Python</span> <span style=\"\">code</span> to be a bit more readable.",
	"sorting-the-values-in-a-list-with-the-sort()-method_key16": "When you run this program, you’ll see that it works the same as the previous magic8Ball.py program.",
	"sorting-the-values-in-a-list-with-the-sort()-method_key17": "Notice the expression you use as the index into messages: random.randint(0, len(messages) - 1). This produces a random number to use for the index, regardless of the size of messages. That is, you’ll get a random number between 0 and the value of len(messages) - 1. The benefit of this approach is that you can easily add and remove <span style=\"\">strings</span> to the messages list without changing other lines of <span style=\"\">code</span>. If you later update your <span style=\"\">code</span>, there will be fewer lines you have to change and fewer chances for you to introduce bugs."
}