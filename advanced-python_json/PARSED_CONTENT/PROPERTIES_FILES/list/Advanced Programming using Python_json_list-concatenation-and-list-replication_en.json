{
	"list-concatenation-and-list-replication_key1": "List Concatenation and List Replication",
	"list-concatenation-and-list-replication_key2": "The + <span style=\"\">operator</span> can combine two lists to create a new list value in the same way it combines two <span style=\"\">strings</span> into a new <span style=\"\">string</span> value. The * <span style=\"\">operator</span> can also be used with a list and an <span style=\"\">integer</span> value to replicate the list. Enter the following into the interactive <span style=\"\">shell</span>:",
	"list-concatenation-and-list-replication_key3": "Removing Values from Lists with del <span style=\"\">Statements</span>",
	"list-concatenation-and-list-replication_key4": "The del <span style=\"\">statement</span> will delete values at an index in a list. All of the values in the list after the deleted value will be moved up one index. For example, enter the following into the interactive <span style=\"\">shell</span>:",
	"list-concatenation-and-list-replication_key5": "The del <span style=\"\">statement</span> can also be used on a simple <span style=\"\">variable</span> to delete it, as if it were an “unassignment” <span style=\"\">statement</span>. If you try to use the <span style=\"\">variable</span> after deleting it, you will get a Name<span style=\"\">Error</span> <span style=\"\">error</span> because the <span style=\"\">variable</span> no longer exists.",
	"list-concatenation-and-list-replication_key6": "In practice, you almost never need to delete simple <span style=\"\">variables</span>. The del <span style=\"\">statement</span> is mostly used to delete values from lists.",
	"list-concatenation-and-list-replication_key7": "Working with Lists",
	"list-concatenation-and-list-replication_key8": "When you first begin writing programs, it’s tempting to create many individual <span style=\"\">variables</span> to store a group of similar values. For example, if I wanted to store the names of my cats, I might be tempted to write <span style=\"\">code</span> like this:",
	"list-concatenation-and-list-replication_key9": "(I don’t actually own this many cats, I swear.) It turns out that this is a bad way to write <span style=\"\">code</span>. For one thing, if the number of cats changes, your program will never be able to store more cats than you have <span style=\"\">variables</span>. These types of programs also have a lot of duplicate or nearly identical <span style=\"\">code</span> in them. Consider how much duplicate <span style=\"\">code</span> is in the following program, which you should enter into the <span style=\"\">file</span> <span style=\"\">editor</span> and <span style=\"\">save</span> as allMyCats1.py:",
	"list-concatenation-and-list-replication_key10": "Instead of using multiple, repetitive <span style=\"\">variables</span>, you can use a single <span style=\"\">variable</span> that contains a list value. For example, here’s a new and improved version of the allMyCats1.py program. This new version uses a single list and can store any number of cats that the user types in. In a new <span style=\"\">file</span> <span style=\"\">editor</span> window, type the following source <span style=\"\">code</span> and <span style=\"\">save</span> it as allMyCats2.py:",
	"list-concatenation-and-list-replication_key11": "When you run this program, the <span style=\"\">output</span> will look something like this:",
	"list-concatenation-and-list-replication_key12": "Enter the name of cat 1 (Or enter nothing to stop.):<br>Zophie<br>Enter the name of cat 2 (Or enter nothing to stop.):<br>Pooka<br>Enter the name of cat 3 (Or enter nothing to stop.):<br>Simon<br>Enter the name of cat 4 (Or enter nothing to stop.):<br>Lady Macbeth<br>Enter the name of cat 5 (Or enter nothing to stop.):<br>Fat-tail<br>Enter the name of cat 6 (Or enter nothing to stop.):<br>Miss Cleo<br>Enter the name of cat 7 (Or enter nothing to stop.):",
	"list-concatenation-and-list-replication_key13": "The cat names are:<br>  Zophie<br>  Pooka<br>  Simon<br>  Lady Macbeth<br>  Fat-tail<br>  Miss Cleo<br>The benefit of using a list is that your data is now in a structure, so your program is much more flexible in processing the data than it would be with several repetitive <span style=\"\">variables</span>."
}