{
	"using-for-loops-with-lists_key1": "Using for <span style=\"\">Loops</span> with Lists",
	"using-for-loops-with-lists_key2": "In Chapter 2, you learned about using for <span style=\"\">loops</span> to <span style=\"\">execute</span> a block of <span style=\"\">code</span> a certain number of times. Technically, a for <span style=\"\">loop</span> repeats the <span style=\"\">code</span> block once for each value in a list or list-like value. For example, if you ran this <span style=\"\">code</span>:",
	"using-for-loops-with-lists_key3": "the <span style=\"\">output</span> of this program would be as follows:",
	"using-for-loops-with-lists_key4": "0<br>1<br>2<br>3<br>This is because the return value from range(4) is a list-like value that <span style=\"\">Python</span> considers similar to [0, 1, 2, 3]. The following program has the same <span style=\"\">output</span> as the previous one:",
	"using-for-loops-with-lists_key5": "Note",
	"using-for-loops-with-lists_key6": "In this book, I use the term list-like to refer to data types that are technically named sequences. You donâ€™t need to know the technical definitions of this term, though.",
	"using-for-loops-with-lists_key7": "A common <span style=\"\">Python</span> technique is to use range(len(someList)) with a for <span style=\"\">loop</span> to iterate over the indexes of a list. For example, enter the following into the interactive <span style=\"\">shell</span>:",
	"using-for-loops-with-lists_key8": "Using range(len(supplies)) in the previously shown for <span style=\"\">loop</span> is handy because the <span style=\"\">code</span> in the <span style=\"\">loop</span> can access the index (as the <span style=\"\">variable</span> i) and the value at that index (as supplies[i]). Best of all, range(len(supplies)) will iterate through all the indexes of supplies, no matter how many items it contains."
}