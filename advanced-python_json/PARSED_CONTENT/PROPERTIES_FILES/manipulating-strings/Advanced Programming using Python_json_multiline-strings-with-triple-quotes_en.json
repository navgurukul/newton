{
	"multiline-strings-with-triple-quotes_key1": "Multiline <span style=\"\">Strings</span> with Triple Quotes",
	"multiline-strings-with-triple-quotes_key2": "While you can use the \\n escape character to put a newline into a <span style=\"\">string</span>, it is often easier to use multiline <span style=\"\">strings</span>. A multiline <span style=\"\">string</span> in <span style=\"\">Python</span> begins and ends with either three single quotes or three double quotes. Any quotes, <span style=\"\">tabs</span>, or newlines in between the “triple quotes” are considered part of the <span style=\"\">string</span>. <span style=\"\">Python</span>’s <span style=\"\">indentation</span> rules for blocks do not apply to lines inside a multiline <span style=\"\">string</span>.",
	"multiline-strings-with-triple-quotes_key3": "Open the <span style=\"\">file</span> <span style=\"\">editor</span> and write the following:",
	"multiline-strings-with-triple-quotes_key4": "<span style=\"\">Save</span> this program as catnapping.py and run it. The <span style=\"\">output</span> will look like this:",
	"multiline-strings-with-triple-quotes_key5": "Dear Alice,",
	"multiline-strings-with-triple-quotes_key6": "Eve's cat has been arrested for catnapping, cat burglary, and extortion.",
	"multiline-strings-with-triple-quotes_key7": "Sincerely,<br>Bob<br>Notice that the single quote character in Eve's does not need to be escaped. Escaping single and double quotes is optional in raw <span style=\"\">strings</span>. The following print() call would print identical text but doesn’t use a multiline <span style=\"\">string</span>:",
	"multiline-strings-with-triple-quotes_key8": "print('Dear Alice,\\n\\nEve\\'s cat has been arrested for catnapping, cat<br>burglary, and extortion.\\n\\nSincerely,\\nBob')",
	"multiline-strings-with-triple-quotes_key9": "Multiline Comments",
	"multiline-strings-with-triple-quotes_key10": "While the hash character (#) marks the beginning of a comment for the rest of the line, a multiline <span style=\"\">string</span> is often used for comments that span multiple lines. The following is perfectly valid <span style=\"\">Python</span> <span style=\"\">code</span>:",
	"multiline-strings-with-triple-quotes_key11": "\"\"\"This is a test <span style=\"\">Python</span> program.<br>Written by Al Sweigart ",
	"multiline-strings-with-triple-quotes_key12": "al@inventwithpython.com",
	"multiline-strings-with-triple-quotes_key13": "This program was designed for <span style=\"\">Python</span> 3, not <span style=\"\">Python</span> 2.<br>\"\"\""
}