{
	"chapter-10_key1": "Chapter 10",
	"chapter-10_key2": "assert spam &gt;= 10, 'The spam <span style=\"\">variable</span> is less than 10.'",
	"chapter-10_key3": "assert eggs.lower() != bacon.lower(), 'The eggs and bacon <span style=\"\">variables</span> are the same!' or assert eggs.upper() != bacon.upper(), 'The eggs and bacon <span style=\"\">variables</span> are the same!'",
	"chapter-10_key4": "assert <span style=\"\">False</span>, 'This assertion always triggers.'",
	"chapter-10_key5": "To be able to call logging.debug(), you must have these two lines at the start of your program:",
	"chapter-10_key6": "import logging<br>logging.basicConfig(level=logging.DEBUG, format=' %(asctime)s -<br>%(levelname)s -  %(message)s')<br>To be able to send logging messages to a <span style=\"\">file</span> named programLog.txt with logging.debug(), you must have these two lines at the start of your program:",
	"chapter-10_key7": "import logging",
	"chapter-10_key8": "<blockquote>\n  logging.basicConfig(<span style=\"\">file</span>name='programLog.txt', level=logging.DEBUG,<br>format=' %(asctime)s -  %(levelname)s -  %(message)s')<br>DEBUG, INFO, WARNING, <span style=\"\">ERROR</span>, and CRITICAL<br>\n</blockquote>",
	"chapter-10_key9": "logging.disable(logging.CRITICAL)",
	"chapter-10_key10": "You can disable logging messages without removing the logging function calls. You can selectively disable lower-level logging messages. You can create logging messages. Logging messages provides a timestamp.",
	"chapter-10_key11": "The Step button will move the debugger into a function call. The Over button will quickly <span style=\"\">execute</span> the function call without stepping into it. The Out button will quickly <span style=\"\">execute</span> the rest of the <span style=\"\">code</span> until it steps out of the function it currently is in.",
	"chapter-10_key12": "After you click Go, the debugger will stop when it has reached the end of the program or a line with a breakpoint.",
	"chapter-10_key13": "A breakpoint is a setting on a line of <span style=\"\">code</span> that causes the debugger to pause when the program execution reaches the line.",
	"chapter-10_key14": "To set a breakpoint in IDLE, right-click the line and select Set Breakpoint from the context menu."
}