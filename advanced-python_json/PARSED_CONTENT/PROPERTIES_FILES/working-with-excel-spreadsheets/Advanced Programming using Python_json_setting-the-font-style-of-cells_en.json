{
	"setting-the-font-style-of-cells_key1": "Setting the Font Style of Cells",
	"setting-the-font-style-of-cells_key2": "Styling certain cells, rows, or columns can help you emphasize important areas in your spreadsheet. In the produce spreadsheet, for example, your program could apply bold text to the potato, garlic, and parsnip rows. Or perhaps you want to italicize every row with a cost per pound greater than $5. Styling parts of a large spreadsheet by hand would be tedious, but your programs can do it instantly.",
	"setting-the-font-style-of-cells_key3": "To customize font styles in cells, important, import the Font() function from the openpyxl.styles module.",
	"setting-the-font-style-of-cells_key4": "from openpyxl.styles import Font<br>This allows you to type Font() instead of openpyxl.styles.Font(). (See Importing Modules to review this style of import <span style=\"\">statement</span>.)",
	"setting-the-font-style-of-cells_key5": "Here’s an example that creates a new workbook and sets cell A1 to have a 24-point, italicized font. Enter the following into the interactive <span style=\"\">shell</span>:",
	"setting-the-font-style-of-cells_key6": "A cell’s style can be set by assigning the Font object to the style attribute.",
	"setting-the-font-style-of-cells_key7": "In this example, Font(size=24, italic=<span style=\"\">True</span>) returns a Font object, which is stored in italic24Font ❶. The <span style=\"\">key</span>word arguments to Font(), size and italic, configure the Font object. And when fontObj is assigned to the cell’s font attribute ❷, all that font styling information gets applied to cell A1.",
	"setting-the-font-style-of-cells_key8": "Font Objects",
	"setting-the-font-style-of-cells_key9": "To set font style attributes, you pass <span style=\"\">key</span>word arguments to Font(). <span style=\"\">Tab</span>le 12-2 shows the possible <span style=\"\">key</span>word arguments for the Font() function.",
	"setting-the-font-style-of-cells_key10": "<span style=\"\">Tab</span>le 12-2. <span style=\"\">Key</span>word Arguments for Font style Attributes",
	"setting-the-font-style-of-cells_key11": "<span style=\"\">Key</span>word argument                 Data type                        Description",
	"setting-the-font-style-of-cells_key12": "name                             <span style=\"\">String</span>                   The font name, such as 'Calibri' or 'Times New Roman'",
	"setting-the-font-style-of-cells_key13": "size                             <span style=\"\">Integer</span>                  The point size",
	"setting-the-font-style-of-cells_key14": "bold                             Boolean                  <span style=\"\">True</span>, for bold font",
	"setting-the-font-style-of-cells_key15": "italic                           Boolean                  <span style=\"\">True</span>, for italic font",
	"setting-the-font-style-of-cells_key16": "You can call Font() to create a Font object and store that Font object in a <span style=\"\">variable</span>. You then pass that to Style(), store the resulting Style object in a <span style=\"\">variable</span>, and assign that <span style=\"\">variable</span> to a Cell object’s style attribute. For example, this <span style=\"\">code</span> creates various font styles:",
	"setting-the-font-style-of-cells_key17": "Here, we store a Font object in fontObj1 and then set the A1 Cell object’s font attribute to fontObj1. We repeat the process with another Font object to set the style of a second cell. After you run this <span style=\"\">code</span>, the styles of the A1 and B3 cells in the spreadsheet will be set to custom font styles, as shown in Figure 12-4.",
	"setting-the-font-style-of-cells_key18": "Figure 12-4. A spreadsheet with custom font styles",
	"setting-the-font-style-of-cells_key19": "For cell A1, we set the font name to 'Times New Roman' and set bold to <span style=\"\">true</span>, so our text appears in bold Times New Roman. We didn’t specify a size, so the openpyxl default, 11, is used. In cell B3, our text is italic, with a size of 24; we didn’t specify a font name, so the openpyxl default, Calibri, is used."
}