{
	"dictionaries-and-structuring-data_key1": "Dictionaries and Structuring Data",
	"dictionaries-and-structuring-data_key2": "In this chapter, I will cover the dictionary data type, which provides a flexible way to access and organize data. Then, combining dictionaries with your knowledge of lists from the previous chapter, you’ll learn how to create a data structure to model a tic-tac-toe board.",
	"dictionaries-and-structuring-data_key3": "The Dictionary Data Type",
	"dictionaries-and-structuring-data_key4": "Like a list, a dictionary is a collection of many values. But unlike indexes for lists, indexes for dictionaries can use many different data types, not just <span style=\"\">integers</span>. Indexes for dictionaries are called <span style=\"\">keys</span>, and a <span style=\"\">key</span> with its associated value is called a <span style=\"\">key</span>-value pair.",
	"dictionaries-and-structuring-data_key5": "In <span style=\"\">code</span>, a dictionary is typed with braces, {}. Enter the following into the interactive <span style=\"\">shell</span>:",
	"dictionaries-and-structuring-data_key6": "This assigns a dictionary to the myCat <span style=\"\">variable</span>. This dictionary’s <span style=\"\">keys</span> are 'size', 'color', and 'disposition'. The values for these <span style=\"\">keys</span> are 'fat', 'gray', and 'loud', respectively. You can access these values through their <span style=\"\">keys</span>:",
	"dictionaries-and-structuring-data_key7": "Dictionaries can still use <span style=\"\">integer</span> values as <span style=\"\">keys</span>, just like lists use <span style=\"\">integers</span> for indexes, but they do not have to start at 0 and can be any number.",
	"dictionaries-and-structuring-data_key8": "Dictionaries vs. Lists<br>Unlike lists, items in dictionaries are unordered. The first item in a list named spam would be spam[0]. But there is no “first” item in a dictionary. While the order of items matters for determining whether two lists are the same, it does not matter in what order the <span style=\"\">key</span>-value pairs are typed in a dictionary. Enter the following into the interactive <span style=\"\">shell</span>:",
	"dictionaries-and-structuring-data_key9": "Because dictionaries are not ordered, they can’t be sliced like lists.",
	"dictionaries-and-structuring-data_key10": "Trying to access a <span style=\"\">key</span> that does not exist in a dictionary will result in a <span style=\"\">KeyE</span>rror <span style=\"\">error</span> message, much like a list’s “out-of-range” Index<span style=\"\">Error</span> <span style=\"\">error</span> message. Enter the following into the interactive <span style=\"\">shell</span>, and notice the <span style=\"\">error</span> message that shows up because there is no 'color' <span style=\"\">key</span>:",
	"dictionaries-and-structuring-data_key11": "Though dictionaries are not ordered, the fact that you can have arbitrary values for the <span style=\"\">keys</span> allows you to organize your data in powerful ways. Say you wanted your program to store data about your friends’ birthdays. You can use a dictionary with the names as <span style=\"\">keys</span> and the birthdays as values. Open a new <span style=\"\">file</span> <span style=\"\">editor</span> window and enter the following <span style=\"\">code</span>. <span style=\"\">Save</span> it as birthdays.py.",
	"dictionaries-and-structuring-data_key12": "You create an initial dictionary and store it in birthdays ❶. You can see if the entered name exists as a <span style=\"\">key</span> in the dictionary with the in <span style=\"\">key</span>word ❷, just as you did for lists. If the name is in the dictionary, you access the associated value using square brackets ❸; if not, you can add it using the same square bracket <span style=\"\">syntax</span> combined with the assignment <span style=\"\">operator</span> ❹.",
	"dictionaries-and-structuring-data_key13": "When you run this program, it will look like this:",
	"dictionaries-and-structuring-data_key14": "Enter a name: (blank to quit)<br>Alice<br>Apr 1 is the birthday of Alice<br>Enter a name: (blank to quit)<br>Eve<br>I do not have birthday information for Eve<br>What is their birthday?<br>Dec 5<br>Birthday da<span style=\"\">tab</span>ase updated.<br>Enter a name: (blank to quit)<br>Eve<br>Dec 5 is the birthday of Eve<br>Enter a name: (blank to quit)<br>Of course, all the data you enter in this program is forgotten when the program terminates. You’ll learn how to <span style=\"\">save</span> data to <span style=\"\">files</span> on the hard drive in Chapter 8."
}