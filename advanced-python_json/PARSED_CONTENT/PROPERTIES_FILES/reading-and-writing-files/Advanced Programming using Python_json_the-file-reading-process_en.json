{
	"the-file-reading-process_key1": "The <span style=\"\">File</span> Reading/Writing Process",
	"the-file-reading-process_key2": "Once you are comfor<span style=\"\">tab</span>le working with folders and relative paths, you’ll be able to specify the location of <span style=\"\">files</span> to read and write. The functions covered in the next few sections will apply to plaintext <span style=\"\">files</span>. Plaintext <span style=\"\">files</span> contain only basic text characters and do not include font, size, or color information. Text <span style=\"\">files</span> with the .txt extension or <span style=\"\">Python</span> script <span style=\"\">files</span> with the .py extension are examples of plaintext <span style=\"\">files</span>. These can be opened with Windows’s Notepad or OS X’s TextEdit <span style=\"\">application</span>. Your programs can easily read the contents of plaintext <span style=\"\">files</span> and treat them as an ordinary <span style=\"\">string</span> value.",
	"the-file-reading-process_key3": "Binary <span style=\"\">files</span> are all other <span style=\"\">file</span> types, such as word processing documents, PDFs, images, spreadsheets, and execu<span style=\"\">tab</span>le programs. If you open a binary <span style=\"\">file</span> in Notepad or TextEdit, it will look like scrambled nonsense, like in Figure 8-5.",
	"the-file-reading-process_key4": "The Windows calc.exe program opened in Notepad<br>Figure 8-5. The Windows calc.exe program opened in Notepad",
	"the-file-reading-process_key5": "Since every different type of binary <span style=\"\">file</span> must be handled in its own way, this book will not go into reading and writing raw binary <span style=\"\">files</span> directly. Fortunately, many modules make working with binary <span style=\"\">files</span> easier—you will explore one of them, the shelve module, later in this chapter.",
	"the-file-reading-process_key6": "There are three steps to reading or writing <span style=\"\">files</span> in <span style=\"\">Python</span>.",
	"the-file-reading-process_key7": "Call the open() function to return a <span style=\"\">File</span> object.",
	"the-file-reading-process_key8": "Call the read() or write() method on the <span style=\"\">File</span> object.",
	"the-file-reading-process_key9": "Close the <span style=\"\">file</span> by calling the close() method on the <span style=\"\">File</span> object.",
	"the-file-reading-process_key10": "Opening <span style=\"\">Files</span> with the open() Function",
	"the-file-reading-process_key11": "To open a <span style=\"\">file</span> with the open() function, you pass it a <span style=\"\">string</span> path indicating the <span style=\"\">file</span> you want to open; it can be either an absolute or relative path. The open() function returns a <span style=\"\">File</span> object.",
	"the-file-reading-process_key12": "Try it by creating a text <span style=\"\">file</span> named hello.txt using Notepad or TextEdit. Type Hello world! as the content of this text <span style=\"\">file</span> and <span style=\"\">save</span> it in your user home folder. Then, if you’re using Windows, enter the following into the interactive <span style=\"\">shell</span>:",
	"the-file-reading-process_key13": "If you’re using OS X, enter the following into the interactive <span style=\"\">shell</span> instead:",
	"the-file-reading-process_key14": "Make sure to replace your<i>home</i>folder with your computer username. For example, my username is asweigart, so I’d enter 'C:\\Users\\asweigart\\ hello.txt' on Windows.",
	"the-file-reading-process_key15": "Both these commands will open the <span style=\"\">file</span> in “reading plaintext” mode, or read mode for short. When a <span style=\"\">file</span> is opened in read mode, <span style=\"\">Python</span> lets you only read data from the <span style=\"\">file</span>; you can’t write or modify it in any way. Read mode is the default mode for <span style=\"\">files</span> you open in <span style=\"\">Python</span>. But if you don’t want to rely on <span style=\"\">Python</span>’s defaults, you can explicitly specify the mode by passing the <span style=\"\">string</span> value 'r' as a second argument to open(). So open('/Users/asweigart/ hello.txt', 'r') and open('/Users/asweigart/hello.txt') do the same thing.",
	"the-file-reading-process_key16": "The call to open() returns a <span style=\"\">File</span> object. A <span style=\"\">File</span> object represents a <span style=\"\">file</span> on your computer; it is simply another type of value in <span style=\"\">Python</span>, much like the lists and dictionaries you’re already familiar with. In the previous example, you stored the <span style=\"\">File</span> object in the <span style=\"\">variable</span> hello<span style=\"\">File</span>. Now, whenever you want to read from or write to the <span style=\"\">file</span>, you can do so by calling methods on the <span style=\"\">File</span> object in hello<span style=\"\">File</span>.",
	"the-file-reading-process_key17": "Reading the Contents of <span style=\"\">Files</span>",
	"the-file-reading-process_key18": "Now that you have a <span style=\"\">File</span> object, you can start reading from it. If you want to read the entire contents of a <span style=\"\">file</span> as a <span style=\"\">string</span> value, use the <span style=\"\">File</span> object’s read() method. Let’s continue with the hello.txt <span style=\"\">File</span> object you stored in hello<span style=\"\">File</span>. Enter the following into the interactive <span style=\"\">shell</span>:",
	"the-file-reading-process_key19": "'Hello world!'<br>If you think of the contents of a <span style=\"\">file</span> as a single large <span style=\"\">string</span> value, the read() method returns the <span style=\"\">string</span> that is stored in the <span style=\"\">file</span>.",
	"the-file-reading-process_key20": "Alternatively, you can use the readlines() method to get a list of <span style=\"\">string</span> values from the <span style=\"\">file</span>, one <span style=\"\">string</span> for each line of text. For example, create a <span style=\"\">file</span> named sonnet29.txt in the same directory as hello.txt and write the following text in it:",
	"the-file-reading-process_key21": "When, in disgrace with fortune and men's eyes,<br>I all alone beweep my outcast state,<br>And trouble deaf heaven with my bootless cries,<br>And look upon myself and curse my fate,<br>Make sure to separate the four lines with line breaks. Then enter the following into the interactive <span style=\"\">shell</span>:",
	"the-file-reading-process_key22": "[When, in disgrace with fortune and men's eyes,\\n', ' I all alone beweep my<br>outcast state,\\n', And trouble deaf heaven with my bootless cries,\\n', And<br>look upon myself and curse my fate,']<br>Note that each of the <span style=\"\">string</span> values ends with a newline character, \\n, except for the last line of the <span style=\"\">file</span>. A list of <span style=\"\">strings</span> is often easier to work with than a single large <span style=\"\">string</span> value."
}