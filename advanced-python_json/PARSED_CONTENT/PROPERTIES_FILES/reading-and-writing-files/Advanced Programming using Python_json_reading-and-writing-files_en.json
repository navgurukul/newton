{
	"reading-and-writing-files_key1": "Reading and Writing <span style=\"\">Files</span>",
	"reading-and-writing-files_key2": "<span style=\"\">Variables</span> are a fine way to store data while your program is running, but if you want your data to persist even after your program has finished, you need to <span style=\"\">save</span> it to a <span style=\"\">file</span>. You can think of a <span style=\"\">file</span>’s contents as a single <span style=\"\">string</span> value, potentially gigabytes in size. In this chapter, you will learn how to use <span style=\"\">Python</span> to create, read, and <span style=\"\">save</span> <span style=\"\">files</span> on the hard drive.",
	"reading-and-writing-files_key3": "<span style=\"\">Files</span> and <span style=\"\">File</span> Paths",
	"reading-and-writing-files_key4": "A <span style=\"\">file</span> has two <span style=\"\">key</span> properties: a <span style=\"\">file</span>name (usually written as one word) and a path. The path specifies the location of a <span style=\"\">file</span> on the computer. For example, there is a <span style=\"\">file</span> on my Windows 7 laptop with the <span style=\"\">file</span>name project.docx in the path C:\\Users\\asweigart\\Documents. The part of the <span style=\"\">file</span>name after the last period is called the <span style=\"\">file</span>’s extension and tells you a <span style=\"\">file</span>’s type. project.docx is a Word document, and Users, asweigart, and Documents all refer to folders (also called directories). Folders can contain <span style=\"\">files</span> and other folders. For example, project.docx is in the Documents folder, which is inside the asweigart folder, which is inside the Users folder. Figure 8-1 shows this folder organization.",
	"reading-and-writing-files_key5": "A <span style=\"\">file</span> in a hierarchy of folders",
	"reading-and-writing-files_key6": "The C:\\ part of the path is the root folder, which contains all other folders. On Windows, the root folder is named C:\\ and is also called the C: drive. On OS X and Linux, the root folder is /. In this book, I’ll be using the Windows-style root folder, C:. If you are entering the interactive <span style=\"\">shell</span> examples on OS X or Linux, enter / instead.",
	"reading-and-writing-files_key7": "Additional volumes, such as a DVD drive or USB thumb drive, will appear differently on different operating systems. On Windows, they appear as new, lettered root drives, such as D:\\ or E:. On OS X, they appear as new folders under the /Volumes folder. On Linux, they appear as new folders under the /mnt (“mount”) folder. Also note that while folder names and <span style=\"\">file</span>names are not case sensitive on Windows and OS X, they are case sensitive on Linux.",
	"reading-and-writing-files_key8": "Backslash on Windows and Forward Slash on OS X and Linux",
	"reading-and-writing-files_key9": "On Windows, paths are written using backslashes () as the separator between folder names. OS X and Linux, however, use the forward slash (/) as their path separator. If you want your programs to work on all operating systems, you will have to write your <span style=\"\">Python</span> scripts to handle both cases.",
	"reading-and-writing-files_key10": "Fortunately, this is simple to do with the os.path.join() function. If you pass it the <span style=\"\">string</span> values of individual <span style=\"\">file</span> and folder names in your path, os.path.join() will return a <span style=\"\">string</span> with a <span style=\"\">file</span> path using the correct path separators. Enter the following into the interactive <span style=\"\">shell</span>:",
	"reading-and-writing-files_key11": "I’m running these interactive <span style=\"\">shell</span> examples on Windows, so os.path.join('usr', 'bin', 'spam') returned 'usr\\bin\\spam'. (Notice that the backslashes are doubled because each backslash needs to be escaped by another backslash character.) If I had called this function on OS X or Linux, the <span style=\"\">string</span> would have been 'usr/bin/spam'.",
	"reading-and-writing-files_key12": "The os.path.join() function is helpful if you need to create <span style=\"\">strings</span> for <span style=\"\">file</span>names. These <span style=\"\">strings</span> will be passed to several of the <span style=\"\">file</span>-related functions introduced in this chapter. For example, the following example joins names from a list of <span style=\"\">file</span>names to the end of a folder’s name:",
	"reading-and-writing-files_key13": "C:\\Users\\asweigart\\accounts.txt<br>C:\\Users\\asweigart\\details.csv<br>C:\\Users\\asweigart\\invite.docx"
}