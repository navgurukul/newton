{
	"reading-json-with-the-loads()-function_key1": "Reading JSON with the loads() Function",
	"reading-json-with-the-loads()-function_key2": "To translate a <span style=\"\">string</span> containing JSON data into a <span style=\"\">Python</span> value, pass it to the json.loads() function. (The name means “load <span style=\"\">string</span>,” not “loads.”) Enter the following into the interactive <span style=\"\">shell</span>:",
	"reading-json-with-the-loads()-function_key3": "{'isCat': <span style=\"\">True</span>, 'miceCaught': 0, 'name': 'Zophie', 'felineIQ': None}<br>After you import the json module, you can call loads() and pass it a <span style=\"\">string</span> of JSON data. Note that JSON <span style=\"\">strings</span> always use double quotes. It will return that data as a <span style=\"\">Python</span> dictionary. <span style=\"\">Python</span> dictionaries are not ordered, so the <span style=\"\">key</span>-value pairs may appear in a different order when you print jsonDataAs<span style=\"\">Python</span>Value.",
	"reading-json-with-the-loads()-function_key4": "Writing JSON with the dumps() Function<br>The json.dumps() function (which means “dump <span style=\"\">string</span>,” not “dumps”) will translate a <span style=\"\">Python</span> value into a <span style=\"\">string</span> of JSON-formatted data. Enter the following into the interactive <span style=\"\">shell</span>:",
	"reading-json-with-the-loads()-function_key5": "The value can only be one of the following basic <span style=\"\">Python</span> data types: dictionary, list, <span style=\"\">integer</span>, <span style=\"\">float</span>, <span style=\"\">string</span>, Boolean, or None."
}