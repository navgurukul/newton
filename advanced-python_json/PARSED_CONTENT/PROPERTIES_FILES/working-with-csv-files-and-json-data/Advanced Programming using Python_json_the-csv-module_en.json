{
	"the-csv-module_key1": "The CSV Module",
	"the-csv-module_key2": "Each line in a CSV <span style=\"\">file</span> represents a row in the spreadsheet, and commas separate the cells in the row. For example, the spreadsheet example.xlsx from <span><a href=\"http://nostarch.com/automatestuff/ \">http://nostarch.com/automatestuff/ </a></span> would look like this in a CSV <span style=\"\">file</span>:",
	"the-csv-module_key3": "4/5/2015 13:34,Apples,73<br>4/5/2015 3:41,Cherries,85<br>4/6/2015 12:46,Pears,14<br>4/8/2015 8:59,Oranges,52<br>4/10/2015 2:07,Apples,152<br>4/10/2015 18:10,Bananas,23<br>4/10/2015 2:40,Strawberries,98<br>I will use this <span style=\"\">file</span> for this chapter’s interactive <span style=\"\">shell</span> examples. You can download example.csv from <span><a href=\"http://nostarch.com/automatestuff/\">http://nostarch.com/automatestuff/</a></span> or enter the text into a text <span style=\"\">editor</span> and <span style=\"\">save</span> it as example.csv.",
	"the-csv-module_key4": "CSV <span style=\"\">files</span> are simple, lacking many of the features of an Excel spreadsheet. For example, CSV <span style=\"\">files</span>",
	"the-csv-module_key5": "Don’t have types for their values—everything is a <span style=\"\">string</span>",
	"the-csv-module_key6": "Don’t have settings for font size or color",
	"the-csv-module_key7": "Don’t have multiple worksheets",
	"the-csv-module_key8": "Can’t specify cell widths and heights",
	"the-csv-module_key9": "Can’t have merged cells",
	"the-csv-module_key10": "Can’t have images or charts embedded in them",
	"the-csv-module_key11": "The advantage of CSV <span style=\"\">files</span> is simplicity. CSV <span style=\"\">files</span> are widely supported by many types of programs, can be viewed in text <span style=\"\">editors</span> (including IDLE’s <span style=\"\">file</span> <span style=\"\">editor</span>), and are a straightforward way to represent spreadsheet data. The CSV format is exactly as advertised: It’s just a text <span style=\"\">file</span> of comma-separated values.",
	"the-csv-module_key12": "Since CSV <span style=\"\">files</span> are just text <span style=\"\">files</span>, you might be tempted to read them in as a <span style=\"\">string</span> and then process that <span style=\"\">string</span> using the techniques you learned in Chapter 8. For example, since each cell in a CSV <span style=\"\">file</span> is separated by a comma, maybe you could just call the split() method on each line of text to get the values. But not every comma in a CSV <span style=\"\">file</span> represents the boundary between two cells. CSV <span style=\"\">files</span> also have their own set of escape characters to allow commas and other characters to be included as part of the values. The split() method doesn’t handle these escape characters. Because of these potential pitfalls, you should always use the csv module for reading and writing CSV <span style=\"\">files</span>."
}