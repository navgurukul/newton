[
  {
    "component": "header",
    "variant": 1,
    "value": "the-findall()-method_key1"
  },
  {
    "component": "text",
    "value": "the-findall()-method_key2"
  },
  {
    "component": "code",
    "type": "python",
    "title": "",
    "value": ">>> phoneNumRegex = re.compile(r'\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d')<br>>>> mo = phoneNumRegex.search('Cell: 415-555-9999 Work: 212-555-0000')<br>>>> mo.group()<br>'415-555-9999'"
  },
  {
    "component": "text",
    "value": "the-findall()-method_key3"
  },
  {
    "component": "code",
    "type": "python",
    "title": "",
    "value": ">>> phoneNumRegex = re.compile(r'\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d') # has no groups<br>>>> phoneNumRegex.findall('Cell: 415-555-9999 Work: 212-555-0000')<br>['415-555-9999', '212-555-0000']"
  },
  {
    "component": "text",
    "value": "the-findall()-method_key4"
  },
  {
    "component": "code",
    "type": "python",
    "title": "",
    "value": ">>> phoneNumRegex = re.compile(r'(\\d\\d\\d)-(\\d\\d\\d)-(\\d\\d\\d\\d)') # has groups<br>>>> phoneNumRegex.findall('Cell: 415-555-9999 Work: 212-555-0000')<br>[('415', '555', '9999'), ('212', '555', '0000')]"
  },
  {
    "component": "text",
    "value": "the-findall()-method_key5"
  },
  {
    "component": "text",
    "value": "the-findall()-method_key6"
  },
  {
    "component": "text",
    "value": "the-findall()-method_key7"
  }
]