[
  {
    "component": "header",
    "variant": 1,
    "value": "optional-matching-with-the-question-mark_key1"
  },
  {
    "component": "text",
    "value": "optional-matching-with-the-question-mark_key2"
  },
  {
    "component": "code",
    "type": "python",
    "title": "",
    "value": ">>> batRegex = re.compile(r'Bat(wo)?man')<br>>>> mo1 = batRegex.search('The Adventures of Batman')<br>>>> mo1.group()<br>'Batman'<br><br>>>> mo2 = batRegex.search('The Adventures of Batwoman')<br>>>> mo2.group()<br>'Batwoman'"
  },
  {
    "component": "text",
    "value": "optional-matching-with-the-question-mark_key3"
  },
  {
    "component": "text",
    "value": "optional-matching-with-the-question-mark_key4"
  },
  {
    "component": "code",
    "type": "python",
    "title": "",
    "value": ">>> phoneRegex = re.compile(r'(\\d\\d\\d-)?\\d\\d\\d-\\d\\d\\d\\d')<br>>>> mo1 = phoneRegex.search('My number is 415-555-4242')<br>>>> mo1.group()<br>'415-555-4242'<br><br>>>> mo2 = phoneRegex.search('My number is 555-4242')<br>>>> mo2.group()<br>'555-4242'"
  },
  {
    "component": "text",
    "value": "optional-matching-with-the-question-mark_key5"
  },
  {
    "component": "text",
    "value": "optional-matching-with-the-question-mark_key6"
  },
  {
    "component": "header",
    "variant": 1,
    "value": "optional-matching-with-the-question-mark_key7"
  },
  {
    "component": "text",
    "value": "optional-matching-with-the-question-mark_key8"
  },
  {
    "component": "code",
    "type": "python",
    "title": "",
    "value": ">>> batRegex = re.compile(r'Bat(wo)*man')<br>>>> mo1 = batRegex.search('The Adventures of Batman')<br>>>> mo1.group()<br>'Batman'<br><br>>>> mo2 = batRegex.search('The Adventures of Batwoman')<br>>>> mo2.group()<br>'Batwoman'<br><br>>>> mo3 = batRegex.search('The Adventures of Batwowowowoman')<br>>>> mo3.group()<br>'Batwowowowoman'"
  },
  {
    "component": "text",
    "value": "optional-matching-with-the-question-mark_key9"
  },
  {
    "component": "text",
    "value": "optional-matching-with-the-question-mark_key10"
  },
  {
    "component": "header",
    "variant": 1,
    "value": "optional-matching-with-the-question-mark_key11"
  },
  {
    "component": "text",
    "value": "optional-matching-with-the-question-mark_key12"
  },
  {
    "component": "code",
    "type": "python",
    "title": "",
    "value": ">>> batRegex = re.compile(r'Bat(wo)+man')<br>>>> mo1 = batRegex.search('The Adventures of Batwoman')<br>>>> mo1.group()<br>'Batwoman'<br><br>>>> mo2 = batRegex.search('The Adventures of Batwowowowoman')<br>>>> mo2.group()<br>'Batwowowowoman'<br><br>>>> mo3 = batRegex.search('The Adventures of Batman')<br>>>> mo3 == None<br>True"
  },
  {
    "component": "text",
    "value": "optional-matching-with-the-question-mark_key13"
  },
  {
    "component": "text",
    "value": "optional-matching-with-the-question-mark_key14"
  }
]