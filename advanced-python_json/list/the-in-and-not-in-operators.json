[
	{
		"component": "header",
		"variant": 1,
		"value": "The in and not in <span style=\"\">Operators</span>"
	},
	{
		"component": "text",
		"value": "You can determine whether a value is or isnâ€™t in a list with the in and not in <span style=\"\">operators</span>. Like other <span style=\"\">operators</span>, in and not in are used in expressions and connect two values: a value to look for in a list and the list where it may be found. These expressions will evaluate to a Boolean value. Enter the following into the interactive <span style=\"\">shell</span>:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> 'howdy' in ['hello', 'hi', 'howdy', 'heyas']<br>True<br>>>> spam = ['hello', 'hi', 'howdy', 'heyas']<br>>>> 'cat' in spam<br>False<br>>>> 'howdy' not in spam<br>False<br>>>> 'cat' not in spam<br>True"
	},
	{
		"component": "text",
		"value": "For example, the following program lets the user type in a pet name and then checks to see whether the name is in a list of pets. Open a new <span style=\"\">file</span> <span style=\"\">editor</span> window, enter the following <span style=\"\">code</span>, and <span style=\"\">save</span> it as myPets.py:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "myPets = ['Zophie', 'Pooka', 'Fat-tail']<br>print('Enter a pet name:')<br>name = input()<br>if name not in myPets:<br>    print('I do not have a pet named ' + name)<br>else:<br>    print(name + ' is my pet.')"
	},
	{
		"component": "text",
		"value": "The <span style=\"\">output</span> may look something like this:"
	},
	{
		"component": "text",
		"value": "Enter a pet name:<br>Footfoot<br>I do not have a pet named Footfoot"
	}
]