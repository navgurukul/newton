[
	{
		"component": "header",
		"variant": 1,
		"value": "Getting Individual Values in a List with Indexes"
	},
	{
		"component": "text",
		"value": "Say you have the list ['cat', 'bat', 'rat', 'elephant'] stored in a <span style=\"\">variable</span> named spam. The <span style=\"\">Python</span> <span style=\"\">code</span> spam[0] would evaluate to 'cat', and spam[1] would evaluate to 'bat', and so on. The <span style=\"\">integer</span> inside the square brackets that follows the list is called an index. The first value in the list is at index 0, the second value is at index 1, the third value is at index 2, and so on. Figure 4-1 shows a list value assigned to spam, along with what the index expressions would evaluate to."
	},
	{
		"component": "text",
		"value": "A list value stored in the <span style=\"\">variable</span> spam, showing which value each index refers to<br>Figure 4-1. A list value stored in the <span style=\"\">variable</span> spam, showing which value each index refers to"
	},
	{
		"component": "text",
		"value": "For example, type the following expressions into the interactive <span style=\"\">shell</span>. Start by assigning a list to the <span style=\"\">variable</span> spam."
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> spam = ['cat', 'bat', 'rat', 'elephant']<br>   >>> spam[0]<br>   'cat'<br>   >>> spam[1]<br>   'bat'<br>   >>> spam[2]<br>   'rat'<br>   >>> spam[3]<br>   'elephant'<br>   >>> ['cat', 'bat', 'rat', 'elephant'][3]<br>   'elephant'<br>❶ >>> 'Hello ' + spam[0]<br>❷ 'Hello cat'<br>   >>> 'The ' + spam[1] + ' ate the ' + spam[0] + '.'<br>   'The bat ate the cat.'"
	},
	{
		"component": "text",
		"value": "Notice that the expression 'Hello ' + spam[0] ❶ evaluates to 'Hello ' + 'cat' because spam[0] evaluates to the <span style=\"\">string</span> 'cat'. This expression in turn evaluates to the <span style=\"\">string</span> value 'Hello cat' ❷."
	},
	{
		"component": "text",
		"value": "<span style=\"\">Python</span> will give you an Index<span style=\"\">Error</span> <span style=\"\">error</span> message if you use an index that exceeds the number of values in your list value."
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> spam = ['cat', 'bat', 'rat', 'elephant']<br>>>> spam[10000]<br>Traceback (most recent call last):<br>  File \"<pyshell#9>\", line 1, in <module><br>    spam[10000]<br>IndexError: list index out of range"
	},
	{
		"component": "text",
		"value": "Indexes can be only <span style=\"\">integer</span> values, not <span style=\"\">floats</span>. The following example will cause a Type<span style=\"\">Error</span> <span style=\"\">error</span>:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> spam = ['cat', 'bat', 'rat', 'elephant']<br>>>> spam[1]<br>'bat'<br>>>> spam[1.0]<br>Traceback (most recent call last):<br>  File \"<pyshell#13>\", line 1, in <module><br>    spam[1.0]<br>TypeError: list indices must be integers, not float<br>>>> spam[int(1.0)]<br>'bat'<br>Lists can also contain other list values. The values in these lists of lists can be accessed using multiple indexes, like so:<br><br><br>>>> spam = [['cat', 'bat'], [10, 20, 30, 40, 50]]<br>>>> spam[0]<br>['cat', 'bat']<br>>>> spam[0][1]<br>'bat'<br>>>> spam[1][4]<br>50"
	},
	{
		"component": "text",
		"value": "The first index dictates which list value to use, and the second indicates the value within the list value. For example, spam[0][1] prints 'bat', the second value in the first list. If you only use one index, the program will print the full list value at that index."
	}
]