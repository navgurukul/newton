[
	{
		"component": "header",
		"variant": 1,
		"value": "The <span style=\"\">keys</span>(), values(), and items() Methods"
	},
	{
		"component": "text",
		"value": "There are three dictionary methods that will return list-like values of the dictionaryâ€™s <span style=\"\">keys</span>, values, or both <span style=\"\">keys</span> and values: <span style=\"\">keys</span>(), values(), and items(). The values returned by these methods are not <span style=\"\">true</span> lists: They cannot be modified and do not have an append() method. But these data types (dict<i><span style=\"\">keys</span>, dict</i>values, and dict_items, respectively) can be used in for <span style=\"\">loops</span>. To see how these methods work, enter the following into the interactive <span style=\"\">shell</span>:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> spam = {'color': 'red', 'age': 42}<br>>>> for v in spam.values():<br>        print(v)<br><br>red<br>42<br>Here, a for loop iterates over each of the values in the spam dictionary. A for loop can also iterate over the keys or both keys and values:<br><br><br>>>> for k in spam.keys():<br>        print(k)<br><br>color<br>age<br>>>> for i in spam.items():<br>        print(i)<br><br>('color', 'red')<br>('age', 42)"
	},
	{
		"component": "text",
		"value": "Using the <span style=\"\">keys</span>(), values(), and items() methods, a for <span style=\"\">loop</span> can iterate over the <span style=\"\">keys</span>, values, or <span style=\"\">key</span>-value pairs in a dictionary, respectively. Notice that the values in the dict_items value returned by the items() method are tuples of the <span style=\"\">key</span> and value."
	},
	{
		"component": "text",
		"value": "If you want a <span style=\"\">true</span> list from one of these methods, pass its list-like return value to the list() function. Enter the following into the interactive <span style=\"\">shell</span>:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> spam = {'color': 'red', 'age': 42}<br>>>> spam.keys()<br>dict_keys(['color', 'age'])<br>>>> list(spam.keys())<br>['color', 'age']"
	},
	{
		"component": "text",
		"value": "The list(spam.<span style=\"\">keys</span>()) line takes the dict_<span style=\"\">keys</span> value returned from <span style=\"\">keys</span>() and passes it to list(), which then returns a list value of ['color', 'age']."
	},
	{
		"component": "text",
		"value": "You can also use the multiple assignment trick in a for <span style=\"\">loop</span> to assign the <span style=\"\">key</span> and value to separate <span style=\"\">variables</span>. Enter the following into the interactive <span style=\"\">shell</span>:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> spam = {'color': 'red', 'age': 42}<br>>>> for k, v in spam.items():<br>        print('Key: ' + k + ' Value: ' + str(v))<br><br>Key: age Value: 42<br>Key: color Value: red"
	}
]