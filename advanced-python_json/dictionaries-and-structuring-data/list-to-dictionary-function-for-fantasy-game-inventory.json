[
	{
		"component": "header",
		"variant": 1,
		"value": "List to Dictionary Function for Fantasy Game Inventory"
	},
	{
		"component": "text",
		"value": "Imagine that a vanquished dragon’s loot is represented as a list of <span style=\"\">strings</span> like this:"
	},
	{
		"component": "text",
		"value": "dragonLoot = ['gold coin', 'dagger', 'gold coin', 'gold coin', 'ruby']<br>Write a function named addToInventory(inventory, addedItems), where the inventory parameter is a dictionary representing the player’s inventory (like in the previous project) and the addedItems parameter is a list like dragonLoot. The addToInventory() function should return a dictionary that represents the updated inventory. Note that the addedItems list can contain multiples of the same item. Your <span style=\"\">code</span> could look something like this:"
	},
	{
		"component": "text",
		"value": "def addToInventory(inventory, addedItems):<br>    # your <span style=\"\">code</span> goes here"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "inv = {'gold coin': 42, 'rope': 1}<br>dragonLoot = ['gold coin', 'dagger', 'gold coin', 'gold coin', 'ruby']<br>inv = addToInventory(inv, dragonLoot)<br>displayInventory(inv)"
	},
	{
		"component": "text",
		"value": "The previous program (with your displayInventory() function from the previous project) would <span style=\"\">output</span> the following:"
	},
	{
		"component": "text",
		"value": "Inventory:<br>45 gold coin<br>1 rope<br>1 ruby<br>1 dagger"
	},
	{
		"component": "text",
		"value": "Total number of items: 48"
	}
]