[
	{
		"component": "header",
		"variant": 1,
		"value": "Writer Objects"
	},
	{
		"component": "text",
		"value": "A Writer object lets you write data to a CSV <span style=\"\">file</span>. To create a Writer object, you use the csv.writer() function. Enter the following into the interactive <span style=\"\">shell</span>:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> import csv<br>❶ >>> outputFile = open('output.csv', 'w', newline='')<br>❷ >>> outputWriter = csv.writer(outputFile)<br>   >>> outputWriter.writerow(['spam', 'eggs', 'bacon', 'ham'])"
	},
	{
		"component": "text",
		"value": "21"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> outputWriter.writerow(['Hello, world!', 'eggs', 'bacon', 'ham'])"
	},
	{
		"component": "text",
		"value": "32"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> outputWriter.writerow([1, 2, 3.141592, 4])"
	},
	{
		"component": "text",
		"value": "16"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> outputFile.close()"
	},
	{
		"component": "text",
		"value": "First, call open() and pass it 'w' to open a <span style=\"\">file</span> in write mode ❶. This will create the object you can then pass to csv.writer() ❷ to create a Writer object."
	},
	{
		"component": "text",
		"value": "On Windows, you’ll also need to pass a blank <span style=\"\">string</span> for the open() function’s newline <span style=\"\">key</span>word argument. For technical reasons beyond the scope of this book, if you forget to set the newline argument, the rows in <span style=\"\">output</span>.csv will be double-spaced, as shown in Figure 14-1."
	},
	{
		"component": "text",
		"value": "Figure 14-1. If you forget the newline='' <span style=\"\">key</span>word argument in open(), the CSV <span style=\"\">file</span> will be double-spaced."
	},
	{
		"component": "text",
		"value": "The writerow() method for Writer objects takes a list argument. Each value in the list is placed in its own cell in the <span style=\"\">output</span> CSV <span style=\"\">file</span>. The return value of writerow() is the number of characters written to the <span style=\"\">file</span> for that row (including newline characters)."
	},
	{
		"component": "text",
		"value": "This <span style=\"\">code</span> produces an <span style=\"\">output</span>.csv <span style=\"\">file</span> that looks like this:"
	},
	{
		"component": "text",
		"value": "spam,eggs,bacon,ham<br>\"Hello, world!\",eggs,bacon,ham<br>1,2,3.141592,4<br>Notice how the Writer object automatically escapes the comma in the value 'Hello, world!' with double quotes in the CSV <span style=\"\">file</span>. The csv module <span style=\"\">saves</span> you from having to handle these special cases yourself."
	}
]