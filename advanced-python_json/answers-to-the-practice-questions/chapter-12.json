[
	{
		"component": "header",
		"variant": 1,
		"value": "Chapter 12"
	},
	{
		"component": "text",
		"value": "The openpyxl.load_workbook() function returns a Workbook object."
	},
	{
		"component": "text",
		"value": "The get<i>sheet</i>names() method returns a Worksheet object."
	},
	{
		"component": "text",
		"value": "Call wb.get<i>sheet</i>by_name('Sheet1')."
	},
	{
		"component": "text",
		"value": "Call wb.get<i>active</i>sheet()."
	},
	{
		"component": "text",
		"value": "sheet['C5'].value or sheet.cell(row=5, column=3).value"
	},
	{
		"component": "text",
		"value": "sheet['C5'] = 'Hello' or sheet.cell(row=5, column=3).value = 'Hello'"
	},
	{
		"component": "text",
		"value": "cell.row and cell.column"
	},
	{
		"component": "text",
		"value": "They return the highest column and row with values in the sheet, respectively, as <span style=\"\">integer</span> values."
	},
	{
		"component": "text",
		"value": "openpyxl.cell.column<i>index</i>from_<span style=\"\">string</span>('M')"
	},
	{
		"component": "text",
		"value": "openpyxl.cell.get<i>column</i>letter(14)"
	},
	{
		"component": "text",
		"value": "sheet['A1':'F1']"
	},
	{
		"component": "text",
		"value": "wb.<span style=\"\">save</span>('example.xlsx’)"
	},
	{
		"component": "text",
		"value": "A formula is set the same way as any value. Set the cell’s value attribute to a <span style=\"\">string</span> of the formula text. Remember that formulas begin with the = sign."
	},
	{
		"component": "text",
		"value": "sheet.row_dimensions[5].height = 100"
	},
	{
		"component": "text",
		"value": "sheet.column_dimensions['C'].hidden = <span style=\"\">True</span>"
	},
	{
		"component": "text",
		"value": "OpenPyXL 2.0.5 does not load freeze panes, print titles, images, or charts."
	},
	{
		"component": "text",
		"value": "Freeze panes are rows and columns that will always appear on the screen. They are useful for headers."
	},
	{
		"component": "text",
		"value": "openpyxl.charts.Reference(), openpyxl.charts.Series(), openpyxl.charts. BarChart(), chartObj.append(seriesObj), and add_chart()"
	}
]