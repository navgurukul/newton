[
	{
		"component": "header",
		"variant": 1,
		"value": "Chapter 2"
	},
	{
		"component": "text",
		"value": "<span style=\"\">True</span> and <span style=\"\">False</span>, using capital T and F, with the rest of the word in lowercase"
	},
	{
		"component": "text",
		"value": "and, or, and not"
	},
	{
		"component": "text",
		"value": "<span style=\"\">True</span> and <span style=\"\">True</span> is <span style=\"\">True</span>."
	},
	{
		"component": "text",
		"value": "<span style=\"\">True</span> and <span style=\"\">False</span> is <span style=\"\">False</span>."
	},
	{
		"component": "text",
		"value": "<span style=\"\">False</span> and <span style=\"\">True</span> is <span style=\"\">False</span>."
	},
	{
		"component": "text",
		"value": "<span style=\"\">False</span> and <span style=\"\">False</span> is <span style=\"\">False</span>."
	},
	{
		"component": "text",
		"value": "<span style=\"\">True</span> or <span style=\"\">True</span> is <span style=\"\">True</span>."
	},
	{
		"component": "text",
		"value": "<span style=\"\">True</span> or <span style=\"\">False</span> is <span style=\"\">True</span>."
	},
	{
		"component": "text",
		"value": "<span style=\"\">False</span> or <span style=\"\">True</span> is <span style=\"\">True</span>."
	},
	{
		"component": "text",
		"value": "<span style=\"\">False</span> or <span style=\"\">False</span> is <span style=\"\">False</span>."
	},
	{
		"component": "text",
		"value": "not <span style=\"\">True</span> is <span style=\"\">False</span>."
	},
	{
		"component": "text",
		"value": "not <span style=\"\">False</span> is <span style=\"\">True</span>."
	},
	{
		"component": "text",
		"value": "<span style=\"\">False</span><br><span style=\"\">False</span><br><span style=\"\">True</span><br><span style=\"\">False</span><br><span style=\"\">False</span><br><span style=\"\">True</span><br>==, !=, <, >, <=, and >=."
	},
	{
		"component": "text",
		"value": "== is the equal to <span style=\"\">operator</span> that compares two values and evaluates to a Boolean, while = is the assignment <span style=\"\">operator</span> that stores a value in a <span style=\"\">variable</span>."
	},
	{
		"component": "text",
		"value": "A condition is an expression used in a flow control <span style=\"\">statement</span> that evaluates to a Boolean value."
	},
	{
		"component": "text",
		"value": "The three blocks are everything inside the if <span style=\"\">statement</span> and the lines print('bacon') and print('ham')."
	},
	{
		"component": "text",
		"value": "print('eggs')<br>if spam &gt; 5:<br>    print('bacon')<br>else:<br>    print('ham')<br>print('spam')<br>The <span style=\"\">code</span>:"
	},
	{
		"component": "text",
		"value": "if spam == 1:<br>    print('Hello')<br>elif spam == 2:<br>    print('Howdy')<br>else:<br>    print('Greetings!')<br>Press CTRL-C to stop a program stuck in an infinite <span style=\"\">loop</span>."
	},
	{
		"component": "text",
		"value": "The break <span style=\"\">statement</span> will move the execution outside and just after a <span style=\"\">loop</span>. The continue <span style=\"\">statement</span> will move the execution to the start of the <span style=\"\">loop</span>."
	},
	{
		"component": "text",
		"value": "They all do the same thing. The range(10) call ranges from 0 up to (but not including) 10, range(0, 10) explicitly tells the <span style=\"\">loop</span> to start at 0, and range(0, 10, 1) explicitly tells the <span style=\"\">loop</span> to increase the <span style=\"\">variable</span> by 1 on each iteration."
	},
	{
		"component": "text",
		"value": "The <span style=\"\">code</span>:"
	},
	{
		"component": "text",
		"value": "for i in range(1, 11):<br>    print(i)<br>and:"
	},
	{
		"component": "text",
		"value": "i = 1<br>while i <= 10:<br>    print(i)<br>    i = i + 1<br>This function can be called with spam.bacon()."
	}
]