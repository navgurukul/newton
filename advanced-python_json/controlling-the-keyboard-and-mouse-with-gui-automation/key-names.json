[
	{
		"component": "header",
		"variant": 1,
		"value": "<span style=\"\">Key</span> Names"
	},
	{
		"component": "text",
		"value": "Not all <span style=\"\">keys</span> are easy to represent with single text characters. For example, how do you represent SHIFT or the left arrow <span style=\"\">key</span> as a single character? In PyAutoGUI, these <span style=\"\">key</span>board <span style=\"\">keys</span> are represented by short <span style=\"\">string</span> values instead: 'esc' for the ESC <span style=\"\">key</span> or 'enter' for the ENTER <span style=\"\">key</span>."
	},
	{
		"component": "text",
		"value": "Instead of a single <span style=\"\">string</span> argument, a list of these <span style=\"\">key</span>board <span style=\"\">key</span> <span style=\"\">strings</span> can be passed to typewrite(). For example, the following call presses the A <span style=\"\">key</span>, then the B <span style=\"\">key</span>, then the left arrow <span style=\"\">key</span> twice, and finally the X and Y <span style=\"\">keys</span>:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": ">>> pyautogui.typewrite(['a', 'b', 'left', 'left', 'X', 'Y'])"
	},
	{
		"component": "text",
		"value": "Because pressing the left arrow <span style=\"\">key</span> moves the <span style=\"\">key</span>board cursor, this will <span style=\"\">output</span> XYab. <span style=\"\">Tab</span>le 18-1 lists the PyAutoGUI <span style=\"\">key</span>board <span style=\"\">key</span> <span style=\"\">strings</span> that you can pass to typewrite() to simulate pressing any combination of <span style=\"\">keys</span>."
	},
	{
		"component": "text",
		"value": "You can also examine the pyautogui.<span style=\"\">KEY</span>BOARD_<span style=\"\">KEYS</span> list to see all possible <span style=\"\">key</span>board <span style=\"\">key</span> <span style=\"\">strings</span> that PyAutoGUI will accept. The 'shift' <span style=\"\">string</span> refers to the left SHIFT <span style=\"\">key</span> and is equivalent to 'shiftleft'. The same applies for 'ctrl', 'alt', and 'win' <span style=\"\">strings</span>; they all refer to the left-side <span style=\"\">key</span>."
	},
	{
		"component": "text",
		"value": "<span style=\"\">Tab</span>le 18-1. Py<span style=\"\">Key</span>board Attributes"
	},
	{
		"component": "text",
		"value": "<span style=\"\">Key</span>board <span style=\"\">key</span> <span style=\"\">string</span>                                                             Meaning"
	},
	{
		"component": "text",
		"value": "'a', 'b', 'c', 'A', 'B', 'C', '1', '2', '3', '!', '@', '#', and so on         The <span style=\"\">keys</span> for single characters"
	},
	{
		"component": "text",
		"value": "'enter' (or 'return' or '\\n')                                                 The ENTER <span style=\"\">key</span>"
	},
	{
		"component": "text",
		"value": "'esc'                                                                         The ESC <span style=\"\">key</span>"
	},
	{
		"component": "text",
		"value": "'shiftleft', 'shiftright'                                                    The left and right SHIFT <span style=\"\">keys</span>"
	},
	{
		"component": "text",
		"value": "'altleft', 'altright'                                                        The left and right ALT <span style=\"\">keys</span>"
	},
	{
		"component": "text",
		"value": "'ctrlleft', 'ctrlright'                                                     The left and right CTRL <span style=\"\">keys</span>"
	},
	{
		"component": "text",
		"value": "'<span style=\"\">tab</span>' (or '\\t')                                                                The <span style=\"\">TAB</span> <span style=\"\">key</span>"
	},
	{
		"component": "text",
		"value": "'backspace', 'delete'                                                         The BACKSPACE and DELETE <span style=\"\">keys</span>"
	},
	{
		"component": "text",
		"value": "'pageup', 'pagedown'                                                         The PAGE UP and PAGE DOWN <span style=\"\">keys</span>"
	},
	{
		"component": "text",
		"value": "'home', 'end'                                                                 The HOME and END <span style=\"\">keys</span>"
	},
	{
		"component": "text",
		"value": "'up', 'down', 'left', 'right'                                                 The up, down, left, and right arrow <span style=\"\">keys</span>"
	},
	{
		"component": "text",
		"value": "'f1', 'f2', 'f3', and so on                                                 The F1 to F12 <span style=\"\">keys</span>"
	},
	{
		"component": "text",
		"value": "'volumemute', 'volumedown', 'volumeup'                                            The mute, volume down, and volume up <span style=\"\">keys</span> (some <span style=\"\">key</span>boards do not have these <span style=\"\">keys</span>, but your operating system will still be able to understand these simulated <span style=\"\">key</span>presses)"
	},
	{
		"component": "text",
		"value": "'pause'                                                                        The PAUSE <span style=\"\">key</span>"
	},
	{
		"component": "text",
		"value": "'capslock', 'numlock', 'scrolllock'                                            The CAPS LOCK, NUM LOCK, and SCROLL LOCK <span style=\"\">keys</span>"
	},
	{
		"component": "text",
		"value": "'insert'                                                                     The INS or INSERT <span style=\"\">key</span>"
	},
	{
		"component": "text",
		"value": "'printscreen'                                                                 The PRTSC or PRINT SCREEN <span style=\"\">key</span>"
	},
	{
		"component": "text",
		"value": "'winleft', 'winright'                                                        The left and right WIN <span style=\"\">keys</span> (on Windows)"
	},
	{
		"component": "text",
		"value": "'command'                                                                     The Command () <span style=\"\">key</span> (on OS X) 'option' The OPTION <span style=\"\">key</span> (on OS X)"
	}
]