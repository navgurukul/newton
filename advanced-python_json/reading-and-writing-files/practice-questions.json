[
	{
		"component": "header",
		"variant": 1,
		"value": "Practice Questions"
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "What is a relative path relative to?",
		"decoration": {
			"type": "number",
			"value": 1
		}
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "What does an absolute path start with?",
		"decoration": {
			"type": "number",
			"value": 2
		}
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "What do the os.getcwd() and os.chdir() functions do?",
		"decoration": {
			"type": "number",
			"value": 3
		}
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "What are the . and .. folders?",
		"decoration": {
			"type": "number",
			"value": 4
		}
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "In C:\\bacon\\eggs\\spam.txt, which part is the dir name, and which part is the base name?",
		"decoration": {
			"type": "number",
			"value": 5
		}
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "What are the three “mode” arguments that can be passed to the open() function?",
		"decoration": {
			"type": "number",
			"value": 6
		}
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "What happens if an existing file is opened in write mode?",
		"decoration": {
			"type": "number",
			"value": 7
		}
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "What is the difference between the read() and readlines() methods?",
		"decoration": {
			"type": "number",
			"value": 8
		}
	},
	{
		"component": "text",
		"value": "Q:"
	},
	{
		"component": "text",
		"value": "What data structure does a shelf value resemble?",
		"decoration": {
			"type": "number",
			"value": 9
		}
	},
	{
		"component": "header",
		"variant": 1,
		"value": "Practice Projects"
	},
	{
		"component": "text",
		"value": "For practice, design and write the following programs."
	},
	{
		"component": "header",
		"variant": 1,
		"value": "Extending the Multiclipboard"
	},
	{
		"component": "text",
		"value": "Extend the multiclipboard program in this chapter so that it has a delete <<span style=\"\">key</span>word> command line argument that will delete a <span style=\"\">key</span>word from the shelf. Then add a delete command line argument that will delete all <span style=\"\">key</span>words."
	},
	{
		"component": "header",
		"variant": 1,
		"value": "Mad Libs"
	},
	{
		"component": "text",
		"value": "Create a Mad Libs program that reads in text <span style=\"\">files</span> and lets the user add their own text anywhere the word ADJECTIVE, NOUN, ADVERB, or VERB appears in the text <span style=\"\">file</span>. For example, a text <span style=\"\">file</span> may look like this:"
	},
	{
		"component": "text",
		"value": "The ADJECTIVE panda walked to the NOUN and then VERB. A nearby NOUN was<br>unaffected by these events.<br>The program would find these occurrences and prompt the user to replace them."
	},
	{
		"component": "text",
		"value": "Enter an adjective:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "silly"
	},
	{
		"component": "text",
		"value": "Enter a noun:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "chandelier"
	},
	{
		"component": "text",
		"value": "Enter a verb:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "screamed"
	},
	{
		"component": "text",
		"value": "Enter a noun:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "pickup truck"
	},
	{
		"component": "text",
		"value": "The following text <span style=\"\">file</span> would then be created:"
	},
	{
		"component": "text",
		"value": "The silly panda walked to the chandelier and then screamed. A nearby pickup<br>truck was unaffected by these events.<br>The results should be printed to the screen and <span style=\"\">save</span>d to a new text <span style=\"\">file</span>."
	},
	{
		"component": "header",
		"variant": 1,
		"value": "Regex Search"
	},
	{
		"component": "text",
		"value": "Write a program that opens all .txt <span style=\"\">files</span> in a folder and searches for any line that matches a user-supplied regular expression. The results should be printed to the screen."
	}
]