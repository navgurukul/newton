{
	"api-again_key1": "## It's me - API - again ;)\n\n\n",
	"api-again_key2": "Ab aap yeh link -\n",
	"api-again_key3": "http://saral.navgurukul.org/api/courses/74/exercises\n",
	"api-again_key4": "open karein. Iss link mei, iss particular course ki saari\nexercises ki list hai. Aur\n",
	"api-again_key5": ",\n",
	"api-again_key6": ",\n",
	"api-again_key7": "jaisi\nkuch aur bhi information hai. Iss information ko bhi hum aage use karenge.\n",
	"api-again_key8": "Jo `course_id` user ne select ki hai, uske corresponding aapko yeh API\ncall karni hai. Phir jab aap yeh API call kar lenge, toh aapko kuch\nuss tarah ka data milega jaisa uppar wale link se mila tha. Ab aapko\nyeh exercise print karni hai `terminal` par. Kuch baatein jo important hai:\n",
	"api-again_key9": "1 - Agar `childExercises` hai kisi bhi exercise ki toh, unko bhi print karni\nhai. Kyuki woh childExercise hai, toh woh thoda sa side mei print karo, spaces\ndekara. Unki numbering ke liye, socho kaise kar sakte ho.\n",
	"api-again_key10": "2 - Jaise aapne pehle `id` nikali thi, user_choice ke vajah se, aise hi iss baar bhi\naapko, exercise ka `slug` nikal kar rakhna hai. Toh aapki numbering aisa karna, ki\njo user `input` karein, usse aap guess kar payo, ki kaunsi `exercise` user ne select ki\nhai, aur uska corresponding `slug` kya hai.\n",
	"api-again_key11": "3 - Jab bhi `parentExerciseId` null hoga json mei, toh `json.loads` function usse `Non\nki tarah read karega, and jab `childExercises`, khaali list hoga, toh [] ki tarah hi\n`python` mei `json.loads` function aapko return karega.\n",
	"api-again_key12": "## Debug Mei Help Ke Liye\n\n",
	"api-again_key13": "Debug mei help karne ke liye, jab bhi aap yeh wala endpoint call karein, toh aap\napna result exercises_`id`.json mei `save` kar le. Jaise agar aapne course_id 74,\nke liye endpoint call kiya hai to uska reply - exercises_74.json mei `save` kar le.\n",
	"api-again_key14": "Kisi bhi `course_id` ke liye API call karne se pehle dekhe ki uski corresponding\nexercises_`id`.json `file` exist karti hai ya nahi. Agar karti hai, toh ussi `file`\nko read kar le, nahi toh API call kar kar, uss `file` ko create kar le.\n",
	"api-again_key15": "Isse jab aap baar baar, yeh `code` run karoge, toh API requests nahi hongi, aur\naap aasaani se debug kar paoge.\n",
	"api-again_key16": "## Bonus Task\n\n",
	"api-again_key17": "Ab aapka `code` `file` mei aapki ki gayi `request` ka `output` `save` karega.\nIsse aap agar har baar apna `code` `execute` karoge, toh har baar ek nayi API call nahi \nhogi.\n",
	"api-again_key18": "Isse maan lo - agar aapka internet nahi bhi chal raha hai, toh stored `files` se user ko\n`output` dikhaya jaa sakta hai.\n",
	"api-again_key19": "Jaise, agar aap kuch chote-mote changes kar rahe hoge, toh jab aap `code` doobara doobara\nchala rahe hoge, toh baar baar server par request nahi jayegi, jisse aap ka `code` quickly aapko\nresults de dega, jisse aap ko kuch debug karna asaan ho sakta hai.\n",
	"api-again_key20": "Iss concept ko `caching` bolte hai, jab hum hamesha server se response maangne ke jagah\nusko locally `save` kar lete hai, jisse ki baar baar server ko pareshaan na karne padha.\n",
	"api-again_key21": "Ek `ifCache` naam ka `variable` banao, jiski default value `True` ho. Yaani uss `variable` ko `True` value se initialise karo.\n",
	"api-again_key22": "Jab `ifCache` `True' ho toh API call karne ke baad, jaise humne `file` mei uska `output` store kar liya tha, waise store kar payein. Iska matlab jab ifCache `True` hai, `tab` hum caching kar rahe hai, yaani response ko locally `save` kar rahe hai, jisse ki server ko baar baar pareshaan na karna padein.\n",
	"api-again_key23": "Otherwise jab `ifCache` `variable` `False` ho toh hamesha API calls karo, chahe `files` exist karti ho ya nahi. Iska matlab humne caching disable yaani `False` kar di hai.\n\n\n",
	"api-again_key24": "`ifCache` jaise `variables` ko kabhi kabhi **`configuration `variables``** bhi bolte hai. Inn `variables` ko hum usually alag `files` mei, ya `file` ki beginning mei define karte hai, aur depending on humei `code` kis condition mei chalana hai, hum inn configuration `variables` ki value set kar dete hai. Toh jaise - aap `code` jab debug kar rahe hoge, toh aap\n",
	"api-again_key25": "set kar sakte ho. Aise hi jab aap ka `code`, kabhi koi live use kar raha hoga, toh aap apne `code` ko \n",
	"api-again_key26": "set kar kar chala sakte ho. Isse hamara `code` hamesha server se response maang kar hi user ko display karega.\n"
}