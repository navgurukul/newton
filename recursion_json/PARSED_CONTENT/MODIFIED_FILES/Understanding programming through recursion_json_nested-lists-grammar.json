[
  {
    "component": "header",
    "variant": 2,
    "value": "nested-lists-grammar_key1"
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key2"
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key3"
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key4"
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key5",
    "decoration": {
      "type": "number",
      "value": 1
    }
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key6",
    "decoration": {
      "type": "number",
      "value": 2
    }
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key7",
    "decoration": {
      "type": "number",
      "value": 3
    }
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key8",
    "decoration": {
      "type": "number",
      "value": 4
    }
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key9"
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key10"
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key11"
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key12"
  },
  {
    "component": "code",
    "type": "python",
    "title": "",
    "value": "[1, 2, [3, 4, [5, 6, [7, 8]], 9, 10], 11, 12] => [1] + [2, [3, 4, [5, 6, [7, 8]], 9, 10], 11, 12]] # Rule 4 and Rule 1 (for [1])<br>[2,     [3, 4, [5, 6, [7, 8]], 9, 10], 11, 12]] # Rule 3<br>[3, 4, [5, 6, [7, 8]], 9, 10], 11, 12] => [3] + [4, [5, 6, [7, 8]], 9, 10], 11, 12]] # Rule 4<br>[4,             [5, 6, [7, 8]], 9, 10], 11, 12]] # Rule 3<br>and so on ..."
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key13"
  },
  {
    "component": "header",
    "variant": 2,
    "value": "nested-lists-grammar_key14"
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key15",
    "decoration": {
      "type": "bullet"
    }
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key16",
    "decoration": {
      "type": "bullet"
    }
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key17",
    "decoration": {
      "type": "bullet"
    }
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key18",
    "decoration": {
      "type": "bullet"
    }
  },
  {
    "component": "header",
    "variant": 2,
    "value": "nested-lists-grammar_key19"
  },
  {
    "component": "code",
    "type": "python",
    "title": "",
    "value": "import random<br><br>rules = [ \"[INTEGER]\", \"[NESTED_LIST, INTEGER]\", \"[INTEGER, NESTED_LIST]\", \"NESTED_LIST + NESTED_LIST\"]<br><br>def generateRandomNumber():<br>    return random.randrange(1, 20)<br><br>def generateRandomNestedList():<br>    random_rule = random.randrange(4)<br>    if random_rule == 0:<br>        return [generateRandomNumber()]<br><br>    elif random_rule == 1:<br>        return [generateRandomNestedList(), generateRandomNumber()]<br><br>    elif random_rule == 2:<br>        return [generateRandomNumber(), generateRandomNestedList()]<br><br>    elif random_rule == 3:<br>        return generateRandomNestedList() + generateRandomNestedList()<br><br>print generateRandomNestedList()"
  },
  {
    "component": "header",
    "variant": 2,
    "value": "nested-lists-grammar_key20"
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key21"
  },
  {
    "component": "header",
    "variant": 2,
    "value": "nested-lists-grammar_key22"
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key23"
  },
  {
    "component": "text",
    "value": "nested-lists-grammar_key24"
  }
]