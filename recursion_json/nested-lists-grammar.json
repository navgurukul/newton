[
	{
		"component": "header",
		"variant": 2,
		"value": "Using Grammar to create Nested Lists"
	},
	{
		"component": "text",
		"value": "<b>Yeh thoda advanced concept hai. Iss par aap 4-5 ghante lagane ke baad bhi nahi samajh paa rahe, toh aap isse skip kar kar aage badh sakte hai</b>"
	},
	{
		"component": "text",
		"value": "Jaise English mei <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Grammar</span> hoti hai, aise hi hamare <span style=\"\">code</span> ki bhi grammar hoti hai. Issi grammar ko use kar kar <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">compiler</span> samajhta hai, hamare <span style=\"\">code</span> ka kya matlab hai, aur woh matlab samajh kar, machine yaai computer samjhata hai. Jis <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">language</span> mei <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">compiler</span> <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">machine</span> ko woh <span style=\"\">code</span> samjhata hai, usse <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">machine code</span> kehte hai."
	},
	{
		"component": "text",
		"value": "Nested Lists ko grammar ko tarah se samajhte hai."
	},
	{
		"component": "text",
		"value": "NESTED_LIST = [ INTEGER ]",
		"decoration": {
			"type": "number",
			"value": 1
		}
	},
	{
		"component": "text",
		"value": "NESTED<i>LIST = [ NESTED</i>LIST, INTEGER ]",
		"decoration": {
			"type": "number",
			"value": 2
		}
	},
	{
		"component": "text",
		"value": "NESTED<i>LIST = [ INTEGER, NESTED</i>LIST ]",
		"decoration": {
			"type": "number",
			"value": 3
		}
	},
	{
		"component": "text",
		"value": "NESTED<i>LIST = NESTED</i>LIST + NESTED_LIST",
		"decoration": {
			"type": "number",
			"value": 4
		}
	},
	{
		"component": "text",
		"value": "Dariye mat, yeh bahut simple se rules hai. Yeh rules kehte hai ki, right side mei jo bhi <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">grammar rules</span> diye gaye hai woh rules ko use kar kar aap ek nayi <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">nested list</span> bana sakte hai."
	},
	{
		"component": "text",
		"value": "Jaise,"
	},
	{
		"component": "text",
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">[5]</span> ek <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">nested list</span> hai using Rule 1<br><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">[[5], 2]</span> ek <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">nested list</span> hai using Rule 2<br><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">[3, [[5], 2]]</span> ek <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">nested list</span> hai using Rule 3<br><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">[5, 6, 7]</span> ek <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">nested list</span> hai using Rule 4 (kyuki yeh <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">[5]</span>, <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">[6]</span>, <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">[7]</span> jo teen nested lists hai unko jod kar banayi jaa sakti hai)"
	},
	{
		"component": "text",
		"value": "Aap dhyaan se dekhenge toh aap kisi bhi nested list ko inn rules mei break kar sakte hai. Ek example ke liye:"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "[1, 2, [3, 4, [5, 6, [7, 8]], 9, 10], 11, 12] => [1] + [2, [3, 4, [5, 6, [7, 8]], 9, 10], 11, 12]] # Rule 4 and Rule 1 (for [1])<br>[2,     [3, 4, [5, 6, [7, 8]], 9, 10], 11, 12]] # Rule 3<br>[3, 4, [5, 6, [7, 8]], 9, 10], 11, 12] => [3] + [4, [5, 6, [7, 8]], 9, 10], 11, 12]] # Rule 4<br>[4,             [5, 6, [7, 8]], 9, 10], 11, 12]] # Rule 3<br>and so on ..."
	},
	{
		"component": "text",
		"value": "Humein inn rules ko use kar kar ek recursion ka program likhna hai, jo ek random <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">nested list</span> generate karta hai."
	},
	{
		"component": "header",
		"variant": 2,
		"value": "Hints"
	},
	{
		"component": "text",
		"value": "Aap ke paas chaar rules hai, aap chaar rules mei se koi bhi rule randomly use kar kar ek <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">nested list</span> generate kar sakte ho",
		"decoration": {
			"type": "bullet"
		}
	},
	{
		"component": "text",
		"value": "Har rule ke liye aapko batana padega aapki nayi list kaise hogi",
		"decoration": {
			"type": "bullet"
		}
	},
	{
		"component": "text",
		"value": "Aap ek generateRandomNumber naam ka function use kar sakte hai, <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">INTEGER</span> generate karne ke liye, aur",
		"decoration": {
			"type": "bullet"
		}
	},
	{
		"component": "text",
		"value": "Aap ek generateRandomNestedList naam ka function use kar sakte hai <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">NESTED_LIST</span> generate karne ke liye, yeh function recursive hoga",
		"decoration": {
			"type": "bullet"
		}
	},
	{
		"component": "header",
		"variant": 2,
		"value": "Solution"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "import random<br><br>rules = [ \"[INTEGER]\", \"[NESTED_LIST, INTEGER]\", \"[INTEGER, NESTED_LIST]\", \"NESTED_LIST + NESTED_LIST\"]<br><br>def generateRandomNumber():<br>    return random.randrange(1, 20)<br><br>def generateRandomNestedList():<br>    random_rule = random.randrange(4)<br>    if random_rule == 0:<br>        return [generateRandomNumber()]<br><br>    elif random_rule == 1:<br>        return [generateRandomNestedList(), generateRandomNumber()]<br><br>    elif random_rule == 2:<br>        return [generateRandomNumber(), generateRandomNestedList()]<br><br>    elif random_rule == 3:<br>        return generateRandomNestedList() + generateRandomNestedList()<br><br>print generateRandomNestedList()"
	},
	{
		"component": "header",
		"variant": 2,
		"value": "Aage"
	},
	{
		"component": "text",
		"value": "Agar aap ko thoda aur samajhna ka mann hai, toh aap nested_list of <span style=\"\">INTEGER</span> and <span style=\"\">STRINGS</span> mix ke rules likh kar, usko generate karne ka cocde likh sakte hai."
	},
	{
		"component": "header",
		"variant": 2,
		"value": "Bahut Aage"
	},
	{
		"component": "text",
		"value": "Agar aapko yeh exercise interesting lagi, aur aap yeh samajh paa rahe hai, toh aap Shakuntala Devi ka <span style=\"\">code</span> samajh sakte hai. Woh issi logic ko use kar kar likha gaya hai."
	},
	{
		"component": "text",
		"value": "Code <a href=\"https://github.com/navgurukul/shakuntala-devi\">yaha</a> par available hai."
	}
]