[
	{
		"component": "header",
		"variant": 2,
		"value": "Definitions"
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Binary Numbers"
	},
	{
		"component": "text",
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Binary numbers</span> are known as machine language or low level language, binary numbers are made of 0 and 1 which humans cannot understand but computers can."
	},
	{
		"component": "header",
		"variant": 3,
		"value": "To understand binary numbers please watch this video"
	},
	{
		"component": "youtube",
		"value": "USCBCmwMCDA"
	},
	{
		"component": "header",
		"variant": 3,
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Interpreter</span>"
	},
	{
		"component": "text",
		"value": "It checks the <span style=\"\">code</span> line by line and the line at which <span style=\"\">error</span> is present, <span style=\"\">interpreter</span>  stops the <span style=\"\">code</span> at that line and shows the name of <span style=\"\">error</span>.<br><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Interpreter</span>  converts high level language to low level language with the help of which the computer is able to run the <span style=\"\">code</span>."
	},
	{
		"component": "text",
		"value": "<b><span style=\"\">Interpreter</span> is used for <span style=\"\">Python</span> and Ruby programming languages.</b>"
	},
	{
		"component": "header",
		"variant": 4,
		"value": "Example :-"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "a = megha<br>print(a)"
	},
	{
		"component": "header",
		"variant": 4,
		"value": "<span style=\"\">Output</span> :-"
	},
	{
		"component": "text",
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">file \"&lt;string&gt;\",line 1, in &lt;module&gt;</span>"
	},
	{
		"component": "text",
		"value": "In  this example you saw that I have taken a <span style=\"\">variable</span> named <b>a</b> and assigned/given  a <span style=\"\">string</span> value to it but I forgot to put \" \"(quote). So, <span style=\"\">python</span> was not able to identify the type of value I gave to the <span style=\"\">variable</span> <b>a</b>. Therefore, the <span style=\"\">interpreter</span> stopped the <span style=\"\">code</span> at the line that contained <span style=\"\">error</span>, and displayed the <span style=\"\">error</span>."
	},
	{
		"component": "header",
		"variant": 3,
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Compiler</span>"
	},
	{
		"component": "text",
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Compiler</span> is a software that scans the complete <span style=\"\">code</span> in one go and if the <span style=\"\">code</span> contains any <span style=\"\">error</span>, then it shows the <span style=\"\">error</span> at the end of the <span style=\"\">code</span>.<br>Whereas the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">interpreter</span>, stops the <span style=\"\">code</span> at the line that contains <span style=\"\">error</span>."
	},
	{
		"component": "text",
		"value": "<b><span style=\"\">Compiler</span> is used in C and C++ programming languages.</b>"
	},
	{
		"component": "header",
		"variant": 4,
		"value": "Note :"
	},
	{
		"component": "text",
		"value": "To study Compiler and Interpreter in detail please click this link.  <a href=\"https://www.youtube.com/watch?v=e4ax90XmUBc&t=156s\">Compiler and Interpreter</a> ",
		"decoration": {
			"type": "bullet"
		}
	},
	{
		"component": "header",
		"variant": 3,
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Case Sensitive</span>"
	},
	{
		"component": "text",
		"value": "Case sensitive means that the text that we have typed should be exactly same as we type it anywhere in the <span style=\"\">code</span>."
	},
	{
		"component": "header",
		"variant": 4,
		"value": "Example :-"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "var = 5<br>print(Var)"
	},
	{
		"component": "header",
		"variant": 4,
		"value": "<span style=\"\">Output</span> :-"
	},
	{
		"component": "text",
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Var is not defined</span>"
	},
	{
		"component": "text",
		"value": "For example ,in the above example ,we have assigned a  <span style=\"\">variable</span> named <b>var</b> and while printing we typed <b>Var</b>, so an <span style=\"\">error</span> was displayed because in <span style=\"\">python</span> var and Var are different. In <span style=\"\">python</span> small letters and capital letters are considered different."
	},
	{
		"component": "text",
		"value": "Note- You can click this link to study  case sensitive in detail . <a href=\"https://youtu.be/mNxDbLBBzno\">Case Sensitive</a> "
	},
	{
		"component": "header",
		"variant": 3,
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Error/ Bugs</span>"
	},
	{
		"component": "text",
		"value": "When we make any mistake while writing the <span style=\"\">code</span>, that mistake is called <span style=\"\">error</span>/bug."
	},
	{
		"component": "header",
		"variant": 4,
		"value": "Example :-"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "num = 5<br>print(num"
	},
	{
		"component": "header",
		"variant": 4,
		"value": "<span style=\"\">Output</span> :-"
	},
	{
		"component": "text",
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">SyntaxError: unexpected EOF while parsing</span>"
	},
	{
		"component": "header",
		"variant": 4,
		"value": "Example :-"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "num=5<br>print \"a\""
	},
	{
		"component": "header",
		"variant": 3,
		"value": "<span style=\"\">Output</span> :-"
	},
	{
		"component": "text",
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">SyntaxError: invalid syntax</span>"
	},
	{
		"component": "text",
		"value": "In this example you saw that while printing I forgot to put parenthesis so it showed us a <span style=\"\">syntax</span> <span style=\"\">error</span> which means our <span style=\"\">code</span> has some mistake/<span style=\"\">error</span>."
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Debugs"
	},
	{
		"component": "text",
		"value": "Debug means to solve bug/<span style=\"\">error</span> in the given <span style=\"\">code</span> or removing the <span style=\"\">error</span> from the <span style=\"\">code</span> and writing the correct <span style=\"\">code</span> which is as per the <span style=\"\">syntax</span>."
	},
	{
		"component": "header",
		"variant": 4,
		"value": "Example :-"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "num=5<br>print(num)"
	},
	{
		"component": "header",
		"variant": 3,
		"value": "<span style=\"\">Output</span> :-"
	},
	{
		"component": "text",
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">5</span>"
	},
	{
		"component": "header",
		"variant": 4,
		"value": "Example :-"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "num=2<br>Print (num)"
	},
	{
		"component": "header",
		"variant": 3,
		"value": "<span style=\"\">Output</span> :-"
	},
	{
		"component": "text",
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">2</span>"
	},
	{
		"component": "text",
		"value": "As you saw in the bug example   there was a bug present in the second <span style=\"\">code</span> so we debugged that <span style=\"\">code</span>."
	},
	{
		"component": "header",
		"variant": 3,
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Source code</span>"
	},
	{
		"component": "text",
		"value": "Source <span style=\"\">code</span> is that <span style=\"\">code</span> which humans can easily understand."
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Example :-"
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "name = \"python\"<br>print(name)"
	},
	{
		"component": "header",
		"variant": 3,
		"value": "<span style=\"\">Output</span> :-"
	},
	{
		"component": "text",
		"value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">python</span>"
	},
	{
		"component": "text",
		"value": "In this example you saw that we have taken a <span style=\"\">variable</span> named as <b>name</b> and we have stored <span style=\"\">python</span> in it.Ypu can easily read and understand this <span style=\"\">code</span> .This <span style=\"\">code</span> is called <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">source code/ main code</span>."
	},
	{
		"component": "image",
		"value": "https://www.grammar-monster.com/glossary/pics/types_of_brackets.png",
		"alt": "Types of brackets"
	}
]