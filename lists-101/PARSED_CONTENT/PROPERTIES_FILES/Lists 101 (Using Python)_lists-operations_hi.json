{
    "lists-operations_key1": "## हम सूचियों के साथ क्या कर सकते हैं?\n\n\n",
    "lists-operations_key2": "इस अभ्यास में, हम यह समझने की कोशिश करेंगे कि हम `LISTS` का उपयोग कैसे करते हैं। जैसा कि हमने देखा कि एक `list` में मूल्यों का एक संग्रह होता है। तो हमें एक रास्ता खोजने की जरूरत है, कि हम इन मूल्यों तक कैसे पहुंच सकते हैं।\n",
    "lists-operations_key3": "क्या हुआ जब हमने `nameslist[1]` लिखा? क्या \"शिवम\" छपा था?\n",
    "lists-operations_key4": "यहाँ, `[1]` को `INDEX` कहा जाता है। किसी लिस्ट के किसी भी आइटम को एक्सेस करने के लिए हम उस आइटम के INDEX का इस्तेमाल करते हैं। आइए देखें कि दी गई सूची में सभी वस्तुओं का सूचकांक क्या है।\n",
    "lists-operations_key5": "`[\"annu\", \"shivam\", \"deepa\", \"pooja\", \"rupa\"]`\n",
    "lists-operations_key6": "`annu` है `index` 0\n",
    "lists-operations_key7": "`shivam` में `index` 1 . है\n",
    "lists-operations_key8": "`deepa` है `index` 2\n",
    "lists-operations_key9": "`pooja` है `index` 3\n",
    "lists-operations_key10": "`rupa` है `index` 4\n\n\n",
    "lists-operations_key11": "अगर आप ध्यान से देखेंगे तो आप देखेंगे कि उस ITEM का INDEX उसकी स्थिति से एक कम है। INDEX की गिनती 0 से शुरू होती है, 1 से नहीं।\n",
    "lists-operations_key12": "[\"अन्नू\",",
    "lists-operations_key13": "\"shivam\",",
    "lists-operations_key14": "\"दीपा\",",
    "lists-operations_key15": "\"पूजा\",",
    "lists-operations_key16": "\"देखना\"]",
    "lists-operations_key17": "0",
    "lists-operations_key18": "1",
    "lists-operations_key19": "2",
    "lists-operations_key20": "3",
    "lists-operations_key21": "4",
    "lists-operations_key22": "क्या अंतिम पंक्ति आपको `error` देती है?\n",
    "lists-operations_key23": "सूची सूचकांक सीमा से बाहर",
    "lists-operations_key24": "इसका सीधा सा मतलब है - आपने जो भी `INDEX` दिया है, वह INDEX दी गई सूची के `indices` की सीमा से बाहर है। (सूचकांक - सूचकांक का बहुवचन)।\n",
    "lists-operations_key25": "#### प्रश्न\n\n",
    "lists-operations_key26": "हम अधिकतम कितना INDEX लगा सकते हैं?\n",
    "lists-operations_key27": "#### उत्तर\n\n",
    "lists-operations_key28": "INDEX की लंबाई से 1 कम। अगर हम इंडेक्स की रेंज से ज्यादा वैल्यू डालेंगे तो `index out of range` `error` आएगा।\n",
    "lists-operations_key29": "इस `error` को गूगल करने की कोशिश करें और इसके बारे में समझें। यह `error` आपको नहीं छोड़ेगा;), बेहतर होगा कि आप इसे अभी ही समझें।\n",
    "lists-operations_key30": "### सूची आइटम बदलना\n\n\n",
    "lists-operations_key31": "उसी तरह हम दी गई सूची में ITEMS को अपडेट/बदल सकते हैं।\n",
    "lists-operations_key32": "क्या आपने कुछ नोटिस किया? 0 INDEX पर मौजूद ITEM को अब \"अभिषेक\" में बदल दिया गया है। इसी तरह, इस `code` को अभी चलाएं।\n",
    "lists-operations_key33": "INDEX 3 में मौजूद ITEM अब \"ऋषभ\" में बदल गया है। ध्यान रखें कि INDEX आइटम की स्थिति से 1 कम है। इसी तरह, यदि आप नीचे दिए गए अनुसार कुछ लिखते हैं:\n",
    "lists-operations_key34": "तो, आपको एक सूची अनुक्रमणिका `error` श्रेणी से बाहर मिलेगी, क्योंकि ५वें सूचकांक में कोई आइटम मौजूद नहीं है।\n",
    "lists-operations_key35": "### सूची की लंबाई और सूची के मूल्यों को जोड़ना\n\n",
    "lists-operations_key36": "यदि हम सूची की लंबाई देखना चाहते हैं तो हम `len ()` (लंबाई फ़ंक्शन) का उपयोग करते हैं।\n",
    "lists-operations_key37": "यदि हम किसी सूची में एक नया मान जोड़ना चाहते हैं तो हम `append` फ़ंक्शन का उपयोग करेंगे। `append()` का उपयोग करके, हम सूची के अंत में एक तत्व जोड़ सकते हैं।\n",
    "lists-operations_key38": "यहां, आप देख सकते हैं कि पहले सूची की लंबाई `5` थी लेकिन `append()` का उपयोग करने के बाद, सूची की लंबाई `6` हो गई। जब आपने `names_list` प्रिंट किया था तब अंतिम में `dhruv` मान जोड़ा गया था।\n",
    "lists-operations_key39": "आइए एक बार फिर से संलग्न करें।\n",
    "lists-operations_key40": "इस तरह, आप जितने चाहें उतने तत्व जोड़ सकते हैं।\n",
    "lists-operations_key41": "### सूची से तत्वों को हटाना\n\n",
    "lists-operations_key42": "जैसे हम सूची में तत्वों को जोड़ सकते हैं, वैसे ही हम सूची से तत्वों को हटा सकते हैं हम `pop()` का उपयोग कर सकते हैं। सूची से अंतिम तत्व को हटाने के लिए हम `pop` फ़ंक्शन का उपयोग कर सकते हैं।\n",
    "lists-operations_key43": "इसे प्रिंट करने का प्रयास करें और देखें कि अंतिम तत्व हटा दिया गया है या नहीं। आइए सूची से एक और तत्व की कोशिश करें।\n",
    "lists-operations_key44": "आप किसी दी गई सूची में तर्क के साथ `pop` फ़ंक्शन का भी उपयोग कर सकते हैं। इसका मतलब है कि आप `index` को `pop function` में भी जोड़ सकते हैं, जो सूची से दिए गए इंडेक्स के वांछित तत्व को हटा देगा।\n",
    "lists-operations_key45": "#### उदाहरण :-\n\n\n",
    "lists-operations_key46": "### जाँच करें कि क्या तत्व सूची में मौजूद है\n\n",
    "lists-operations_key47": "हम सूची में बहुत सारे दिलचस्प ऑपरेशन कर सकते हैं। सूचियों के महत्वपूर्ण कार्यों में से एक यह जांचना है कि दी गई ITEM सूची में कोई विशेष तत्व मौजूद है या नहीं।\n",
    "lists-operations_key48": "#### उदाहरण:-\n\n\n",
    "lists-operations_key49": "इसका परिणाम `True` के रूप में आएगा क्योंकि \"शिवम\" तत्व `names_list` में मौजूद है।\n",
    "lists-operations_key50": "इसका परिणाम `False` के रूप में आएगा क्योंकि `names_list` में \"imtiyaz\" तत्व मौजूद नहीं है।\n",
    "lists-operations_key51": "चूंकि यह एक `Boolean value` है, यह वापस आ जाएगा (`True`/`False`), हम इसे `if ` Statement`\u001bϼ0m��oG",
    "lists-operations_key52": "#### उदाहरण :-\n\n\n",
    "lists-operations_key53": "*क्या आपको अब भी याद है कि हमने पिछले बूलियन पाठ में क्या पढ़ा था?*\n"
}