{
	"lists-operations_key1": "What can we do with Lists?\n",
	"lists-operations_key2": "In this exercise, we will try to understand how do we use `LISTS`. Just as we saw that a `list` contains a collection of values. So we need to find a way, that how can we access these values.\n",
	"lists-operations_key3": "What happened when we wrote `nameslist[1]`? Did \"shivam\" got printed? \n",
	"lists-operations_key4": "Here, `[1]` is called `INDEX`. To access any item of a list, we use the INDEX of that item. Let us see what is the index of all the items in the given list.\n",
	"lists-operations_key5": "`[\"annu\", \"shivam\", \"deepa\", \"pooja\", \"rupa\"]`\n",
	"lists-operations_key6": "`annu` has `index` 0\n",
	"lists-operations_key7": "`shivam` has `index` 1\n",
	"lists-operations_key8": "`deepa` has `index` 2\n",
	"lists-operations_key9": "`pooja` has `index` 3\n",
	"lists-operations_key10": "`rupa` has `index` 4\n\n\n",
	"lists-operations_key11": "If you see carefully, then you will notice that the INDEX of that ITEM is one less than its position. The counting of the INDEX starts from 0, not from 1.\n",
	"lists-operations_key12": "[\"annu\",",
	"lists-operations_key13": "\"shivam\",",
	"lists-operations_key14": "\"deepa\",",
	"lists-operations_key15": "\"pooja\",",
	"lists-operations_key16": "\"rupa\"]",
	"lists-operations_key17": "0",
	"lists-operations_key18": "1",
	"lists-operations_key19": "2",
	"lists-operations_key20": "3",
	"lists-operations_key21": "4",
	"lists-operations_key22": "Does the last line gives you `error` ? \n",
	"lists-operations_key23": "list index out of range",
	"lists-operations_key24": "Simply means - whatever `INDEX` you have given, that INDEX is out of range of the given `indices` of list. (indices - plural of index).\n",
	"lists-operations_key25": "Question\n",
	"lists-operations_key26": "What is the maximum INDEX that we can put? \n",
	"lists-operations_key27": "Answer\n",
	"lists-operations_key28": "1 less than the length of the INDEX. If we will put more value than the range of the index, then `index out of range` `error` will come.\n",
	"lists-operations_key29": "Try to google this `error` and understand about it. This `error` will not leave you ;), its better that you understand it now only.\n",
	"lists-operations_key30": "Changing List Items\n",
	"lists-operations_key31": "In the same way we can update/change the ITEMS in a given LIST.\n",
	"lists-operations_key32": "Did you notice anything? The ITEM present at 0 INDEX has now been changed to \"abhishek\". Similarly, run this `code` now.\n",
	"lists-operations_key33": "The ITEM that was present at  INDEX 3 has now changed to \"rishabh\". Keep in mind that INDEX is 1 less than the position of the item. Similarly, if you write something as given below :\n",
	"lists-operations_key34": "So, you will get a list index out of range `error`, because at the 5th index no item exists. \n",
	"lists-operations_key35": "Length of List and Adding values of the List\n",
	"lists-operations_key36": "If we want to see the length of the list then we use the `len ()` (length function).\n",
	"lists-operations_key37": "If we want to add one new value to a list then we will use `append` function. By using the `append()`, we can add an element at the end of the list.\n",
	"lists-operations_key38": "Here, you can see that previously the list length was `5` but after using the `append()`, the length of the list became `6`. When you printed `names_list` then the value `dhruv` was added in the last.\n",
	"lists-operations_key39": "Let's append once again.\n",
	"lists-operations_key40": "In this way, you can add as many elements as you want.\n",
	"lists-operations_key41": "Removing Elements from a List\n",
	"lists-operations_key42": "Just as we can add elements to the list, similarly we can remove elements from the list we can use the `pop()`. To remove the last element from the list we can use the `pop` function.\n",
	"lists-operations_key43": "Try to print it and see if the last element is removed or not. Let's try to one more element from the list.\n",
	"lists-operations_key44": "You can use `pop` function with an argument also on a given list. That means you can also add `index` to the `pop function`, which will remove the desired element of the given index from the list. \n",
	"lists-operations_key45": "Example :-\n",
	"lists-operations_key46": "Check if Element exists in List\n",
	"lists-operations_key47": "We can do a lot of interesting operations on the list. One of the important operations of lists is to check whether a particular element is present in the given ITEM LIST or not.\n",
	"lists-operations_key48": "Example:-\n",
	"lists-operations_key49": "Its result will come as `True` because \"shivam\" element exists in `names_list`.\n",
	"lists-operations_key50": "Its result will come as `False` because \"imtiyaz\" element does not exist in the `names_list`.\n",
	"lists-operations_key51": "As this is a `Boolean value`, it will return (`True`/`False`), we can also use it with the `if statement`.\n",
	"lists-operations_key52": "Example :-\n",
	"lists-operations_key53": "else:\n    print(\"Shivam ka naam `names_list` mei nahi hai.\")\n",
	"lists-operations_key54": "```\n",
	"lists-operations_key55": "*Do you still remember what all we studied in the last Boolean lesson?*\n"
}