{
	"Operations-On-Arrays_key1": "### Create an array\n\n\n",
	"Operations-On-Arrays_key2": "Explanation :\n",
	"Operations-On-Arrays_key3": "In this we have used the length property to find the length of the array. Beacuse in our fruits list we have only 2 elements those are Apple and Banana it given us the `output` 2. It depends generally on the how maelements present in the arrays.\n",
	"Operations-On-Arrays_key4": "### Access an Array item using the index position\n\n\n",
	"Operations-On-Arrays_key5": "Explanation :\n",
	"Operations-On-Arrays_key6": "In javascript arrays elements can be accessed by indexing which specify the position of the current element in the array. And indexing starts with 0.\n",
	"Operations-On-Arrays_key7": "### `Loop` over an Array\n\n\n",
	"Operations-On-Arrays_key8": "Explanation:\n",
	"Operations-On-Arrays_key9": "The index starts with 0 as (index = 0) and it will run upto the length of the array \n(index < array.length) which is according to the elements present in the array, currently it is 6.\n",
	"Operations-On-Arrays_key10": "When this `loop` runs the first time, the value of index is 0, 0<6 is `true`, and it is incremented due to index++, index value will become 1, therefore array [index] is printed\n",
	"Operations-On-Arrays_key11": "When this `loop` runs the second time, the value of index is 0, 1<6 is `true`, and it is incremented due to index++, index value will become 2, therefore array [index] is printed\n",
	"Operations-On-Arrays_key12": "When this `loop` runs the third time, the value of index is 0, 2<6 is `true`, and it is incremented due to index++, index value will become 3, therefore array [index] is printed\n",
	"Operations-On-Arrays_key13": "When this `loop` runs the fourth time, the value of index is 0, 3<6 is `true`, and it is incremented due to index++, index value will become 4, therefore array [index] is printed\n",
	"Operations-On-Arrays_key14": "When this `loop` runs the fifth time, the value of index is 0, 4<6 is `true`, and it is incremented due to index++, index value will become 5, therefore array [index] is printed\n",
	"Operations-On-Arrays_key15": "When this `loop` runs the sixth time, the value of index is 0, 5<6 is `true`, and it is incremented due to index++, index value will become 5, therefore array [index] is printed\n",
	"Operations-On-Arrays_key16": "When this `loop` runs the seventh time, the value of the index is 6. Clearly, 6<6 `false`, so the for `loop` will stop there.\n",
	"Operations-On-Arrays_key17": "### Add an item to the end of an Array\n  \n\n\n",
	"Operations-On-Arrays_key18": "### Remove an item from the end of an Array\n  \n\n",
	"Operations-On-Arrays_key19": "### Remove an item from the beginning of an Array\n\n\n\n",
	"Operations-On-Arrays_key20": "### Add an item to the beginning of an Array\n\n\n\n",
	"Operations-On-Arrays_key21": "### Find an index of an items the Array\n\n\n",
	"Operations-On-Arrays_key22": "### Remove an item by its index position\n  \n\n",
	"Operations-On-Arrays_key23": "Note:\n",
	"Operations-On-Arrays_key24": "While using splice(position, number of items to be removed) method you \nhave to specify the position to start from and the number of items you want to remove from the array.\n",
	"Operations-On-Arrays_key25": "So here, we are saying begin from position 1, which is Banana, and remove one item from the array. Thus Banana will be removed.\n",
	"Operations-On-Arrays_key26": "### Accessing Array Elements\n\n\n",
	"Operations-On-Arrays_key27": "JavaScript arrays are zero-indexed. The first element of an array is at index 0. \n",
	"Operations-On-Arrays_key28": "In this example, arr.length gives us the total number of elements in the array, which is 4. 4 - 1 is 3. So this `statement` prints out arr[3], which is Zeba.\n",
	"Operations-On-Arrays_key29": "Example :\n",
	"Operations-On-Arrays_key30": "Explanation :\n",
	"Operations-On-Arrays_key31": "The above example will throw a `syntax` `error` in javascript because here in javascript while accessing the elements from an array we generally use [ ] (brackets notation) instead of .(dot notation)\n"
}