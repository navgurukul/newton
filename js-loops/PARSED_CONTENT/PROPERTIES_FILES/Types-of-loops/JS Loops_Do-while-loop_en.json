{
	"Do-while-loop_key1": "name: Do While loop\n",
	"Do-while-loop_key2": "**Example:**\n",
	"Do-while-loop_key3": "**Explanation :**\n",
	"Do-while-loop_key4": "When i = 1, i%2 =1, and 1==1 `true`, therefore, 1 is printed. After that it is incremented to 2.\n",
	"Do-while-loop_key5": "When i = 2, now it will check for `loop` condition 2<=10 this is `true`, and it will go to do again, i%2  is 0 not 1, therefore, nothing is printed. After that it is incremented to 3.\n",
	"Do-while-loop_key6": "When i = 3, now it will check for `loop` condition 3<=10 this is `true`, and it will go to do again, i%2==1 `true`, therefore, 3 is printed. After that it is incremented to 4.\n",
	"Do-while-loop_key7": "When i = 4, now it will check for `loop` condition 4<=10 this is `true`, and it will go to do again, i%2  is 0 not 1, therefore, nothing is printed. After that it is incremented to 5.\n",
	"Do-while-loop_key8": "When i = 5 now it will check for `loop` condition 5<=10 this is `true`, and it will go to do again, i%2==1 `true`, therefore, 5 is printed. After that it is incremented to 6.\n",
	"Do-while-loop_key9": "When i = 6, now it will check for `loop` condition 6<=10 this is `true`, and it will go to do again, i%2  is 0 not 1, therefore, nothing is printed. After that it is incremented to 7.\n",
	"Do-while-loop_key10": "When i = 7 now it will check for `loop` condition 7<=10 this is `true`, and it will go to do again, i%2==1 `true`, therefore, 7 is printed. After that it is incremented to 8.\n",
	"Do-while-loop_key11": "When i = 8, now it will check for `loop` condition 8<=10 this is `true`, and it will go to do again, i%2  is 0 not 1, therefore, nothing is printed. After that it is incremented to 9.\n",
	"Do-while-loop_key12": "When i = 9 now it will check for `loop` condition 9<=10 this is `true`, and it will go to do again, i%2==1 `true`, therefore, 9 is printed. After that it is incremented to 10.\n",
	"Do-while-loop_key13": "When i = 10, now it will check for `loop` condition 10<=10 this is `true`, and it will go to do again, i%2  is 0 not 1, therefore, nothing is printed. After that it is incremented to 11.\n",
	"Do-while-loop_key14": "When i = 11 now it will check for `loop` condition 11<=10 clearly this is `false`, and it won’t go further.\n",
	"Do-while-loop_key15": "The do while `loop` is a variant of the while `loop` which evaluates the condition at the end of each `loop` iteration.\n",
	"Do-while-loop_key16": "**Example:-**\n",
	"Do-while-loop_key17": "**Explanation:-** \n",
	"Do-while-loop_key18": "m = 5, n = 1, m*n = 5, n++ is 2, 2<=10, so `loop` will `execute` another time.\n",
	"Do-while-loop_key19": "n=2, 2<=4 `true`, m=5, m*n(5*2) is 10, so 10 is printed and n incremented to 3 \n",
	"Do-while-loop_key20": "n=3, 3<=4 `true`, m=5, m*n(5*3) is 15, so 15 is printed and n incremented to 4\n",
	"Do-while-loop_key21": "n=2, 4<=4 `true`, m=5, m*n(5*4) is 20, so 20 is printed and n incremented to 5\n",
	"Do-while-loop_key22": "n=5, 5<=4 is `false` so `loop` will stop. \n",
	"Do-while-loop_key23": "**Example:-** \n",
	"Do-while-loop_key24": "**Explanation:-** \n",
	"Do-while-loop_key25": "In this `code` i is initial `variable` it starts from 0 and it will run till 10 \n",
	"Do-while-loop_key26": "sum is another `variable` for storing the value of  (sum+i) this operation. every time sum value will change because sum value is inside the `loop` and `variable` nature is that it updates the value.when condition will be `false` then it will give us the last update value.\n",
	"Do-while-loop_key27": "NOTE:-  in do while `loop` we have to do increment inside the do block if increment will happen out of the do block it will give you `error`.\n",
	"Do-while-loop_key28": "**Example:-**\n",
	"Do-while-loop_key29": "In the next example, we will increment the `variable` completely outside the do..while `statement`.\n",
	"Do-while-loop_key30": "**Example:-**\n",
	"Do-while-loop_key31": "**Explanation:-**\n",
	"Do-while-loop_key32": "In the first iteration, v is 0, v gets printed, 0<= 3, so `loop` runs again.\n",
	"Do-while-loop_key33": "In the second iteration, v is 0, v gets printed, 0<= 3, so `loop` runs again.\n",
	"Do-while-loop_key34": "In the third iteration, v is 0, v gets printed, 0<= 3, so `loop` runs again.\n",
	"Do-while-loop_key35": "…\n",
	"Do-while-loop_key36": "Do you see what is happening? V is never getting incremented. Thus this program will run to infinity.\n"
}