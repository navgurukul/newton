{
	"pressing-and-releasing-the-keyboard_key1": "Pressing and Releasing the `Key`board\n",
	"pressing-and-releasing-the-keyboard_key2": "Much like the mouseDown() and mouseUp() functions, pyautogui.`key`Down() and pyautogui.`key`Up() will send virtual `key`presses and releases to the computer. They are passed a `key`board `key` `string` (see `Tab`le 18-1) for their argument. For convenience, PyAutoGUI provides the pyautogui.press() function, which calls both of these functions to simulate a complete `key`press.\n",
	"pressing-and-releasing-the-keyboard_key3": "Run the following `code`, which will type a dollar sign character (obtained by holding the SHIFT `key` and pressing 4):\n",
	"pressing-and-releasing-the-keyboard_key4": "This line presses down SHIFT, presses (and releases) 4, and then releases SHIFT. If you need to type a `string` into a text field, the typewrite() function is more sui`tab`le. But for `applications` that take single-`key` commands, the press() function is the simpler approach.\n",
	"pressing-and-releasing-the-keyboard_key5": "Hot`key` Combinations\nA hot`key` or shortcut is a combination of `key`presses to invoke some `application` function. The common hot`key` for copying a selection is CTRL-C (on Windows and Linux) or ⌘-C (on OS X). The user presses and holds the CTRL `key`, then presses the C `key`, and then releases the C and CTRL `keys`. To do this with PyAutoGUI’s `key`Down() and `key`Up() functions, you would have to enter the following:\n",
	"pressing-and-releasing-the-keyboard_key6": "pyautogui.`key`Down('ctrl')\npyautogui.`key`Down('c')\npyautogui.`key`Up('c')\npyautogui.`key`Up('ctrl')\nThis is rather complicated. Instead, use the pyautogui.hot`key`() function, which takes multiple `key`board `key` `string` arguments, presses them in order, and releases them in the reverse order. For the CTRL-C example, the `code` would simply be as follows:\n",
	"pressing-and-releasing-the-keyboard_key7": "pyautogui.hot`key`('ctrl', 'c')\nThis function is especially useful for larger hot`key` combinations. In Word, the CTRL-ALT-SHIFT-S hot`key` combination displays the Style pane. Instead of making eight different function calls (four `key`Down() calls and four `key`Up() calls), you can just call hot`key`('ctrl', 'alt', 'shift', 's').\n",
	"pressing-and-releasing-the-keyboard_key8": "With a new IDLE `file` `editor` window in the upper-left corner of your screen, enter the following into the interactive `shell` (in OS X, replace 'alt' with 'ctrl'):\n",
	"pressing-and-releasing-the-keyboard_key9": "This defines a function commentAfterDelay() that, when called, will click the `file` `editor` window to bring it into focus ❶, type In IDLE, Atl-3 comments out a line ❷, pause for 2 seconds, and then simulate pressing the ALT-3 hot`key` (or CTRL-3 on OS X) ❸. This `key`board shortcut adds two # characters to the current line, commenting it out. (This is a useful trick to know when writing your own `code` in IDLE.)\n"
}