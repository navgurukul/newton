{
	"project:combining-select-pages-from-many-pdfs_key1": "name: project:combining-select-pages-from-many-pdfs\n",
	"project:combining-select-pages-from-many-pdfs_key2": "# Project: Combining Select Pages from Many PDFs\n\n",
	"project:combining-select-pages-from-many-pdfs_key3": "Say you have the boring job of merging several dozen PDF documents into a single PDF `file`. Each of them has a cover sheet as the first page, but you don’t want the cover sheet repeated in the final result. Even though there are lots of free programs for combining PDFs, many of them simply merge entire `files` together. Let’s write a `Python` program to customize which pages you want in the combined PDF.\n",
	"project:combining-select-pages-from-many-pdfs_key4": "At a high level, here’s what the program will do:\n",
	"project:combining-select-pages-from-many-pdfs_key5": "Find all PDF `files` in the current working directory.\n",
	"project:combining-select-pages-from-many-pdfs_key6": "Sort the `file`names so the PDFs are added in order.\n",
	"project:combining-select-pages-from-many-pdfs_key7": "Write each page, excluding the first page, of each PDF to the `output` `file`.\n",
	"project:combining-select-pages-from-many-pdfs_key8": "In terms of implementation, your `code` will need to do the following:\n",
	"project:combining-select-pages-from-many-pdfs_key9": "Call os.listdir() to find all the `files` in the working directory and remove any non-PDF `files`.\n",
	"project:combining-select-pages-from-many-pdfs_key10": "Call `Python`’s sort() list method to alphabetize the `file`names.\n",
	"project:combining-select-pages-from-many-pdfs_key11": "Create a Pdf`File`Writer object for the `output` PDF.\n",
	"project:combining-select-pages-from-many-pdfs_key12": "`Loop` over each PDF `file`, creating a Pdf`File`Reader object for it.\n",
	"project:combining-select-pages-from-many-pdfs_key13": "`Loop` over each page (except the first) in each PDF `file`.\n",
	"project:combining-select-pages-from-many-pdfs_key14": "Add the pages to the `output` PDF.\n",
	"project:combining-select-pages-from-many-pdfs_key15": "Write the `output` PDF to a `file` named allminutes.pdf.\n",
	"project:combining-select-pages-from-many-pdfs_key16": "For this project, open a new `file` `editor` window and `save` it as combinePdfs.py.\n",
	"project:combining-select-pages-from-many-pdfs_key17": "# Step 1: Find All PDF `Files`\n\n",
	"project:combining-select-pages-from-many-pdfs_key18": "First, your program needs to get a list of all `files` with the .pdf extension in the current working directory and sort them. Make your `code` look like the following:\n",
	"project:combining-select-pages-from-many-pdfs_key19": "   #! `python3`\n",
	"project:combining-select-pages-from-many-pdfs_key20": "   # combinePdfs.py - Combines all the PDFs in the current working directory into\n\n",
	"project:combining-select-pages-from-many-pdfs_key21": "   # into a single PDF.\n\n\n",
	"project:combining-select-pages-from-many-pdfs_key22": "❶ import PyPDF2, os\n",
	"project:combining-select-pages-from-many-pdfs_key23": "   # Get all the PDF `file`names.\n\n",
	"project:combining-select-pages-from-many-pdfs_key24": "   pdf`Files` = []\n   for `file`name in os.listdir('.'):\n       if `file`name.endswith('.pdf'):\n❷         pdf`Files`.append(`file`name)\n❸ pdf`Files`.sort(`key`=str.lower)\n",
	"project:combining-select-pages-from-many-pdfs_key25": "❹ pdfWriter = PyPDF2.Pdf`File`Writer()\n",
	"project:combining-select-pages-from-many-pdfs_key26": "   # TODO: `Loop` through all the PDF `files`.\n\n\n",
	"project:combining-select-pages-from-many-pdfs_key27": "   # TODO: `Loop` through all the pages (except the first) and add them.\n\n\n",
	"project:combining-select-pages-from-many-pdfs_key28": "   # TODO: `Save` the resulting PDF to a `file`.\n\n",
	"project:combining-select-pages-from-many-pdfs_key29": "After the shebang line and the descriptive comment about what the program does, this `code` imports the os and PyPDF2 modules ❶. The os.listdir('.') call will return a list of every `file` in the current working directory. The `code` `loops` over this list and adds only those `files` with the .pdf extension to pdf`Files` ❷. Afterward, this list is sorted in alphabetical order with the `key`=str.lower `key`word argument to sort() ❸.\n",
	"project:combining-select-pages-from-many-pdfs_key30": "A Pdf`File`Writer object is created to hold the combined PDF pages ❹. Finally, a few comments outline the rest of the program.\n",
	"project:combining-select-pages-from-many-pdfs_key31": "# Step 2: Open Each PDF\n\n",
	"project:combining-select-pages-from-many-pdfs_key32": "Now the program must read each PDF `file` in pdf`Files`. Add the following to your program:\n",
	"project:combining-select-pages-from-many-pdfs_key33": "  #! `python3`\n",
	"project:combining-select-pages-from-many-pdfs_key34": "  # combinePdfs.py - Combines all the PDFs in the current working directory into\n\n",
	"project:combining-select-pages-from-many-pdfs_key35": "  # a single PDF.\n\n\n",
	"project:combining-select-pages-from-many-pdfs_key36": "import PyPDF2, os\n",
	"project:combining-select-pages-from-many-pdfs_key37": "  # Get all the PDF `file`names.\n\n",
	"project:combining-select-pages-from-many-pdfs_key38": "pdf`Files` = []\n--snip--\n",
	"project:combining-select-pages-from-many-pdfs_key39": "  # TODO: `Save` the resulting PDF to a `file`.\n\n",
	"project:combining-select-pages-from-many-pdfs_key40": "For each PDF, the `loop` opens a `file`name in read-binary mode by calling open() with 'rb' as the second argument. The open() call returns a `File` object, which gets passed to PyPDF2.Pdf`File`Reader() to create a Pdf`File`Reader object for that PDF `file`.\n",
	"project:combining-select-pages-from-many-pdfs_key41": "# Step 3: Add Each Page\n\n",
	"project:combining-select-pages-from-many-pdfs_key42": "For each PDF, you’ll want to `loop` over every page except the first. Add this `code` to your program:\n",
	"project:combining-select-pages-from-many-pdfs_key43": "   #! `python3`\n",
	"project:combining-select-pages-from-many-pdfs_key44": "   # combinePdfs.py - Combines all the PDFs in the current working directory into\n\n",
	"project:combining-select-pages-from-many-pdfs_key45": "   # a single PDF.\n\n\n",
	"project:combining-select-pages-from-many-pdfs_key46": "   import PyPDF2, os\n",
	"project:combining-select-pages-from-many-pdfs_key47": "   --snip--\n",
	"project:combining-select-pages-from-many-pdfs_key48": "   # `Loop` through all the PDF `files`.\n\n",
	"project:combining-select-pages-from-many-pdfs_key49": "   for `file`name in pdf`Files`:\n   --snip--\n",
	"project:combining-select-pages-from-many-pdfs_key50": "   # TODO: `Save` the resulting PDF to a `file`.\n\n",
	"project:combining-select-pages-from-many-pdfs_key51": "The `code` inside the for `loop` copies each Page object individually to the Pdf`File`Writer object. Remember, you want to skip the first page. Since PyPDF2 considers 0 to be the first page, your `loop` should start at 1 ❶ and then go up to, but not include, the `integer` in pdfReader.numPages.\n",
	"project:combining-select-pages-from-many-pdfs_key52": "# Step 4: `Save` the Results\n\n",
	"project:combining-select-pages-from-many-pdfs_key53": "After these nested for `loops` are done `loop`ing, the pdfWriter `variable` will contain a Pdf`File`Writer object with the pages for all the PDFs combined. The last step is to write this content to a `file` on the hard drive. Add this `code` to your program:\n",
	"project:combining-select-pages-from-many-pdfs_key54": "#! `python3`\n",
	"project:combining-select-pages-from-many-pdfs_key55": "# combinePdfs.py - Combines all the PDFs in the current working directory into\n\n",
	"project:combining-select-pages-from-many-pdfs_key56": "# a single PDF.\n\n",
	"project:combining-select-pages-from-many-pdfs_key57": "import PyPDF2, os\n",
	"project:combining-select-pages-from-many-pdfs_key58": "--snip--\n",
	"project:combining-select-pages-from-many-pdfs_key59": "# `Loop` through all the PDF `files`.\n\n",
	"project:combining-select-pages-from-many-pdfs_key60": "for `file`name in pdf`Files`:\n--snip--\n    # `Loop` through all the pages (except the first) and add them.\n    for pageNum in range(1, pdfReader.numPages):\n    --snip--\n",
	"project:combining-select-pages-from-many-pdfs_key61": "Passing 'wb' to open() opens the `output` PDF `file`, allminutes.pdf, in write-binary mode. Then, passing the resulting `File` object to the write() method creates the actual PDF `file`. A call to the close() method finishes the program.\n",
	"project:combining-select-pages-from-many-pdfs_key62": "# Ideas for Similar Programs\n\n",
	"project:combining-select-pages-from-many-pdfs_key63": "Being able to create PDFs from the pages of other PDFs will let you make programs that can do the following:\n",
	"project:combining-select-pages-from-many-pdfs_key64": "Cut out specific pages from PDFs.\n",
	"project:combining-select-pages-from-many-pdfs_key65": "Reorder pages in a PDF.\n",
	"project:combining-select-pages-from-many-pdfs_key66": "Create a PDF from only those pages that have some specific text, identified by extractText().\n"
}