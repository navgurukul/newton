{
	"filling-out-and-submitting-forms_key1": "name: filling-out-and-submitting-forms\n",
	"filling-out-and-submitting-forms_key2": "# Filling Out and Submitting Forms\n\n",
	"filling-out-and-submitting-forms_key3": "Sending `keys`trokes to text fields on a web page is a matter of finding the <`input`> or <textarea> element for that text field and then calling the send_`keys`() method. For example, enter the following into the interactive `shell`:\n",
	"filling-out-and-submitting-forms_key4": "As long as Gmail hasn’t changed the id of the Username and Password text fields since this book was published, the previous `code` will fill in those text fields with the provided text. (You can always use the browser’s inspector to verify the id.) Calling the submit() method on any element will have the same result as clicking the Submit button for the form that element is in. (You could have just as easily called emailElem.submit(), and the `code` would have done the same thing.)\n",
	"filling-out-and-submitting-forms_key5": "# Sending Special `Keys`\n\n",
	"filling-out-and-submitting-forms_key6": "Selenium has a module for `key`board `keys` that are impossible to type into a `string` value, which function much like escape characters. These values are stored in attributes in the selenium.webdriver.common.`keys` module. Since that is such a long module name, it’s much easier to run from selenium.webdriver.common.`keys` import `Keys` at the top of your program; if you do, then you can simply write `Keys` anywhere you’d normally have to write selenium.webdriver.common.`keys`. `Tab`le 11-5 lists the commonly used `Keys` `variables`.\n",
	"filling-out-and-submitting-forms_key7": "`Tab`le 11-5. Commonly Used `Variables` in the selenium.webdriver.common.`keys` Module\n",
	"filling-out-and-submitting-forms_key8": "Attributes                                                 Meanings\n",
	"filling-out-and-submitting-forms_key9": "`Keys`.DOWN, `Keys`.UP, `Keys`.LEFT, `Keys`.RIGHT                 The `key`board arrow `keys`\n",
	"filling-out-and-submitting-forms_key10": "`Keys`.ENTER, `Keys`.RETURN                                 The ENTER and RETURN `keys`\n",
	"filling-out-and-submitting-forms_key11": "`Keys`.HOME, `Keys`.END, `Keys`.PAGE_DOWN, `Keys`.PAGE_UP         The home, end, pagedown, and pageup `keys`\n",
	"filling-out-and-submitting-forms_key12": "`Keys`.ESCAPE, `Keys`.BACK_SPACE, `Keys`.DELETE                The ESC, BACKSPACE, and DELETE `keys`\n",
	"filling-out-and-submitting-forms_key13": "`Keys`.F1, `Keys`.F2,..., `Keys`.F12                           The F1 to F12 `keys` at the top of the `key`board\n",
	"filling-out-and-submitting-forms_key14": "`Keys`.`TAB`                                                 The `TAB` `key`\n",
	"filling-out-and-submitting-forms_key15": "For example, if the cursor is not currently in a text field, pressing the HOME and END `keys` will scroll the browser to the top and bottom of the page, respectively. Enter the following into the interactive `shell`, and notice how the send_`keys`() calls scroll the page:\n",
	"filling-out-and-submitting-forms_key16": "The <html> tag is the base tag in HTML `files`: The full content of the HTML `file` is enclosed within the <html> and </html> tags. Calling browser.find_element_by_tag_name('html') is a good place to send `keys` to the general web page. This would be useful if, for example, new content is loaded once you’ve scrolled to the bottom of the page.\n"
}