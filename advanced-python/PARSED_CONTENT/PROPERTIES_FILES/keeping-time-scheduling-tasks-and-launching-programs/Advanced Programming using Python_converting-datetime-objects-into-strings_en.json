{
	"converting-datetime-objects-into-strings_key1": "Converting datetime Objects into `Strings`\n",
	"converting-datetime-objects-into-strings_key2": "Epoch timestamps and datetime objects aren’t very friendly to the human eye. Use the strftime() method to display a datetime object as a `string`. (The f in the name of the strftime() function stands for format.)\n",
	"converting-datetime-objects-into-strings_key3": "The strftime() method uses directives similar to `Python`’s `string` formatting. `Tab`le 15-1 has a full list of strftime() directives.\n",
	"converting-datetime-objects-into-strings_key4": "`Tab`le 15-1. strftime() Directives\n",
	"converting-datetime-objects-into-strings_key5": "strftime directive",
	"converting-datetime-objects-into-strings_key6": "Meaning",
	"converting-datetime-objects-into-strings_key7": "%Y",
	"converting-datetime-objects-into-strings_key8": "Year with century, as in '2014'",
	"converting-datetime-objects-into-strings_key9": "%y                                     Year without century, '00' to '99' (1970 to 2069)\n",
	"converting-datetime-objects-into-strings_key10": "%m                                     Month as a decimal number, '01' to '12'\n",
	"converting-datetime-objects-into-strings_key11": "%B                                     Full month name, as in 'November'\n",
	"converting-datetime-objects-into-strings_key12": "%b                                     Abbreviated month name, as in 'Nov'\n",
	"converting-datetime-objects-into-strings_key13": "%d                                     Day of the month, '01' to '31'\n",
	"converting-datetime-objects-into-strings_key14": "%j                                     Day of the year, '001' to '366'\n",
	"converting-datetime-objects-into-strings_key15": "%w                                     Day of the week, '0' (Sunday) to '6' (Saturday)\n",
	"converting-datetime-objects-into-strings_key16": "%A                                     Full weekday name, as in 'Monday'\n",
	"converting-datetime-objects-into-strings_key17": "%a                                     Abbreviated weekday name, as in 'Mon'\n",
	"converting-datetime-objects-into-strings_key18": "%H                                     Hour (24-hour clock), '00' to '23'\n",
	"converting-datetime-objects-into-strings_key19": "%I                                     Hour (12-hour clock), '01' to '12'\n",
	"converting-datetime-objects-into-strings_key20": "%M                                     Minute, '00' to '59'\n",
	"converting-datetime-objects-into-strings_key21": "%S                                  Second, '00' to '59'\n",
	"converting-datetime-objects-into-strings_key22": "%p                                     'AM' or 'PM'\n",
	"converting-datetime-objects-into-strings_key23": "%%                                    Literal '%' character\n",
	"converting-datetime-objects-into-strings_key24": "Pass strrftime() a custom format `string` containing formatting directives (along with any desired slashes, colons, and so on), and strftime() will return the datetime object’s information as a formatted `string`. Enter the following into the interactive `shell`:\n",
	"converting-datetime-objects-into-strings_key25": "'2015/10/21 16:29:00'\n",
	"converting-datetime-objects-into-strings_key26": "'04:29 PM'\n",
	"converting-datetime-objects-into-strings_key27": "\"October of '15\"\nHere we have a datetime object for October 21, 2015 at 4:29 PM, stored in oct21st. Passing strftime() the custom format `string` '%Y/%m/%d %H:%M:%S' returns a `string` containing 2015, 10, and 21 separated by slahes and 16, 29, and 00 separated by colons. Passing '%I:%M% p' returns '04:29 PM', and passing \"%B of '%y\" returns \"October of '15\". Note that strftime() doesn’t begin with datetime.datetime.\n"
}