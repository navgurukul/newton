{
	"identifying-photo-folders-on-the-hard-drive_key1": "Identifying Photo Folders on the Hard Drive\n",
	"identifying-photo-folders-on-the-hard-drive_key2": "I have a bad habit of transferring `files` from my digital camera to temporary folders somewhere on the hard drive and then forgetting about these folders. It would be nice to write a program that could scan the entire hard drive and find these leftover “photo folders.”\n",
	"identifying-photo-folders-on-the-hard-drive_key3": "Write a program that goes through every folder on your hard drive and finds potential photo folders. Of course, first you’ll have to define what you consider a “photo folder” to be; let’s say that it’s any folder where more than half of the `files` are photos. And how do you define what `files` are photos?\n",
	"identifying-photo-folders-on-the-hard-drive_key4": "First, a photo `file` must have the `file` extension .png or .jpg. Also, photos are large images; a photo `file`’s width and height must both be larger than 500 pixels. This is a safe bet, since most digital camera photos are several thousand pixels in width and height.\n",
	"identifying-photo-folders-on-the-hard-drive_key5": "As a hint, here’s a rough skeleton of what this program might look like:\n",
	"identifying-photo-folders-on-the-hard-drive_key6": "#! `python3` #\nImport modules and write comments to describe this program.\n",
	"identifying-photo-folders-on-the-hard-drive_key7": "for foldername, subfolders, `file`names in os.walk('C:\\\\'):\n    numPhoto`Files` = 0\n    numNonPhoto`Files` = 0\n    for `file`name in `file`names:\n        # Check if `file` extension isn't .png or .jpg.\n        if TODO:\n            numNonPhoto`Files` += 1\n            continue    # skip to next `file`name\n",
	"identifying-photo-folders-on-the-hard-drive_key8": "When the program runs, it should print the absolute path of any photo folders to the screen.\n",
	"identifying-photo-folders-on-the-hard-drive_key9": "Custom Seating Cards\n",
	"identifying-photo-folders-on-the-hard-drive_key10": "Chapter 13 included a practice project to create custom invitations from a list of guests in a plaintext `file`. As an additional project, use the pillow module to create images for custom seating cards for your guests. For each of the guests listed in the guests.txt `file` from the resources at <span><a href=\"http://nostarch.com/automatestuff/\">http://nostarch.com/automatestuff/</a></span>, generate an image `file` with the guest name and some flowery decoration. A public domain flower image is available in the resources at <span><a href=\" http://nostarch.com/automatestuff/\"> http://nostarch.com/automatestuff/</a></span>.\n",
	"identifying-photo-folders-on-the-hard-drive_key11": "To ensure that each seating card is the same size, add a black rectangle on the edges of the invitation image so that when the image is printed out, there will be a guideline for cutting. The PNG `files` that Pillow produces are set to 72 pixels per inch, so a 4×5-inch card would require a 288×360-pixel image.\n"
}