{
	"callbacks-in-synchronous-functions_key1": "Callbacks are used in two different ways — in <b>*synchronous functions</b> and <b>asynchronous functions</b>.",
	"callbacks-in-synchronous-functions_key2": "If your <span style=\"\">code</span> <span style=\"\">executes</span> in a top to bottom, left to right fashion, sequentially, and waiting until one <span style=\"\">code</span> has finished before the next line begins, then your <span style=\"\">code</span> is synchronous.",
	"callbacks-in-synchronous-functions_key3": "Let’s look at an example:",
	"callbacks-in-synchronous-functions_key4": "In the example above, addOne(1) <span style=\"\">executes</span> first. Once it’s done, addOne(2) begins to <span style=\"\">execute</span>. Once addOne(2) is done, addOne(3) <span style=\"\">executes</span>. This process goes on until the last line of <span style=\"\">code</span> gets <span style=\"\">execute</span>d.",
	"callbacks-in-synchronous-functions_key5": "Callbacks are used in synchronous functions when you want a part of the <span style=\"\">code</span> to be easily swapped with something else.",
	"callbacks-in-synchronous-functions_key6": "Let’s go through another example. This time, let’s say you wanted to filter an array of numbers to get a list that’s less than five. Here, you pass a callback into the filter function:",
	"callbacks-in-synchronous-functions_key7": "Now, if you do the above <span style=\"\">code</span> with named functions, filtering the array would look like this instead:",
	"callbacks-in-synchronous-functions_key8": "In this case, getLessThanFive is the callback. Array.filter is a function that accepts a callback function.",
	"callbacks-in-synchronous-functions_key9": "So, back in the Array.filter example above, although we filtered the array to contain numbers that are less than five, you could easily reuse Array.filter to obtain an array of numbers that are greater than ten:",
	"callbacks-in-synchronous-functions_key10": "This is why you’d use callbacks in a synchronous function. Now, let’s move on and look at why we use callbacks in asynchronous functions."
}