{
    "definition-part-2_key1": "परिभाषाएं\n",
    "definition-part-2_key2": "बाइनरी नंबर\n",
    "definition-part-2_key3": "`Binary numbers` को मशीनी भाषा या निम्न स्तर की भाषा के रूप में जाना जाता है, बाइनरी नंबर 0 और 1 से बने होते हैं जिन्हें मनुष्य समझ नहीं सकते लेकिन कंप्यूटर कर सकते हैं।\n",
    "definition-part-2_key4": "`Interpreter`\n",
    "definition-part-2_key5": "यह `code` लाइन दर लाइन की जांच करता है और जिस लाइन पर `error` मौजूद है, `interpreter` उस लाइन पर `code` को रोकता है और `error` का नाम दिखाता है।\n`Interpreter` उच्च स्तरीय भाषा को निम्न स्तर की भाषा में परिवर्तित करता है जिसकी सहायता से कंप्यूटर `code` को चलाने में सक्षम होता है।\n",
    "definition-part-2_key6": "**`Interpreter` का उपयोग `Python` और रूबी प्रोग्रामिंग भाषाओं के लिए किया जाता है।**\n",
    "definition-part-2_key7": "उदाहरण :-\n",
    "definition-part-2_key8": "T3V0cHV0`",
    "definition-part-2_key9": "`file \"<string>\",line 1, in <module>`\n",
    "definition-part-2_key10": "इस उदाहरण में आपने देखा कि मैंने **a** नाम का एक `variable` लिया है और इसे `string` मान दिया/दे दिया है लेकिन मैं \" \"(उद्धरण) डालना भूल गया। इसलिए, `python` मेरे द्वारा `variable` **a** को दिए गए मान के प्रकार की पहचान करने में सक्षम नहीं था। इसलिए, `interpreter` ने `error` वाली लाइन पर `code` को रोक दिया और `error` प्रदर्शित किया।\n",
    "definition-part-2_key11": "`Compiler`\n",
    "definition-part-2_key12": "`Compiler` एक ऐसा सॉफ्टवेयर है जो एक बार में संपूर्ण `code` को स्कैन करता है और यदि `code` में कोई `error` है, तो यह `code` के अंत में `error` दिखाता है। =``aW50ZXJwcmV0ZXI=``Y29kZQ==`+ʹЯG�`ZXJyb3I=`�w",
    "definition-part-2_key13": "**`Compiler` का उपयोग C और C++ प्रोग्रामिंग भाषाओं में किया जाता है।**\n",
    "definition-part-2_key14": "ध्यान दें :\n",
    "definition-part-2_key16": "`Compiler` और `Interpreter` का विस्तार से अध्ययन करने के लिए कृपया इस लिंक पर क्लिक करें।",
    "definition-part-2_key17": "`Compiler` और `Interpreter`",
    "definition-part-2_key18": " ",
    "definition-part-2_key19": "`Case Sensiti\f� `\n",
    "definition-part-2_key20": "केस सेंसिटिव का मतलब है कि हमने जो टेक्स्ट टाइप किया है वह ठीक वैसा ही होना चाहिए जैसा हम इसे `code` में कहीं भी टाइप करते हैं।\n",
    "definition-part-2_key21": "उदाहरण :-\n",
    "definition-part-2_key22": "T3V0cHV0`",
    "definition-part-2_key23": "`Var is not defined`\n",
    "definition-part-2_key24": "उदाहरण के लिए, उपरोक्त उदाहरण में, हमने एक `variable` को **var** नाम दिया है और प्रिंट करते समय हमने **Var** टाइप किया है, इसलिए एक `error` प्रदर्शित किया गया था क्योंकि `python` var और Var में हैं विभिन्न। `python` में छोटे अक्षरों और बड़े अक्षरों को अलग-अलग माना जाता है।\n",
    "definition-part-2_key25": "नोट- संवेदनशील केस का विस्तार से अध्ययन करने के लिए आप इस लिंक पर क्लिक कर सकते हैं।\n",
    "definition-part-2_key26": "अक्षर संवेदनशील\n",
    "definition-part-2_key27": "\n",
    "definition-part-2_key28": "`Error/ Bugs`\n",
    "definition-part-2_key29": "जब हम `code` लिखते समय कोई गलती करते हैं, तो उस गलती को `error`/bug कहा जाता है।\n",
    "definition-part-2_key30": "उदाहरण :-\n",
    "definition-part-2_key31": "T3V0cHV0`",
    "definition-part-2_key32": "`SyntaxError: unexpected EOF while parsing`\n",
    "definition-part-2_key33": "उदाहरण :-\n",
    "definition-part-2_key34": "T3V0cHV0`",
    "definition-part-2_key35": "`SyntaxError: invalid syntax`\n",
    "definition-part-2_key36": "इस उदाहरण में आपने देखा कि प्रिंट करते समय मैं कोष्ठक लगाना भूल गया था, इसलिए इसने हमें एक `syntax` `error` दिखाया, जिसका अर्थ है कि हमारे `code` में कुछ गलती है/`error`।\n",
    "definition-part-2_key37": "डिबग करता है\n",
    "definition-part-2_key38": "डिबग का अर्थ है दिए गए `code` में बग/`error` को हल करना या `code` से `error` को हटाना और सही `code` लिखना जो कि `syntax` के अनुसार है।\n",
    "definition-part-2_key39": "उदाहरण :-\n",
    "definition-part-2_key40": "T3V0cHV0`",
    "definition-part-2_key41": "`3�`\n",
    "definition-part-2_key42": "उदाहरण :-\n",
    "definition-part-2_key43": "T3V0cHV0`",
    "definition-part-2_key44": "``\n",
    "definition-part-2_key45": "जैसा कि आपने बग उदाहरण में देखा कि दूसरे `code` में एक बग मौजूद था, इसलिए हमने उस `code` को डिबग किया।\n",
    "definition-part-2_key46": "`Source code`\n",
    "definition-part-2_key47": "स्रोत `code` वह `code` है जिसे मनुष्य आसानी से समझ सकते हैं।\n",
    "definition-part-2_key48": "उदाहरण :-\n",
    "definition-part-2_key49": "T3V0cHV0`",
    "definition-part-2_key50": "`python`\n",
    "definition-part-2_key51": "इस उदाहरण में आपने देखा कि हमने एक `variable` को **name** नाम दिया है और हमने इसमें `python` स्टोर किया है। Ypu इस `code` को आसानी से पढ़ और समझ सकता है। यह `code` को `source code/ main code` कहा जाता है।\n"
}