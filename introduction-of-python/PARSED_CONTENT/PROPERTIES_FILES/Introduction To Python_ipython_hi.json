{
    "ipython_key1": "अब हम `iPython` . के बारे में जानेंगे\n",
    "ipython_key2": "यहाँ हम सीखेंगे, `ipython` क्या है और हम इसका उपयोग क्यों करते हैं?\n",
    "ipython_key3": "जब आप `Terminal` पर `python` लिखते हैं, तब *`python` `shell`* `Terminal` पर खुलता है। इसे चलाने के लिए आप अपना `python` `code` *`python` `shell`* पर लिखें।\n`iPython` भी वही काम करता है लेकिन यह कुछ अतिरिक्त सुविधाएं प्रदान करता है। उनमें से कुछ विशेषताओं का हम नीचे अध्ययन करेंगे:\n",
    "ipython_key4": "`python` और `iPython` . के बीच अंतर\n",
    "ipython_key5": "पहले `iPython` . के साथ\n",
    "ipython_key6": "सबसे पहले, `Terminal` पर `ipython` लिखें और *Enter* दबाएं।\nअब इसमें `cd Downloads` लिखें और *Enter* दबाएं।\nफिर `ls` लिखें और *Enter* दबाएं.\nआप सभी **फ़ोल्डर और `files`** देख पाएंगे जो आपने डाउनलोड फ़ोल्डर के अंतर्गत रखे थे।\nअब `iPython` `shell` से बाहर आने के लिए `shell` के अंदर `quit` लिखें और **Enter** दबाएं।\n",
    "ipython_key7": "अब हम वही काम `python` . के साथ करेंगे\n",
    "ipython_key8": "`Terminal` पर `ipython` लिखें और **Enter** दबाएं\n",
    "ipython_key9": "अब `cd Downloads` लिखें और **Enter** दबाएं।\n",
    "ipython_key10": "आप `Terminal` पर कुछ इस तरह देख पाएंगे?\nइसका मतलब है कि आप **डाउनलोड** फ़ोल्डर में **`python` `shell`** की मदद से नहीं जा सकते।\n",
    "ipython_key11": "इसके लिए आपको **`python` `shell`** से बाहर आना होगा और इसके लिए आपको **`python` `shell`** पर `quit` टाइप करना होगा।\n",
    "ipython_key12": "अब बाहर आकर `cd Downloads` टाइप करें और फिर `ls` टाइप करें आप डाउनलोड में जो कुछ भी मौजूद है उसे देख पाएंगे।\n",
    "ipython_key13": "आप सामान्य **`python` `shell`** का उपयोग करके अपना **फ़ोल्डर** नहीं बदल सकते। इसके लिए आपको **`python` `shell`** से बाहर आना होगा। लेकिन आप इस `python` `shell` के अंदर **फ़ोल्डर** को आसानी से बदल सकते हैं ताकि आपको **`iPython` `shell`** से बाहर आने की आवश्यकता न पड़े।\n",
    "ipython_key14": "और जब आप **`python` `shell`** टाइप करेंगे।\n",
    "ipython_key15": "फिर ध्यान दें कि कर्सर `(**|**) ` इसके बाद बिना किसी स्थान के आता है `...` ।\nलेकिन अगर आप इसे **`iPython` `shell`** में टाइप करेंगे तो यह इस तरह दिखेगा।\n",
    "ipython_key16": "तब आप देखेंगे कि कर्सर `` (** | **) ` comes after some spaces.\nWe call this **` Indentation`**. When you will write the `code` for the first time **50% ` error`** will be there because of lack of **`Indentation`**.\nHence, ` iPython` makes the life of an engineer very easy by providing extra features.\n",
    "ipython_key17": "जब `iPython` खुलता है तो आप उसमें `code` लिख सकते हैं। अगर आप कहीं से `code` कॉपी-पेस्ट कर रहे हैं तो कॉपी-पेस्ट करने के लिए `Ctrl + C` दबाएं और `iPython` खोलें और `code` चिपकाने के लिए `%paste` टाइप करें।\n",
    "ipython_key18": "बहुत महत्वपूर्ण नियम\n",
    "ipython_key19": "प्रत्येक उदाहरण को `iPython `shell`` पर चलाएँ। अगर आप ऐसा नहीं करते हैं तो आप खुद को बेवकूफ बना लेंगे।\n",
    "ipython_key20": "कॉपी-पेस्ट करने और `code` चलाने से आपको `code` को समझने में मदद नहीं मिलेगी। आपको प्रत्येक `code` को स्वयं चलाना होगा।\n",
    "ipython_key21": "UPPER CASE या **बोल्ड लेटर्स** में लिखे गए शब्द बहुत महत्वपूर्ण हैं। उन्हें जानें, आप उनसे कई बार मिलेंगे।\n",
    "ipython_key22": "पाठ्यक्रम के दौरान आपको कभी-कभी कुछ प्रश्नों के उत्तर देने होते हैं। उन सवालों के जवाब देने के लिए आप हमेशा `upload` a `file` कर सकते हैं।\n\n\n",
    "ipython_key23": "कुछ `Code` नमूने\n",
    "ipython_key24": "इस खंड में, कुछ `code` नमूने दिए गए हैं। `iPython` के साथ `tab` को आराम देने के लिए, आप उन्हें `ipython` पर चला सकते हैं।\n",
    "ipython_key25": "उदाहरण 1 :-\n",
    "ipython_key26": "उदाहरण 2:-\n"
}