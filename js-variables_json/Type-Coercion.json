[
	{
		"component": "header",
		"variant": 3,
		"value": "Example:"
	},
	{
		"component": "code",
		"type": "javascript",
		"title": "",
		"value": "var name = \"navgurukul\";<br>var num = 29;<br>var result = name + num;<br>console.log(result);<br>// Output :  navgurukul29 <br>"
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Explanation:"
	},
	{
		"component": "text",
		"value": "If you look at the <span style=\"\">variable</span> result, you may think that this <span style=\"\">variable</span> is trying to add a <span style=\"\">string</span> (navgurukul) to a number (29). But that is not the case, because you cannot add a <span style=\"\">string</span> to a number. JS in such circumstances, will convert the number 29 into the <span style=\"\">string</span> “29” and will join (or concatenate) the two <span style=\"\">strings</span>.  "
	},
	{
		"component": "text",
		"value": "Thus the <span style=\"\">output</span> of result will be <b>navgurukul29</b>  "
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Note"
	},
	{
		"component": "text",
		"value": "This auto converting of a value from one type to another — such as number to <span style=\"\">string</span> — in JS is called <b>Type Coercion</b>.  "
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Example:"
	},
	{
		"component": "code",
		"type": "javascript",
		"title": "",
		"value": "var measure = \"height\";<br>var val = 16.5;<br>var result = measure + val;<br>console.log(result);<br><br>// Output :- height16.5<br>"
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Explanation:"
	},
	{
		"component": "text",
		"value": "If you look at the <span style=\"\">variable</span> result, you may think that this <span style=\"\">variable</span> is trying to add a <span style=\"\">string</span> (height) to a <span style=\"\">float</span> (16.5). But that is not the case, because you cannot add a <span style=\"\">string</span> to a number. JS in such circumstances, will convert the <span style=\"\">float</span> 16.5 into the <span style=\"\">string</span> “16.5” and will join (or concatenate) the two <span style=\"\">strings</span>.  "
	},
	{
		"component": "text",
		"value": "Thus the <span style=\"\">output</span> of result will be <b>height16.5</b>"
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Note"
	},
	{
		"component": "text",
		"value": "This auto converting of a value from one type to another — such as <span style=\"\">float</span> to <span style=\"\">string</span> — in JS is called Type Coercion."
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Examples:"
	},
	{
		"component": "header",
		"variant": 4,
		"value": "What is the output of the following code?"
	},
	{
		"component": "code",
		"type": "javascript",
		"title": "",
		"value": "console.log(true + false)<br>"
	},
	{
		"component": "text",
		"value": "// <span style=\"\">Output</span> : 1"
	},
	{
		"component": "code",
		"type": "other",
		"title": "",
		"value": "### Explanation:<br><br>1 is considered to be true because it is non-zero. Thus the reason true  value is 1, False value is 0. It will compute true+false as 1+0 and prints 1.<br><br><br>2. What is the error in this program?<br>javascript<br>var num=24<br>var a=\"kumar\"<br>console.log(24/\"kumar\")<br>// Output : NaN<br>"
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Explanation:"
	},
	{
		"component": "text",
		"value": "There is no <span style=\"\">error</span> in this following <span style=\"\">code</span>. But it will return a NaN, when a number is divided by non <span style=\"\">integer</span> so it is not able to solve the problem."
	}
]