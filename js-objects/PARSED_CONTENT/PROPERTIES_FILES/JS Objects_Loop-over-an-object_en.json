{
	"Loop-over-an-object_key1": "for in `loop` is a special type of `loop` that iterates over the object or an array of elements.\n",
	"Loop-over-an-object_key2": "Example:\n",
	"Loop-over-an-object_key3": "Explanation:\n",
	"Loop-over-an-object_key4": "By for in when you are `loop`ing on an array, in the car each time its `key` (index number) will come like 0,1 ,2 respectively. \n",
	"Loop-over-an-object_key5": "When the first time `loop` is running the car value is 0, we said to print cars[car] means cars[0] so it prints Maruti because in the zeroth position of cars we have Maruthi.\n",
	"Loop-over-an-object_key6": "When the second time `loop` is running, the car value is 1, we said to print cars[car] means cars[1] so it print Mercedes because in the first position of cars we have Mercedes.\n",
	"Loop-over-an-object_key7": "When the third time `loop` is running, the car value is 2, we said to print cars[car] means cars[2] so it prints BMW because in the first position of cars we have BMW.\n",
	"Loop-over-an-object_key8": "Example:\n",
	"Loop-over-an-object_key9": "Explanation:\n",
	"Loop-over-an-object_key10": "By for in when you are `loop`ing  on Array, in  the campus each time its `key` (index number) will come like 0,1 ,2, 3 respectively. \n",
	"Loop-over-an-object_key11": "In the above example, we are using an `operator` with for `loop`. For within `operators`, use to give the index of an array.\n",
	"Loop-over-an-object_key12": "Example:\n",
	"Loop-over-an-object_key13": "Explanation:\n",
	"Loop-over-an-object_key14": "By for in when you are `loop`ing on Dictionary (object), in  person_details each time its `key` will come like name, surname, age respectively. \n",
	"Loop-over-an-object_key15": "When the first time `loop` is running the person_details value is name, we said to print person[person_details] means person[\"name\"] so it prints gouri because in person dictionary name `key` has the value of gouri.\n",
	"Loop-over-an-object_key16": "With the `string` concatenation \n",
	"Loop-over-an-object_key17": "person_details+ \"= \"+person[\"name\"], name= gouri\n",
	"Loop-over-an-object_key18": "When the second time `loop` is running, the person_details value is surname. We said to print person[person_details] means person[\"surname\"] so it prints maity because in person dictionary surname `key` has the value maity.\n",
	"Loop-over-an-object_key19": "With the `string` concatenation \n",
	"Loop-over-an-object_key20": "person_details+ \"= \"+person[\"surname\"],surname=maity\n",
	"Loop-over-an-object_key21": "When the third time `loop` is running, the person_details value is age, we said to print person[person_details] means person[\"age\"] so it prints 37 because in the person dictionary age has the value of 37.\n",
	"Loop-over-an-object_key22": "With the `string` concatenation \n",
	"Loop-over-an-object_key23": "person_details+ \"= \"+person[\"age\"],age= 37\n",
	"Loop-over-an-object_key24": "Example:\n",
	"Loop-over-an-object_key25": "By for in when you are `loop`ing on Dictionary (object), in  each`Key` each time its `key` will come like camp_name, es`tab`lish, election respectively. \n",
	"Loop-over-an-object_key26": "When the first time `loop` is running the each`Key` value is camp_name, we said to print campus[pro] means campus[“camp_name”] so it prints Bangalore_campus  because in the campus dictionary camp_name `key` has the value of Bangalore_campus.\n",
	"Loop-over-an-object_key27": "When the second time `loop` is running, the each`Key` value is es`tab`lish. We said to print  campus[pro] means campus[“es`tab`lish”] so it prints 2016 because in the campus dictionary es`tab`lish `key` has the value 2016.\n",
	"Loop-over-an-object_key28": "When the third time `loop` is running, the each`Key` value is election, we said to print campus[pro] means campus[“election”] so it prints three_months because in the campus dictionary election has the value of theree_months.\n"
}