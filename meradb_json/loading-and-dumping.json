[
	{
		"component": "header",
		"variant": 1,
		"value": "Loading and Dumping Da<span style=\"\">tab</span>ase"
	},
	{
		"component": "text",
		"value": "Agar dekha jaye, toh yeh da<span style=\"\">tab</span>ase ek simple json <span style=\"\">file</span> hi hai."
	},
	{
		"component": "text",
		"value": "Da<span style=\"\">tab</span>ase load karna - simply - uss <span style=\"\">file</span> ko json mei padh kar ek json object mei load karna ke barabar hoga."
	},
	{
		"component": "text",
		"value": "Aise hi, dump karna uss <span style=\"\">file</span> ko json.dumps use kar kar, uss <span style=\"\">file</span> mei dump karne ke barabar hoga. "
	},
	{
		"component": "text",
		"value": "Iske liye hum python ki <a href=\"https://docs.python.org/2/library/json.html\">json</a> library use karenge."
	},
	{
		"component": "header",
		"variant": 2,
		"value": "Starting <span style=\"\">Code</span>"
	},
	{
		"component": "text",
		"value": "Iss code ko implement karne ke liye, maine classes use ki hai. Aap kisi aur tarah se bhi yeh kar sakte hai. Classes ke introduction ke liye, aap yeh <a href=\"https://www.w3schools.com/python/python_classes.asp\">padhein</a>."
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "import json<br><br># fileName = \"hello.db\"<br># Default argument dena ek acchi coding practice hai.<br># Isse agar user koi argument nahi bhi de, toh bhi code sahi chalega<br>def load(fileName='hello.db'):<br>    <br>    Yeh ek fileName leta hai, jiska content yeh load karta hai<br>    By default yeh hello.json file ko load karta hai<br>    Content load kar ne ke liye, yeh ek MeraDB class ka object<br>    create karta hai. Ussi object ko yeh return kar deta hai<br>    jisse ki hum uss object par set, get, aur dump jaise<br>    functions call kar sakein.<br>    <br>    meraDB = MeraDB(fileName)<br>    meraDB.load_file()<br>    return meraDB<br><br>class MeraDB():<br>    <br>    Yeh main class hai, jaha saara magic hoga!<br><br>    Humne yeh class isliye banayi jisse ki hum meradb object bana kar<br>    uss par koi bhi functions call kar sake<br><br>    Jaise list_a = [1,2,4] kar kar aap list_a naam ki list create karte ho<br>    Phir aap list_a object par functions call kar sakte ho, jaise<br>    list_a.append(another_list), list_a.pop()<br><br>    aise hi jab aap meradb ka object declare karoge, toh class use karne ke<br>    vajah se, hum meradb object par functions call kar payenge, jaise:<br><br>    mdb = MeraDB(\"dbfile.json\")<br>    mdb.load_file()<br>    mdb.dump()<br>    <br>    class ke ander variable ko property bolte hai aur function ko method.<br><br>    <br>    fileName = \"\"<br>    jObject = {}<br><br>    def __init__(self, fileName):<br>        <br>        Yeh constructor function hai, jo object declare karne par<br>        call hoga. Jo bhi fileName isse milega, yeh woh apni <br>        fileName property mei store kar lega. Isse yeh property<br>        object mei kahi bhi self.fileName kar kar, available hogi.<br>        Isliye jab hum dump_file function aage call karenge<br>        toh apne aap iss code ko pata hoga, ki kis file mei content<br>        dump karne hai. Woh bas self.fileName file mei jakar contents<br>        save/dump kar dega. Aise hi aap aur bhi properties bana sakte<br>        hai. Jaise humne jObject kar kar ek property banayi hai. Iss<br>        property mei, jab bhi database load karte hai, woh dictionary<br>        hum jObject store kar lete hai. Jab bhi koi value set ya get karni<br>        hoti hai, toh hum jObject se hi karte hai. Aakhir mei, dump karte <br>        hue hum jObject ko dump kar dete hai, jab bhi dump function call<br>        hota hai.<br>        <br>        self.fileName = fileName<br><br>    def load_file(self):<br>        <br>        Yeh file ko load karne ke liye function hai<br>        <br>        print \"Loading Database from \", self.fileName, \" !\"<br>        content = open(self.fileName).read()<br>        self.jObject = json.loads(content)<br>        print \"DB loaded successfully!\"<br>        return self.jObject<br><br>    def dump(self):<br>        <br>        Iss function ko use kar kar, aap content ko dump kar satke hai<br>        <br>        print \"Dumping database to \", self.fileName, \" !\"<br>        <br>        open(self.fileName, 'w').write(json.dumps(self.jObject))<br>        <br>        You can also write the above line as:<br>        file_handler = open(self.fileName, 'w')<br>        json_dump = json.dumps(self.jObject)<br>        file_handler.write(json_dump)<br>        file_handler.close()<br>        <br><br>        print \"DB dumped successfully!\"<br>        return \"OK\""
	},
	{
		"component": "text",
		"value": "<span style=\"\">Save</span> this <span style=\"\">file</span> as meradb.py. Isse hum <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">import meradb</span> kar payenge."
	},
	{
		"component": "text",
		"value": "You can use by writing the following content in your <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">usedb.py</span> <span style=\"\">file</span>."
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "import meradb<br>db = meradb.load(\"table.db\")<br>db.dump()"
	},
	{
		"component": "text",
		"value": "Ek <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">table.db</span> <span style=\"\">file</span> banao jismei yeh content daalo."
	},
	{
		"component": "code",
		"type": "other",
		"title": "",
		"value": "{}"
	},
	{
		"component": "text",
		"value": "Isse aapka <span style=\"\">code</span> <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">table.db</span> se ek empty da<span style=\"\">tab</span>ase ko load kar payega."
	},
	{
		"component": "text",
		"value": "Agar aap dekhenge toh humne jaise pickleDB use kiya jaata hai, ussi ki tarah ki basic implementation kar di hai. Yeh implementation samajhne ke liye aap ko thoda time spend karna chahiye."
	},
	{
		"component": "text",
		"value": "Uske baad iss <span style=\"\">code</span> ko khud likhiye, aur koshish karein ki <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">ek hi baar</span> mei chal jayein. Copy and paste kar kar chalane ka fayda nahi hai."
	},
	{
		"component": "header",
		"variant": 2,
		"value": "FAQs"
	},
	{
		"component": "text",
		"value": "Humne teen <b><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">files</span></b> kyu banayi hai?"
	},
	{
		"component": "text",
		"value": "Jo hum database bana rahe hai - uska code ek file mei <b><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">meradb.py</span></b> hai, jisse ki koi bhi usse use kar payein.",
		"decoration": {
			"type": "bullet"
		}
	},
	{
		"component": "text",
		"value": "<b><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">usedb.py</span></b> woh code hai, jo koi bhi user likh sakta hai - hamare database ko use karne ke liye.",
		"decoration": {
			"type": "bullet"
		}
	},
	{
		"component": "text",
		"value": "<b><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">hello.db</span></b> woh code hai, jo ek empty database initialise karta hai.Hum aagein <b><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Exercise</span></b> mei dekhenge ki kaise bina hello.db file banaye, yeh code likha ja sakta hai.",
		"decoration": {
			"type": "bullet"
		}
	},
	{
		"component": "text",
		"value": "Note: Iss program mai hum ek <span style=\"\">file</span> se data nikal ke dusre <span style=\"\">file</span> mai store kar rhe hai, par diye gai program mai hum ek hi <span style=\"\">file</span> se data nikal ke usmai hi store kar rhe hai , aap chahe toh do <span style=\"\">file</span> bana sakte hai or ek <span style=\"\">file</span> se data nikal kar dusre mai store kar ke dekh sakte hai.<br>Why we are using json. before dumps and loads?<br>We are doing so, to convert <span style=\"\">python</span> data to JSON data. At first import json module. Than use json.dumps() function to de<span style=\"\">code</span> the json data."
	},
	{
		"component": "header",
		"variant": 2,
		"value": "Exercise"
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Edge Case 1"
	},
	{
		"component": "text",
		"value": "Agar <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">table.db</span> ek empty <span style=\"\">file</span> hogi, toh <span style=\"\">code</span> mei kya <span style=\"\">error</span> aayegi? Aap kaise <span style=\"\">code</span> ko modify kar sakte hai, jisse ki ek empty <span style=\"\">file</span> hone se bhi da<span style=\"\">tab</span>ase load ho jaye aur <span style=\"\">error</span> throw na ho."
	},
	{
		"component": "text",
		"value": "Yeh baat ka dhyaan rakhna ki edge ek special case hota hai. Jab bhi woh edge case aayega, toh humei specially us ko handle karna hota hai. Toh is ko aise sochiye, ki koi if condition hogi, jo aapko daalni hogi, iske solution ke liye."
	},
	{
		"component": "code",
		"type": "python",
		"title": "",
		"value": "if edge_case:<br>    kuch_jugaad_karo"
	},
	{
		"component": "text",
		"value": "Kya aap <span style=\"\">code</span> ko padh kar samajh gaye the ki - yeh case sahi se handled nahi hai?"
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Edge Case 2"
	},
	{
		"component": "text",
		"value": "Agar <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">table.db</span> <span style=\"\">file</span> exist nahi karegi, toh <span style=\"\">code</span> kya <span style=\"\">error</span> throw karega? (Koshish kara karein, ki bina run guess kar payein, aise questions ka answer. Phir chala kar apna answer verify aur discuss karein. Aise hi aap acche se programming mei apna confidence build kar payenge.)"
	},
	{
		"component": "text",
		"value": "Kya yeh <span style=\"\">error</span> throw ki jaani chahiye?"
	},
	{
		"component": "text",
		"value": "Agar aap chahe ki yeh <span style=\"\">error</span> na throw ho toh - toh aap kya modifications kar sakte hai jisse ki agar <span style=\"\">file</span> na bhi exist karein toh bhi aapka <span style=\"\">code</span> sahi chalein aur koi <span style=\"\">error</span> throw na karein?"
	},
	{
		"component": "text",
		"value": "Kya aap yeh edge case soch payei the?"
	}
]