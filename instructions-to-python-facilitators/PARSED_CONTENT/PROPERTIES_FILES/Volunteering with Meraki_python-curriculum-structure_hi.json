{
    "python-curriculum-structure_key1": "**_8 पाठ्यक्रम `Python`_** में **_23 कार्यशाला कक्षाओं_** में विभाजित हैं। हम उम्मीद करते हैं कि आप इस कक्षा विभाजन का पालन करें, यह सुनिश्चित करने के लिए कि सीखने का क्रम बना रहे, और एक बच्चे को वापस आने और केवल उन्हीं विशिष्ट कक्षाओं में भाग लेने का अवसर मिले, जिनमें उसे संदेह था, या किसी भी कारण से चूक गया था।\n",
    "python-curriculum-structure_key2": "कृपया छात्रों की सीखने की गति में एकरूपता सुनिश्चित करने के लिए कक्षा शीर्षक के इस नामकरण का उपयोग करें।",
    "python-curriculum-structure_key3": "कक्षा शीर्षक",
    "python-curriculum-structure_key4": "कक्षा विवरण",
    "python-curriculum-structure_key5": "अपेक्षित परिणाम",
    "python-curriculum-structure_key6": "कक्षा 1 - `Python` . का परिचय",
    "python-curriculum-structure_key7": "कंप्यूटर क्या करते हैं? प्रोग्रामिंग क्या है? आपको प्रोग्रामर क्यों बनना चाहिए? प्रोग्रामिंग का उपयोग क्या है? मूल परिभाषाएं",
    "python-curriculum-structure_key8": "यह परिचयात्मक मॉड्यूल आपको अपना परिचय देने और छात्रों के साथ संबंध बनाने में मदद करेगा। इसमें शामिल होना चाहिए **क्यों** छात्र को प्रोग्रामिंग सीखनी चाहिए और इससे उन्हें कैसे लाभ होगा। छात्रों में जिज्ञासा पैदा करने के लिए प्रारंभिक कक्षाओं का उपयोग करें। आप उन्हें दिखा सकते हैं कि प्रोग्रामिंग का उपयोग करके कोई क्या हासिल कर सकता है, उनसे पूछें कि क्या वे भविष्य में ऐसा कुछ बनाना चाहते हैं, और उन्हें वहां पहुंचने के लिए कदम उठाने के बारे में बताएं।",
    "python-curriculum-structure_key9": "कक्षा 2 - `Python` और परिभाषाओं का परिचय",
    "python-curriculum-structure_key10": "बुनियादी परिभाषाओं के साथ जारी रखें, आपको `Python` क्यों सीखना चाहिए? `Python` की विशेषताएं क्या हैं? 'UHl0aG9u' से कैसे शुरुआत करें? कमेंट कैसे लिखें? `Indentation` क्या है? `Python` के `Applications` क्या हैं?",
    "python-curriculum-structure_key11": "यह मॉड्यूल पिछली कक्षा की परिभाषाओं के साथ जारी रहेगा। प्रोग्रामिंग सीखना शुरू करने के लिए हम `Python` का उपयोग क्यों करते हैं, इसकी समझ साझा करें। इस मॉड्यूल का उद्देश्य छात्रों में `Python` सीखने के लिए साज़िश और रुचि पैदा करना होना चाहिए।",
    "python-curriculum-structure_key12": "कक्षा 3 - `Variables`",
    "python-curriculum-structure_key13": "एक `Variable` क्या है? नामकरण के विभिन्न नियम क्या हैं? हम `variables` को मान कैसे निर्दिष्ट कर सकते हैं? अभ्यास प्रश्न और प्रश्नोत्तरी",
    "python-curriculum-structure_key14": "विद्यार्थी को `Variables` की अवधारणा को समझाने पर पूरी कक्षा खर्च करें, क्योंकि यह कोडिंग सीखने का पहला कदम है। आप लाइव उदाहरण साझा कर सकते हैं, उन्हें कई `variable` नाम दिखा सकते हैं और उनके द्वारा सीखे गए नियमों के आधार पर उन्हें सही नाम चुनने के लिए कह सकते हैं। आप उन्हें मेरीकी Android `Application` पर अपनी स्क्रीन साझा करने और `Python` `compiler` प्लेग्राउंड कहे जाने वाले पर लिखने के लिए भी कह सकते हैं।",
    "python-curriculum-structure_key15": "कक्षा 4 - डेटा प्रकार",
    "python-curriculum-structure_key16": "डेटा प्रकार क्या हैं? `Python` में पूर्वनिर्धारित डेटा प्रकार क्या हैं? विभिन्न संख्यात्मक डेटा प्रकार क्या हैं - `Integer`, `Float`, कॉम्प्लेक्स? अभ्यास प्रश्न",
    "python-curriculum-structure_key17": "इस मॉड्यूल को `Python` में उपयोग किए जाने वाले विभिन्न प्रकार के डेटा प्रकारों का परिचय देना चाहिए, और छात्रों को संख्यात्मक डेटा प्रकारों से संबंधित अवधारणाओं के साथ स्पष्ट होना चाहिए।",
    "python-curriculum-structure_key18": "कक्षा 5 - डेटा प्रकार",
    "python-curriculum-structure_key19": "`String` डेटा प्रकार, बूलियन डेटा प्रकार, डेटा प्रकार `Conversion` की गहराई से व्याख्या में। अभ्यास प्रश्न और प्रश्नोत्तरी",
    "python-curriculum-structure_key20": "एक छात्र को डेटा प्रकारों से परिचित होना चाहिए और डेटा प्रकारों और `conversions` से संबंधित प्रश्नों का उत्तर देने में सक्षम होना चाहिए।",
    "python-curriculum-structure_key21": "कक्षा 6 - `Operators`",
    "python-curriculum-structure_key22": "`Operators` क्या हैं? `Python` में `Operators` के विभिन्न प्रकार क्या हैं? अंकगणित की गहन व्याख्या में `Operators`, उदाहरण के साथ। `Operator` वरीयता। अभ्यास प्रश्न और प्रश्नोत्तरी",
    "python-curriculum-structure_key23": "उन्हें `operators` की अवधारणा को समझने के लिए लाइव उदाहरण साझा करें। उन्हें `Operator` वरीयता के साथ प्रयोग करें क्योंकि यह अवधारणा बहुत स्पष्ट होनी चाहिए और सुनिश्चित करें कि कोई भ्रम नहीं है।",
    "python-curriculum-structure_key24": "कक्षा 7 - `Operators`",
    "python-curriculum-structure_key25": "असाइनमेंट क्या हैं `Operators`, तुलना `Operators` और तार्किक `Operators`? ढेर सारे उदाहरण साझा करें, प्रश्नों का अभ्यास करें और प्रश्नोत्तरी करें",
    "python-curriculum-structure_key26": "बेसिक डेफिनिशन से विषयों को ब्रश करें, और उनसे क्रॉस प्रश्न करें। उन्हें खेल के मैदान पर साधारण `codes` चलाने में सक्षम होना चाहिए।",
    "python-curriculum-structure_key27": "कक्षा 8 - `Operators` और संशोधन",
    "python-curriculum-structure_key28": "बिटवाइज़, सदस्यता और पहचान का परिचय `Operators`। `Operators`, डेटा प्रकार और `Variables` पर संशोधन और अभ्यास प्रश्न",
    "python-curriculum-structure_key29": "बच्चे की मूल बातें स्पष्ट होनी चाहिए। जटिलता के बावजूद, बिटवाइज़, सदस्यता और पहचान `operators` को पेश किया जा सकता है, जो भविष्य के विषयों के लिए उपयोगी होगा। इस कक्षा के बाद हम इफ-एल्स, `��`, आदि जैसे कार्यों पर आगे बढ़ेंगे।",
    "python-curriculum-structure_key30": "कक्षा 9 - यदि और हो तो",
    "python-curriculum-structure_key31": "हम शर्तों का उपयोग क्यों करते हैं? एक शर्त क्या है? इफ-एल्स का उपयोग कैसे करें? फ़्लोचार्ट क्या हैं और हमें उन्हें कैसे तैयार करना चाहिए? हमें इफ-एल्स `code` कैसे लिखना चाहिए?",
    "python-curriculum-structure_key32": "इफ-एल्स के साथ शुरू करने से पहले, छात्रों को एल्गोरिदम से परिचित होना चाहिए और फ्लो चार्ट कैसे बनाना चाहिए, और फ्लो चार्ट के हर बॉक्स के बारे में जानना चाहिए, जैसे: स्टार्ट बॉक्स, कंडीशन बॉक्स, आदि। उन्हें अपनी स्थिति को लागू करने में सक्षम होना चाहिए `code`। आप उन्हें खेल के मैदान पर अपनी स्क्रीन और `code` साझा करने के लिए कह सकते हैं।",
    "python-curriculum-structure_key33": "कक्षा १० - यदि अन्यथा",
    "python-curriculum-structure_key34": "इफ-एलिफ का परिचय और उदाहरण। अगर-और \"और\" और \"या\" के साथ। रिवीजन के लिए `code` ड्राय रन करें। अभ्यास प्रश्न और प्रश्नोत्तरी",
    "python-curriculum-structure_key35": "छात्रों को अपने स्वयं के `code` को समझाने और लिखने और शर्तों के साथ प्रयोग करने में सक्षम होना चाहिए। कक्षा में छात्रों के बीच चर्चा और क्रॉस-क्वेश्चन सक्षम करें, ताकि उन्हें अपने `code` पर विश्वास हो सके। आप `code` के प्रवाह की पुष्टि करने के लिए ड्राय रन के साथ इसका अनुसरण कर सकते हैं।",
    "python-curriculum-structure_key36": "कक्षा ११ - यदि अन्यथा",
    "python-curriculum-structure_key37": "नेस्टेड अगर-अन्य। अभ्यास प्रश्न और प्रश्नोत्तरी",
    "python-curriculum-structure_key38": "छात्रों को कई को जानना चाहिए यदि कोई और है और यदि और है तो के प्रवाह को समझना चाहिए और यदि अन्य है तो नेस्टेड होना चाहिए। आप उन्हें फ़्लोचार्ट और इफ़-एल्स पर अधिक अभ्यास प्रश्न दे सकते हैं।",
    "python-curriculum-structure_key39": "कक्षा १२ - यदि अन्यथा",
    "python-curriculum-structure_key40": "इफ-एल्स कंडीशन पर रिवीजन और अभ्यास प्रश्न",
    "python-curriculum-structure_key41": "आप छात्रों से कई प्रश्न पूछकर और प्रत्येक बच्चे से इसे हल करने के लिए कहकर इसे एक इंटरैक्टिव सत्र बना सकते हैं। आप उन्हें MCQs, या `True` या `False` प्रश्नों के माध्यम से सही `code` चुनने के लिए कह सकते हैं। आगे बढ़ने के लिए बच्चे को इस मॉड्यूल की स्पष्ट समझ होनी चाहिए।",
    "python-curriculum-structure_key42": "कक्षा १३ - `��`",
    "python-curriculum-structure_key43": "`Loops` क्या हैं? `Loops` का उपयोग करने के क्या लाभ हैं? काउंटर क्या है? काउंटरों के उदाहरण। `Python` में विभिन्न प्रकार के `loops` - जबकि `loop`। अभ्यास प्रश्न और प्रश्नोत्तरी",
    "python-curriculum-structure_key44": "`Loops` के वास्तविक जीवन के उदाहरण, और प्रकार और उनके `syntax` साझा करें। `Loops` का प्रवाह, वेतन वृद्धि और कमी और यह कैसे किया जा सकता है, स्पष्ट होना चाहिए।",
    "python-curriculum-structure_key45": "कक्षा 14 - `Loops`",
    "python-curriculum-structure_key46": "`Loop` नियंत्रण `statements` जैसे कि जारी रखें, तोड़ें, पास करें। नेस्टेड जबकि `loops`। लाइव उदाहरण और अभ्यास प्रश्न साझा करें।",
    "python-curriculum-structure_key47": "छात्र को पता होना चाहिए कि कब और क्यों जारी रखें, ब्रेक और पास और इसके अंतर का उपयोग करें। प्रवाह और `syntax` स्पष्ट होना चाहिए। नेस्टेड जबकि `Loops` में पैटर्न सुनिश्चित करें और अवधारणाओं के साथ-साथ तर्क पर भी ध्यान दें।",
    "python-curriculum-structure_key48": "कक्षा १५ - `��`",
    "python-curriculum-structure_key49": "`Loops` के लिए मूल बातें। सदस्यता संशोधित करें `operator`। `Loop` अनुक्रम (`String`) का उपयोग करने और रेंज () का उपयोग करने के लिए। अभ्यास प्रश्न और प्रश्नोत्तरी",
    "python-curriculum-structure_key50": "छात्र को पता होना चाहिए कि रेंज कैसे काम करती है और यह कहां से शुरू होती है और कहां रुकती है, `syntax` और `loop` के लिए प्रवाह। पता होना चाहिए कि क्या `String` में अनुक्रमण है और `loop` का उपयोग करके `string` पर पुनरावृति कैसे करें।",
    "python-curriculum-structure_key51": "कक्षा 16 - `Loops`",
    "python-curriculum-structure_key52": "अन्यथा `loop` के लिए। के लिए `statements` नियंत्रण का उपयोग करना। `loop` के लिए नेस्टेड। अभ्यास प्रश्न और प्रश्नोत्तरी।",
    "python-curriculum-structure_key53": "छात्रों को पता होना चाहिए कि 'bG9vcA==' में 'if' का उपयोग करके शर्तों को कैसे लागू किया जाए, 'b3BlcmF0b3Jz' जैसे \"in\" का उपयोग सशर्त `statements` में कैसे किया जाए। प्रवाह की स्पष्ट समझ हो और `loop` के लिए नेस्टेड के `syntax` और प्रयोग कर सकते हैं कि हम `loop` में से कहां और कैसे उपयोग कर सकते हैं। अवधारणाओं और तर्क को स्पष्ट करने के लिए `loop` का उपयोग करके तार्किक प्रश्नों पर अधिक अभ्यास साझा करें।",
    "python-curriculum-structure_key54": "कक्षा 17 - सूची",
    "python-curriculum-structure_key55": "सूची क्या है? सूची की विशेषताएं। परिभाषित सूची - `strings` की सूची - `integer` की सूची - `float` की सूची - मिश्रित सूची। सूची अनुक्रमण और टुकड़ा करना। अभ्यास प्रश्न और प्रश्नोत्तरी।",
    "python-curriculum-structure_key56": "सूची का उपयोग करने के क्या फायदे हैं और सूची में किस प्रकार के डेटा को संग्रहीत किया जा सकता है। अनुक्रमणन की अवधारणा स्पष्ट होनी चाहिए (सकारात्मक अनुक्रमण के साथ-साथ ऋणात्मक अनुक्रमण)। छात्र को स्लाइसिंग पर ध्यान केंद्रित करना चाहिए जिसमें स्टार्ट, स्टॉप और स्टेप हैं और स्लाइसिंग के साथ प्रयोग करें और कौन से पैरामीटर स्वीकार किए जाते हैं और यह डिफ़ॉल्ट रूप से कैसे काम करता है।",
    "python-curriculum-structure_key57": "कक्षा 18 - सूची",
    "python-curriculum-structure_key58": "सूची संचालन। लंबाई। सदस्यता। अनुक्रमणिका के माध्यम से पुनरावृत्ति। संघटन। `loop` के साथ कार्य करें। अभ्यास प्रश्न और प्रश्नोत्तरी।",
    "python-curriculum-structure_key59": "छात्र को पता होना चाहिए कि सूची की लंबाई कैसे पता करें, अनुक्रमण के माध्यम से `loop` का उपयोग करके किसी सूची में पुनरावृति कैसे करें, दो सूचियों को एक साथ कैसे जोड़ें और सदस्यता का उपयोग कैसे करें `operator`।",
    "python-curriculum-structure_key60": "कक्षा 19 - सूची",
    "python-curriculum-structure_key61": "`Python` परीक्षाओं के साथ अंतर्निहित विधियां - परिशिष्ट (), स्पष्ट (), गिनती (), अनुक्रमणिका (), सम्मिलित करें (), पॉप (), निकालें (), रिवर्स (), सॉर्ट (), मिनट (), अधिकतम ()। अभ्यास प्रश्न और प्रश्नोत्तरी।",
    "python-curriculum-structure_key62": "छात्र को पता होना चाहिए कि किस विधि का उपयोग करके तत्वों को सूची में जोड़ना है, तत्वों को कैसे निकालना है, तत्वों को कैसे अपडेट करना है। पॉप (), निकालें (), इसके `syntax` और उनका उपयोग क्यों किया जाता है, के बीच अंतर के बारे में पता होना चाहिए। thses विधियों में क्या और कितने पैरामीटर पारित किए जाने हैं। नेस्टेड सूची अनुक्रमण (+ve और -ve)। इस कक्षा के अंत तक, छात्रों को बिल्ट फंक्शन के साथ और बिना न्यूनतम और अधिकतम खोजने में सक्षम होना चाहिए।",
    "python-curriculum-structure_key63": "कक्षा 20 - सूची",
    "python-curriculum-structure_key64": "नेस्टेड सूची। सूची में अधिक उदाहरण। अभ्यास प्रश्न और प्रश्नोत्तरी।",
    "python-curriculum-structure_key65": "सूची में शामिल सभी विषयों का पुनर्पूंजीकरण करें और अवधारणाओं को स्पष्ट करने के लिए संशोधित करें। अधिक अभ्यास करे।",
    "python-curriculum-structure_key66": "कक्षा २१ - शब्दकोश",
    "python-curriculum-structure_key67": "शब्दकोश का परिचय। एक शब्दकोश से तत्वों तक पहुँचना। शब्दकोश में तत्वों को जोड़ना। एक शब्दकोश को अद्यतन करना। अभ्यास प्रश्न और प्रश्नोत्तरी।",
    "python-curriculum-structure_key68": "शब्दकोश क्या है। शब्दकोश की संरचना। हम इसका उपयोग क्यों करते हैं। `keys` और मान क्या हैं। उन्हें कैसे एक्सेस करें। dict में आइटम कैसे जोड़ें और अपडेट करें। एक तानाशाही पर पुनरावृति कैसे करें।",
    "python-curriculum-structure_key69": "कक्षा 22 - शब्दकोश",
    "python-curriculum-structure_key70": "एक शब्दकोश से तत्व निकाला जा रहा है। इटरेटिंग डिक्शनरी। सभी `keys` और मानों के माध्यम से पुनरावृति करें। शब्दकोश पर अधिक उदाहरण।",
    "python-curriculum-structure_key71": "dict.`keys`() dict के `keys` से अधिक पुनरावृति करने की विधि। तानाशाही के मूल्यों पर पुनरावृति करने के लिए Dict.values () विधि। Dict.items() विधि `keys` और मूल्यों पर पुनरावृति करने के लिए। कैसे `loop` को पुनरावृति तानाशाही में इस्तेमाल किया जा सकता है।",
    "python-curriculum-structure_key72": "कक्षा 23 - शब्दकोश",
    "python-curriculum-structure_key73": "डिक्शनरी में बिल्ट-इन फंक्शन - get (), अपडेट (), क्लियर (), कॉपी (), डिलीट ()। शब्दकोश में विधियों में निर्मित। अभ्यास प्रश्न और प्रश्नोत्तरी।",
    "python-curriculum-structure_key74": "इस कक्षा के अंत तक, छात्र को अब तक पढ़ाए गए सभी अवधारणाओं पर स्पष्ट होना चाहिए। आप रिवीजन कक्षाएं भी संचालित करना चुन सकते हैं।",
    "python-curriculum-structure_key75": "#### आगे की सहायता\n\n",
    "python-curriculum-structure_key76": "मामले में झल्लाहट न करें, यह अभी भी भ्रमित करने वाला है। **हम यहाँ मदद करने के लिए हैं**। आप हमारी ओर से प्राप्त स्वयंसेवी ईमेल पर हमें लिख सकते हैं, या स्वयंसेवी@navgurukul.org पर लिख सकते हैं।\n",
    "python-curriculum-structure_key77": "शुक्रिया!\n",
    "python-curriculum-structure_key78": "हमें खुशी है कि आप **एक लाख से अधिक शिक्षार्थियों** को प्रभावित करने की इस यात्रा पर हैं।\n",
    "python-curriculum-structure_key79": "**स्वयंसेवा की शुभकामनाएं!**\n"
}