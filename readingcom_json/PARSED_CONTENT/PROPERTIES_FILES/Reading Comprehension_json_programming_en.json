{
	"programming_key1": "100+ <span style=\"\">Python</span> challenging programming exercises",
	"programming_key2": "Level descriptionLevel    DescriptionLevel 1    Beginner means someone who has just gone through an introductory Python course. He can solve some problems with 1 or 2 Python classes or functions. Normally, the answers could directly be found in the textbooks.Level 2    Intermediate means someone who has just learned Python, but already has a relatively strong programming background from before. He should be able to solve problems which may involve 3 or 3 Python classes or functions. The answers cannot be directly be found in the textbooks.Level 3    Advanced. He should use Python to solve more complex problem using more rich libraries functions and data structures and algorithms. He is supposed to solve the problem using several Python standard packages and advanced techniques.",
	"programming_key3": "Problem template",
	"programming_key4": "Question<br>Hints<br>Solution",
	"programming_key5": "Questions",
	"programming_key6": "Question 1<br>Level 1",
	"programming_key7": "<b>Question:</b><br>Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5,<br>between 2000 and 3200 (both included).<br>The numbers obtained should be printed in a comma-separated sequence on a single line.",
	"programming_key8": "Hints: <br>Consider use range(#begin, #end) method",
	"programming_key9": "Solution:",
	"programming_key10": "Question 2<br>Level 1",
	"programming_key11": "<b>Question:</b><br>Write a program which can compute the factorial of a given numbers.<br>The results should be printed in a comma-separated sequence on a single line.<br>Suppose the following <span style=\"\">input</span> is supplied to the program:<br>8<br>Then, the <span style=\"\">output</span> should be:<br>40320",
	"programming_key12": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key13": "Solution:",
	"programming_key14": "Question 3<br>Level 1",
	"programming_key15": "<b>Question:</b><br>With a given integral number n, write a program to generate a dictionary that contains (i, i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.<br>Suppose the following <span style=\"\">input</span> is supplied to the program:<br>8<br>Then, the <span style=\"\">output</span> should be:<br>{1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64}",
	"programming_key16": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.<br>Consider use dict()",
	"programming_key17": "Solution:",
	"programming_key18": "Question 4<br>Level 1",
	"programming_key19": "<b>Question:</b><br>Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number.<br>Suppose the following <span style=\"\">input</span> is supplied to the program:<br>34,67,55,33,12,98<br>Then, the <span style=\"\">output</span> should be:<br>['34', '67', '55', '33', '12', '98']<br>('34', '67', '55', '33', '12', '98')",
	"programming_key20": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.<br>tuple() method can convert list to tuple",
	"programming_key21": "Solution:",
	"programming_key22": "Question 5<br>Level 1",
	"programming_key23": "<b>Question:</b><br>Define a class which has at least two methods:<br>get<span style=\"\">String</span>: to get a <span style=\"\">string</span> from console <span style=\"\">input</span><br>print<span style=\"\">String</span>: to print the <span style=\"\">string</span> in upper case.<br>Also please include simple test function to test the class methods.",
	"programming_key24": "Hints:<br>Use <b>init</b> method to construct some parameters",
	"programming_key25": "Solution:",
	"programming_key26": "Question 6<br>Level 2",
	"programming_key27": "<b>Question:</b><br>Write a program that calculates and prints the value according to the given formula:",
	"programming_key28": "Q = Square root of [(2 * C * D)/H]",
	"programming_key29": "Following are the fixed values of C and H:<br>C is 50. H is 30.<br>D is the <span style=\"\">variable</span> whose values should be <span style=\"\">input</span> to your program in a comma-separated sequence.<br>Example<br>Let us assume the following comma separated <span style=\"\">input</span> sequence is given to the program:<br>100,150,180<br>The <span style=\"\">output</span> of the program should be:<br>18,22,24",
	"programming_key30": "Hints:<br>If the <span style=\"\">output</span> received is in decimal form, it should be rounded off to its nearest value (for example, if the <span style=\"\">output</span> received is 26.0, it should be printed as 26)<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>. ",
	"programming_key31": "Solution:",
	"programming_key32": "Question 7<br>Level 2",
	"programming_key33": "<b>Question:</b><br>Write a program which takes 2 digits, X,Y as <span style=\"\">input</span> and generates a 2-dimensional array. The element value in the i-th row and j-th column of the array should be i*j.<br>Note: i=0,1.., X-1; j=0,1,¡­Y-1.<br>Example<br>Suppose the following <span style=\"\">inputs</span> are given to the program:<br>3,5<br>Then, the <span style=\"\">output</span> of the program should be:<br>[[0, 0, 0, 0, 0], [0, 1, 2, 3, 4], [0, 2, 4, 6, 8]] ",
	"programming_key34": "Hints:<br>Note: In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span> in a comma-separated form.",
	"programming_key35": "Solution:",
	"programming_key36": "Question 8<br>Level 2",
	"programming_key37": "<b>Question:</b><br>Write a program that accepts a comma separated sequence of words as <span style=\"\">input</span> and prints the words in a comma-separated sequence after sorting them alphabetically.<br>Suppose the following <span style=\"\">input</span> is supplied to the program:<br>without,hello,bag,world<br>Then, the <span style=\"\">output</span> should be:<br>bag,hello,without,world",
	"programming_key38": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key39": "Solution:",
	"programming_key40": "Question 9<br>Level 2",
	"programming_key41": "Question£º<br>Write a program that accepts sequence of lines as <span style=\"\">input</span> and prints the lines after making all characters in the sentence capitalized.<br>Suppose the following <span style=\"\">input</span> is supplied to the program:<br>Hello world<br>Practice makes perfect<br>Then, the <span style=\"\">output</span> should be:<br>HELLO WORLD<br>PRACTICE MAKES PERFECT",
	"programming_key42": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key43": "Solution:",
	"programming_key44": "Question 10<br>Level 2",
	"programming_key45": "<b>Question:</b><br>Write a program that accepts a sequence of whitespace separated words as <span style=\"\">input</span> and prints the words after removing all duplicate words and sorting them alphanumerically.<br>Suppose the following <span style=\"\">input</span> is supplied to the program:<br>hello world and practice makes perfect and hello world again<br>Then, the <span style=\"\">output</span> should be:<br>again and hello makes perfect practice world",
	"programming_key46": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.<br>We use set container to remove duplicated data automatically and then use sorted() to sort the data.",
	"programming_key47": "Solution:",
	"programming_key48": "Question 11<br>Level 2",
	"programming_key49": "<b>Question:</b><br>Write a program which accepts a sequence of comma separated 4 digit binary numbers as its <span style=\"\">input</span> and then check whether they are divisible by 5 or not. The numbers that are divisible by 5 are to be printed in a comma separated sequence.<br>Example:<br>0100,0011,1010,1001<br>Then the <span style=\"\">output</span> should be:<br>1010<br>Notes: Assume the data is <span style=\"\">input</span> by console.",
	"programming_key50": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key51": "Solution:",
	"programming_key52": "Question 12<br>Level 2",
	"programming_key53": "<b>Question:</b><br>Write a program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number.<br>The numbers obtained should be printed in a comma-separated sequence on a single line.",
	"programming_key54": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key55": "Solution:",
	"programming_key56": "Question 13<br>Level 2",
	"programming_key57": "<b>Question:</b><br>Write a program that accepts a sentence and calculate the number of letters and digits.<br>Suppose the following <span style=\"\">input</span> is supplied to the program:<br>hello world! 123<br>Then, the <span style=\"\">output</span> should be:",
	"programming_key58": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key59": "Solution:<br>s = raw_<span style=\"\">input</span>()<br>d={\"DIGITS\":0, \"LETTERS\":0}<br>for c in s:<br>    if c.isdigit():<br>        d[\"DIGITS\"]+=1<br>    elif c.isalpha():<br>        d[\"LETTERS\"]+=1<br>    else:<br>        pass<br>print \"LETTERS\", d[\"LETTERS\"]<br>print \"DIGITS\", d[\"DIGITS\"]",
	"programming_key60": "Question 14<br>Level 2",
	"programming_key61": "<b>Question:</b><br>Write a program that accepts a sentence and calculate the number of upper case letters and lower case letters.<br>Suppose the following <span style=\"\">input</span> is supplied to the program:<br>Hello world!<br>Then, the <span style=\"\">output</span> should be:<br>UPPER CASE 1<br>LOWER CASE 9",
	"programming_key62": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key63": "Solution:",
	"programming_key64": "Question 15<br>Level 2",
	"programming_key65": "<b>Question:</b><br>Write a program that computes the value of a+aa+aaa+aaaa with a given digit as the value of a.<br>Suppose the following <span style=\"\">input</span> is supplied to the program:<br>9<br>Then, the <span style=\"\">output</span> should be:<br>11106",
	"programming_key66": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key67": "Solution:",
	"programming_key68": "Question 16<br>Level 2",
	"programming_key69": "<b>Question:</b><br>Use a list comprehension to square each odd number in a list. The list is <span style=\"\">input</span> by a sequence of comma-separated numbers.<br>Suppose the following <span style=\"\">input</span> is supplied to the program:",
	"programming_key70": "Then, the <span style=\"\">output</span> should be:",
	"programming_key71": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key72": "Solution:",
	"programming_key73": "Question 17<br>Level 2",
	"programming_key74": "<b>Question:</b><br>Write a program that computes the net amount of a bank account based a transaction log from console <span style=\"\">input</span>. The transaction log format is shown as following:",
	"programming_key75": "D means deposit while W means withdrawal.<br>Suppose the following <span style=\"\">input</span> is supplied to the program:",
	"programming_key76": "Then, the <span style=\"\">output</span> should be:",
	"programming_key77": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key78": "Solution:",
	"programming_key79": "Question 18<br>Level 3",
	"programming_key80": "<b>Question:</b><br>A website requires the users to <span style=\"\">input</span> username and password to register. Write a program to check the validity of password <span style=\"\">input</span> by users.<br>Following are the criteria for checking the password:",
	"programming_key81": "At least 1 letter between [a-z]",
	"programming_key82": "At least 1 number between [0-9]",
	"programming_key83": "At least 1 letter between [A-Z]",
	"programming_key84": "At least 1 character from [$#@]",
	"programming_key85": "Minimum length of transaction password: 6",
	"programming_key86": "Maximum length of transaction password: 12\nYour program should accept a sequence of comma separated passwords and will check them according to the above criteria. Passwords that match the criteria are to be printed, each separated by a comma.\nExample\nIf the following passwords are given as input to the program:\nABd1234@1,a F1#,2w3E*,2We3345\nThen, the output of the program should be:",
	"programming_key87": "ABd1234@1",
	"programming_key88": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key89": "Solutions:",
	"programming_key90": "Question 19<br>Level 3",
	"programming_key91": "<b>Question:</b><br>You are required to write a program to sort the (name, age, height) tuples by ascending order where name is <span style=\"\">string</span>, age and height are numbers. The tuples are <span style=\"\">input</span> by console. The sort criteria is:<br>1: Sort based on name;<br>2: Then sort based on age;<br>3: Then sort by score.<br>The priority is that name &gt; age &gt; score.<br>If the following tuples are given as <span style=\"\">input</span> to the program:<br>Tom,19,80<br>John,20,90<br>Jony,17,91<br>Jony,17,93<br>Json,21,85<br>Then, the <span style=\"\">output</span> of the program should be:<br>[('John', '20', '90'), ('Jony', '17', '91'), ('Jony', '17', '93'), ('Json', '21', '85'), ('Tom', '19', '80')]",
	"programming_key92": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.<br>We use itemgetter to enable multiple sort <span style=\"\">keys</span>.",
	"programming_key93": "Solutions:<br>from <span style=\"\">operator</span> import itemgetter, attrgetter",
	"programming_key94": "l = []<br>while <span style=\"\">True</span>:<br>    s = raw_<span style=\"\">input</span>()<br>    if not s:<br>        break<br>    l.append(tuple(s.split(\",\")))",
	"programming_key95": "print sorted(l, <span style=\"\">key</span>=itemgetter(0,1,2))",
	"programming_key96": "Question 20<br>Level 3",
	"programming_key97": "<b>Question:</b><br>Define a class with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.",
	"programming_key98": "Hints:<br>Consider use yield",
	"programming_key99": "Solution:",
	"programming_key100": "Question 21<br>Level 3",
	"programming_key101": "Question£º<br>A robot moves in a plane starting from the original point (0,0). The robot can move toward UP, DOWN, LEFT and RIGHT with a given steps. The trace of robot movement is shown as the following:<br>UP 5<br>DOWN 3<br>LEFT 3<br>RIGHT 2<br>¡­<br>The numbers after the direction are steps. Please write a program to compute the distance from current position after a sequence of movement and original point. If the distance is a <span style=\"\">float</span>, then just print the nearest <span style=\"\">integer</span>.<br>Example:<br>If the following tuples are given as <span style=\"\">input</span> to the program:<br>UP 5<br>DOWN 3<br>LEFT 3<br>RIGHT 2<br>Then, the <span style=\"\">output</span> of the program should be:<br>2",
	"programming_key102": "Hints:<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key103": "Solution:",
	"programming_key104": "Question 22<br>Level 3",
	"programming_key105": "<b>Question:</b><br>Write a program to compute the frequency of the words from the <span style=\"\">input</span>. The <span style=\"\">output</span> should <span style=\"\">output</span> after sorting the <span style=\"\">key</span> alphanumerically. <br>Suppose the following <span style=\"\">input</span> is supplied to the program:<br>New to <span style=\"\">Python</span> or choosing between <span style=\"\">Python</span> 2 and <span style=\"\">Python</span> 3? Read <span style=\"\">Python</span> 2 or <span style=\"\">Python</span> 3.<br>Then, the <span style=\"\">output</span> should be:<br>2:2<br>3.:1<br>3?:1<br>New:1<br><span style=\"\">Python</span>:5<br>Read:1<br>and:1<br>between:1<br>choosing:1<br>or:2<br>to:1",
	"programming_key106": "Hints<br>In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key107": "Solution:",
	"programming_key108": "Question 23<br>level 1",
	"programming_key109": "<b>Question:</b><br>    Write a method which can calculate square value of number",
	"programming_key110": "Hints:<br>    Using the ** <span style=\"\">operator</span>",
	"programming_key111": "Solution:",
	"programming_key112": "Question 24<br>Level 1",
	"programming_key113": "<b>Question:</b><br>    <span style=\"\">Python</span> has many built-in functions, and if you do not know how to use it, you can read document online or find some books. But <span style=\"\">Python</span> has a built-in document function for every built-in functions.<br>    Please write a program to print some <span style=\"\">Python</span> built-in functions documents, such as abs(), int(), raw_<span style=\"\">input</span>()<br>    And add document for your own function",
	"programming_key114": "Hints:<br>    The built-in document method is <b>doc</b>",
	"programming_key115": "Solution:",
	"programming_key116": "Question 25<br>Level 1",
	"programming_key117": "<b>Question:</b><br>    Define a class, which have a class parameter and have a same instance parameter.",
	"programming_key118": "Hints:<br>    Define a instance parameter, need add it in <b>init</b> method<br>    You can init a object with construct parameter or set the value later",
	"programming_key119": "Solution:",
	"programming_key120": "<b>Question:</b><br>Define a function which can compute the sum of two numbers.",
	"programming_key121": "Hints:<br>Define a function with two numbers as arguments. You can compute the sum in the function and return the value.",
	"programming_key122": "Solution",
	"programming_key123": "<b>Question:</b><br>Define a function that can convert a <span style=\"\">integer</span> into a <span style=\"\">string</span> and print it in console.",
	"programming_key124": "Hints:",
	"programming_key125": "Use str() to convert a number to <span style=\"\">string</span>.",
	"programming_key126": "Solution",
	"programming_key127": "<b>Question:</b><br>Define a function that can convert a <span style=\"\">integer</span> into a <span style=\"\">string</span> and print it in console.",
	"programming_key128": "Hints:",
	"programming_key129": "Use str() to convert a number to <span style=\"\">string</span>.",
	"programming_key130": "Solution",
	"programming_key131": "2.10",
	"programming_key132": "<b>Question:</b><br>Define a function that can receive two integral numbers in <span style=\"\">string</span> form and compute their sum and then print it in console.",
	"programming_key133": "Hints:",
	"programming_key134": "Use int() to convert a <span style=\"\">string</span> to <span style=\"\">integer</span>.",
	"programming_key135": "Solution",
	"programming_key136": "2.10",
	"programming_key137": "<b>Question:</b><br>Define a function that can accept two <span style=\"\">strings</span> as <span style=\"\">input</span> and concatenate them and then print it in console.",
	"programming_key138": "Hints:",
	"programming_key139": "Use + to concatenate the <span style=\"\">strings</span>",
	"programming_key140": "Solution",
	"programming_key141": "2.10",
	"programming_key142": "<b>Question:</b><br>Define a function that can accept two <span style=\"\">strings</span> as <span style=\"\">input</span> and print the <span style=\"\">string</span> with maximum length in console. If two <span style=\"\">strings</span> have the same length, then the function should print al l <span style=\"\">strings</span> line by line.",
	"programming_key143": "Hints:",
	"programming_key144": "Use len() function to get the length of a <span style=\"\">string</span>",
	"programming_key145": "Solution",
	"programming_key146": "2.10",
	"programming_key147": "<b>Question:</b><br>Define a function that can accept an <span style=\"\">integer</span> number as <span style=\"\">input</span> and print the \"It is an even number\" if the number is even, otherwise print \"It is an odd number\".",
	"programming_key148": "Hints:",
	"programming_key149": "Use % <span style=\"\">operator</span> to check if a number is even or odd.",
	"programming_key150": "Solution",
	"programming_key151": "2.10",
	"programming_key152": "<b>Question:</b><br>Define a function which can print a dictionary where the <span style=\"\">keys</span> are numbers between 1 and 3 (both included) and the values are square of <span style=\"\">keys</span>.",
	"programming_key153": "Hints:",
	"programming_key154": "Use dict[<span style=\"\">key</span>]=value pattern to put entry into a dictionary.<br>Use ** <span style=\"\">operator</span> to get power of a number.",
	"programming_key155": "Solution",
	"programming_key156": "2.10",
	"programming_key157": "<b>Question:</b><br>Define a function which can print a dictionary where the <span style=\"\">keys</span> are numbers between 1 and 20 (both included) and the values are square of <span style=\"\">keys</span>.",
	"programming_key158": "Hints:",
	"programming_key159": "Use dict[<span style=\"\">key</span>]=value pattern to put entry into a dictionary.<br>Use ** <span style=\"\">operator</span> to get power of a number.<br>Use range() for <span style=\"\">loops</span>.",
	"programming_key160": "Solution",
	"programming_key161": "2.10",
	"programming_key162": "<b>Question:</b><br>Define a function which can generate a dictionary where the <span style=\"\">keys</span> are numbers between 1 and 20 (both included) and the values are square of <span style=\"\">keys</span>. The function should just print the values only.",
	"programming_key163": "Hints:",
	"programming_key164": "Use dict[<span style=\"\">key</span>]=value pattern to put entry into a dictionary.<br>Use ** <span style=\"\">operator</span> to get power of a number.<br>Use range() for <span style=\"\">loops</span>.<br>Use <span style=\"\">keys</span>() to iterate <span style=\"\">keys</span> in the dictionary. Also we can use item() to get <span style=\"\">key</span>/value pairs.",
	"programming_key165": "Solution",
	"programming_key166": "2.10",
	"programming_key167": "<b>Question:</b><br>Define a function which can generate a dictionary where the <span style=\"\">keys</span> are numbers between 1 and 20 (both included) and the values are square of <span style=\"\">keys</span>. The function should just print the <span style=\"\">keys</span> only.",
	"programming_key168": "Hints:",
	"programming_key169": "Use dict[<span style=\"\">key</span>]=value pattern to put entry into a dictionary.<br>Use ** <span style=\"\">operator</span> to get power of a number.<br>Use range() for <span style=\"\">loops</span>.<br>Use <span style=\"\">keys</span>() to iterate <span style=\"\">keys</span> in the dictionary. Also we can use item() to get <span style=\"\">key</span>/value pairs.",
	"programming_key170": "Solution",
	"programming_key171": "2.10",
	"programming_key172": "<b>Question:</b><br>Define a function which can generate and print a list where the values are square of numbers between 1 and 20 (both included).",
	"programming_key173": "Hints:",
	"programming_key174": "Use ** <span style=\"\">operator</span> to get power of a number.<br>Use range() for <span style=\"\">loops</span>.<br>Use list.append() to add values into a list.",
	"programming_key175": "Solution",
	"programming_key176": "2.10",
	"programming_key177": "<b>Question:</b><br>Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the first 5 elements in the list.",
	"programming_key178": "Hints:",
	"programming_key179": "Use ** <span style=\"\">operator</span> to get power of a number.<br>Use range() for <span style=\"\">loops</span>.<br>Use list.append() to add values into a list.<br>Use [n1:n2] to slice a list",
	"programming_key180": "Solution",
	"programming_key181": "2.10",
	"programming_key182": "<b>Question:</b><br>Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the last 5 elements in the list.",
	"programming_key183": "Hints:",
	"programming_key184": "Use ** <span style=\"\">operator</span> to get power of a number.<br>Use range() for <span style=\"\">loops</span>.<br>Use list.append() to add values into a list.<br>Use [n1:n2] to slice a list",
	"programming_key185": "Solution",
	"programming_key186": "2.10",
	"programming_key187": "<b>Question:</b><br>Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print all values except the first 5 elements in the list.",
	"programming_key188": "Hints:",
	"programming_key189": "Use ** <span style=\"\">operator</span> to get power of a number.<br>Use range() for <span style=\"\">loops</span>.<br>Use list.append() to add values into a list.<br>Use [n1:n2] to slice a list",
	"programming_key190": "Solution",
	"programming_key191": "2.10",
	"programming_key192": "<b>Question:</b><br>Define a function which can generate and print a tuple where the value are square of numbers between 1 and 20 (both included). ",
	"programming_key193": "Hints:",
	"programming_key194": "Use ** <span style=\"\">operator</span> to get power of a number.<br>Use range() for <span style=\"\">loops</span>.<br>Use list.append() to add values into a list.<br>Use tuple() to get a tuple from a list.",
	"programming_key195": "Solution",
	"programming_key196": "2.10",
	"programming_key197": "<b>Question:</b><br>With a given tuple (1,2,3,4,5,6,7,8,9,10), write a program to print the first half values in one line and the last half values in one line. ",
	"programming_key198": "Hints:",
	"programming_key199": "Use [n1:n2] notation to get a slice from a tuple.",
	"programming_key200": "Solution",
	"programming_key201": "2.10",
	"programming_key202": "<b>Question:</b><br>Write a program to generate and print another tuple whose values are even numbers in the given tuple (1,2,3,4,5,6,7,8,9,10). ",
	"programming_key203": "Hints:",
	"programming_key204": "Use \"for\" to iterate the tuple<br>Use tuple() to generate a tuple from a list.",
	"programming_key205": "Solution",
	"programming_key206": "2.14",
	"programming_key207": "<b>Question:</b><br>Write a program which accepts a <span style=\"\">string</span> as <span style=\"\">input</span> to print \"Yes\" if the <span style=\"\">string</span> is \"yes\" or \"YES\" or \"Yes\", otherwise print \"No\". ",
	"programming_key208": "Hints:",
	"programming_key209": "Use if <span style=\"\">statement</span> to judge condition.",
	"programming_key210": "Solution",
	"programming_key211": "3.4",
	"programming_key212": "<b>Question:</b><br>Write a program which can filter even numbers in a list by using filter function. The list is: [1,2,3,4,5,6,7,8,9,10].",
	"programming_key213": "Hints:",
	"programming_key214": "Use filter() to filter some elements in a list.<br>Use lambda to define anonymous functions.",
	"programming_key215": "Solution",
	"programming_key216": "3.4",
	"programming_key217": "<b>Question:</b><br>Write a program which can map() to make a list whose elements are square of elements in [1,2,3,4,5,6,7,8,9,10].",
	"programming_key218": "Hints:",
	"programming_key219": "Use map() to generate a list.<br>Use lambda to define anonymous functions.",
	"programming_key220": "Solution",
	"programming_key221": "3.5",
	"programming_key222": "<b>Question:</b><br>Write a program which can map() and filter() to make a list whose elements are square of even number in [1,2,3,4,5,6,7,8,9,10].",
	"programming_key223": "Hints:",
	"programming_key224": "Use map() to generate a list.<br>Use filter() to filter elements of a list.<br>Use lambda to define anonymous functions.",
	"programming_key225": "Solution",
	"programming_key226": "3.5",
	"programming_key227": "<b>Question:</b><br>Write a program which can filter() to make a list whose elements are even number between 1 and 20 (both included).",
	"programming_key228": "Hints:",
	"programming_key229": "Use filter() to filter elements of a list.<br>Use lambda to define anonymous functions.",
	"programming_key230": "Solution",
	"programming_key231": "3.5",
	"programming_key232": "<b>Question:</b><br>Write a program which can map() to make a list whose elements are square of numbers between 1 and 20 (both included).",
	"programming_key233": "Hints:",
	"programming_key234": "Use map() to generate a list.<br>Use lambda to define anonymous functions.",
	"programming_key235": "Solution",
	"programming_key236": "7.2",
	"programming_key237": "<b>Question:</b><br>Define a class named American which has a static method called printNationality.",
	"programming_key238": "Hints:",
	"programming_key239": "Use @staticmethod decorator to define class static method.",
	"programming_key240": "Solution",
	"programming_key241": "7.2",
	"programming_key242": "<b>Question:</b><br>Define a class named American and its subclass NewYorker. ",
	"programming_key243": "Hints:",
	"programming_key244": "Use class Subclass(ParentClass) to define a subclass.",
	"programming_key245": "Solution:",
	"programming_key246": "7.2",
	"programming_key247": "<b>Question:</b><br>Define a class named Circle which can be constructed by a radius. The Circle class has a method which can compute the area. ",
	"programming_key248": "Hints:",
	"programming_key249": "Use def methodName(self) to define a method.",
	"programming_key250": "Solution:",
	"programming_key251": "7.2",
	"programming_key252": "Define a class named Rectangle which can be constructed by a length and width. The Rectangle class has a method which can compute the area. ",
	"programming_key253": "Hints:",
	"programming_key254": "Use def methodName(self) to define a method.",
	"programming_key255": "Solution:",
	"programming_key256": "7.2",
	"programming_key257": "Define a class named Shape and its subclass Square. The Square class has an init function which takes a length as argument. Both classes have a area function which can print the area of the shape where Shape's area is 0 by default.",
	"programming_key258": "Hints:",
	"programming_key259": "To override a method in super class, we can define a method with the same name in the super class.",
	"programming_key260": "Solution:",
	"programming_key261": "Please raise a Runtime<span style=\"\">Error</span> exception.",
	"programming_key262": "Hints:",
	"programming_key263": "Use raise() to raise an exception.",
	"programming_key264": "Solution:",
	"programming_key265": "Write a function to compute 5/0 and use try/except to catch the exceptions.",
	"programming_key266": "Hints:",
	"programming_key267": "Define a custom exception class which takes a <span style=\"\">string</span> message as attribute.",
	"programming_key268": "Hints:",
	"programming_key269": "To define a custom exception, we need to define a class inherited from Exception.",
	"programming_key270": "Solution:",
	"programming_key271": "<b>Question:</b>",
	"programming_key272": "Assuming that we have some email addresses in the \"",
	"programming_key273": "username@companyname.com",
	"programming_key274": "\" format, please write program to print the user name of a given email address. Both user names and company names are composed of letters only.",
	"programming_key275": "Example:<br>If the following email address is given as <span style=\"\">input</span> to the program:",
	"programming_key276": "john@google.com",
	"programming_key277": "Then, the <span style=\"\">output</span> of the program should be:",
	"programming_key278": "john",
	"programming_key279": "In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key280": "Hints:",
	"programming_key281": "Use \\w to match letters.",
	"programming_key282": "Solution:",
	"programming_key283": "<b>Question:</b>",
	"programming_key284": "Assuming that we have some email addresses in the \"",
	"programming_key285": "username@companyname.com",
	"programming_key286": "\" format, please write program to print the company name of a given email address. Both user names and company names are composed of letters only.",
	"programming_key287": "Example:<br>If the following email address is given as <span style=\"\">input</span> to the program:",
	"programming_key288": "john@google.com",
	"programming_key289": "Then, the <span style=\"\">output</span> of the program should be:",
	"programming_key290": "google",
	"programming_key291": "In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key292": "Hints:",
	"programming_key293": "Use \\w to match letters.",
	"programming_key294": "Solution:",
	"programming_key295": "<b>Question:</b>",
	"programming_key296": "Write a program which accepts a sequence of words separated by whitespace as <span style=\"\">input</span> to print the words composed of digits only.",
	"programming_key297": "Example:<br>If the following words is given as <span style=\"\">input</span> to the program:",
	"programming_key298": "2 cats and 3 dogs.",
	"programming_key299": "Then, the <span style=\"\">output</span> of the program should be:",
	"programming_key300": "['2', '3']",
	"programming_key301": "In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key302": "Hints:",
	"programming_key303": "Use re.findall() to find all sub<span style=\"\">string</span> using regex.",
	"programming_key304": "Solution:",
	"programming_key305": "<b>Question:</b>",
	"programming_key306": "Print a uni<span style=\"\">code</span> <span style=\"\">string</span> \"hello world\".",
	"programming_key307": "Hints:",
	"programming_key308": "Use u'<span style=\"\">strings</span>' format to define uni<span style=\"\">code</span> <span style=\"\">string</span>.",
	"programming_key309": "Solution:",
	"programming_key310": "Write a program to read an ASCII <span style=\"\">string</span> and to convert it to a uni<span style=\"\">code</span> <span style=\"\">string</span> en<span style=\"\">code</span>d by utf-8.",
	"programming_key311": "Hints:",
	"programming_key312": "Use uni<span style=\"\">code</span>() function to convert.",
	"programming_key313": "Solution:",
	"programming_key314": "<b>Question:</b>",
	"programming_key315": "Write a special comment to indicate a <span style=\"\">Python</span> source <span style=\"\">code</span> <span style=\"\">file</span> is in uni<span style=\"\">code</span>.",
	"programming_key316": "Hints:",
	"programming_key317": "Solution:",
	"programming_key318": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\"># -*- coding: utf-8 -*-</span>",
	"programming_key319": "<b>Question:</b>",
	"programming_key320": "Write a program to compute 1/2+2/3+3/4+…+n/n+1 with a given n <span style=\"\">input</span> by console (n&gt;0).",
	"programming_key321": "Example:<br>If the following n is given as <span style=\"\">input</span> to the program:",
	"programming_key322": "5",
	"programming_key323": "Then, the <span style=\"\">output</span> of the program should be:",
	"programming_key324": "3.55",
	"programming_key325": "In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key326": "Hints:<br>Use <span style=\"\">float</span>() to convert an <span style=\"\">integer</span> to a <span style=\"\">float</span>",
	"programming_key327": "Solution:",
	"programming_key328": "<b>Question:</b>",
	"programming_key329": "Write a program to compute:",
	"programming_key330": "f(n)=f(n-1)+100 when n&gt;0<br>and f(0)=1",
	"programming_key331": "with a given n <span style=\"\">input</span> by console (n&gt;0).",
	"programming_key332": "Example:<br>If the following n is given as <span style=\"\">input</span> to the program:",
	"programming_key333": "5",
	"programming_key334": "Then, the <span style=\"\">output</span> of the program should be:",
	"programming_key335": "500",
	"programming_key336": "In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key337": "Hints:<br>We can define recursive function in <span style=\"\">Python</span>.",
	"programming_key338": "Solution:",
	"programming_key339": "<b>Question:</b>",
	"programming_key340": "The Fibonacci Sequence is computed based on the following formula:",
	"programming_key341": "f(n)=0 if n=0<br>f(n)=1 if n=1<br>f(n)=f(n-1)+f(n-2) if n&gt;1",
	"programming_key342": "Please write a program to compute the value of f(n) with a given n <span style=\"\">input</span> by console.",
	"programming_key343": "Example:<br>If the following n is given as <span style=\"\">input</span> to the program:",
	"programming_key344": "7",
	"programming_key345": "Then, the <span style=\"\">output</span> of the program should be:",
	"programming_key346": "13",
	"programming_key347": "In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key348": "Hints:<br>We can define recursive function in <span style=\"\">Python</span>.",
	"programming_key349": "Solution:",
	"programming_key350": "<b>Question:</b>",
	"programming_key351": "The Fibonacci Sequence is computed based on the following formula:",
	"programming_key352": "f(n)=0 if n=0<br>f(n)=1 if n=1<br>f(n)=f(n-1)+f(n-2) if n&gt;1",
	"programming_key353": "Please write a program using list comprehension to print the Fibonacci Sequence in comma separated form with a given n <span style=\"\">input</span> by console.",
	"programming_key354": "Example:<br>If the following n is given as <span style=\"\">input</span> to the program:",
	"programming_key355": "7",
	"programming_key356": "Then, the <span style=\"\">output</span> of the program should be:",
	"programming_key357": "0,1,1,2,3,5,8,13",
	"programming_key358": "Hints:<br>We can define recursive function in <span style=\"\">Python</span>.<br>Use list comprehension to generate a list from an existing list.<br>Use <span style=\"\">string</span>.join() to join a list of <span style=\"\">strings</span>.",
	"programming_key359": "In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key360": "Solution:",
	"programming_key361": "<b>Question:</b>",
	"programming_key362": "Please write a program using generator to print the even numbers between 0 and n in comma separated form while n is <span style=\"\">input</span> by console.",
	"programming_key363": "Example:<br>If the following n is given as <span style=\"\">input</span> to the program:",
	"programming_key364": "10",
	"programming_key365": "Then, the <span style=\"\">output</span> of the program should be:",
	"programming_key366": "0,2,4,6,8,10",
	"programming_key367": "Hints:<br>Use yield to produce the next value in generator.",
	"programming_key368": "In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key369": "Solution:",
	"programming_key370": "<b>Question:</b>",
	"programming_key371": "Please write a program using generator to print the numbers which can be divisible by 5 and 7 between 0 and n in comma separated form while n is <span style=\"\">input</span> by console.",
	"programming_key372": "Example:<br>If the following n is given as <span style=\"\">input</span> to the program:",
	"programming_key373": "100",
	"programming_key374": "Then, the <span style=\"\">output</span> of the program should be:",
	"programming_key375": "0,35,70",
	"programming_key376": "Hints:<br>Use yield to produce the next value in generator.",
	"programming_key377": "In case of <span style=\"\">input</span> data being supplied to the question, it should be assumed to be a console <span style=\"\">input</span>.",
	"programming_key378": "Solution:",
	"programming_key379": "<b>Question:</b>",
	"programming_key380": "Please write assert <span style=\"\">statements</span> to verify that every number in the list [2,4,6,8] is even.",
	"programming_key381": "Hints:<br>Use \"assert expression\" to make assertion.",
	"programming_key382": "Solution:",
	"programming_key383": "<b>Question:</b>",
	"programming_key384": "Please write a program which accepts basic mathematic expression from console and print the evaluation result.",
	"programming_key385": "Example:<br>If the following <span style=\"\">string</span> is given as <span style=\"\">input</span> to the program:",
	"programming_key386": "35+3",
	"programming_key387": "Then, the <span style=\"\">output</span> of the program should be:",
	"programming_key388": "38",
	"programming_key389": "Hints:<br>Use eval() to evaluate an expression.",
	"programming_key390": "Solution:",
	"programming_key391": "<b>Question:</b>",
	"programming_key392": "Please write a binary search function which searches an item in a sorted list. The function should return the index of element to be searched in the list.",
	"programming_key393": "Hints:<br>Use if/elif to deal with conditions.",
	"programming_key394": "Solution:",
	"programming_key395": "<b>Question:</b>",
	"programming_key396": "Please write a binary search function which searches an item in a sorted list. The function should return the index of element to be searched in the list.",
	"programming_key397": "Hints:<br>Use if/elif to deal with conditions.",
	"programming_key398": "Solution:",
	"programming_key399": "<b>Question:</b>",
	"programming_key400": "Please generate a random <span style=\"\">float</span> where the value is between 10 and 100 using <span style=\"\">Python</span> math module.",
	"programming_key401": "Hints:<br>Use random.random() to generate a random <span style=\"\">float</span> in [0,1].",
	"programming_key402": "Solution:",
	"programming_key403": "<b>Question:</b>",
	"programming_key404": "Please generate a random <span style=\"\">float</span> where the value is between 5 and 95 using <span style=\"\">Python</span> math module.",
	"programming_key405": "Hints:<br>Use random.random() to generate a random <span style=\"\">float</span> in [0,1].",
	"programming_key406": "Solution:",
	"programming_key407": "<b>Question:</b>",
	"programming_key408": "Please write a program to <span style=\"\">output</span> a random even number between 0 and 10 inclusive using random module and list comprehension.",
	"programming_key409": "Hints:<br>Use random.choice() to a random element from a list.",
	"programming_key410": "Solution:",
	"programming_key411": "<b>Question:</b>",
	"programming_key412": "Please write a program to <span style=\"\">output</span> a random number, which is divisible by 5 and 7, between 0 and 10 inclusive using random module and list comprehension.",
	"programming_key413": "Hints:<br>Use random.choice() to a random element from a list.",
	"programming_key414": "Solution:",
	"programming_key415": "<b>Question:</b>",
	"programming_key416": "Please write a program to generate a list with 5 random numbers between 100 and 200 inclusive.",
	"programming_key417": "Hints:<br>Use random.sample() to generate a list of random values.",
	"programming_key418": "Solution:",
	"programming_key419": "<b>Question:</b>",
	"programming_key420": "Please write a program to randomly generate a list with 5 even numbers between 100 and 200 inclusive.",
	"programming_key421": "Hints:<br>Use random.sample() to generate a list of random values.",
	"programming_key422": "Solution:",
	"programming_key423": "<b>Question:</b>",
	"programming_key424": "Please write a program to randomly generate a list with 5 numbers, which are divisible by 5 and 7 , between 1 and 1000 inclusive.",
	"programming_key425": "Hints:<br>Use random.sample() to generate a list of random values.",
	"programming_key426": "Solution:",
	"programming_key427": "<b>Question:</b>",
	"programming_key428": "Please write a program to randomly print a <span style=\"\">integer</span> number between 7 and 15 inclusive.",
	"programming_key429": "Hints:<br>Use random.randrange() to a random <span style=\"\">integer</span> in a given range.",
	"programming_key430": "Solution:",
	"programming_key431": "<b>Question:</b>",
	"programming_key432": "Please write a program to compress and decompress the <span style=\"\">string</span> \"hello world!hello world!hello world!hello world!\".",
	"programming_key433": "Hints:<br>Use zlib.compress() and zlib.decompress() to compress and decompress a <span style=\"\">string</span>.",
	"programming_key434": "Solution:",
	"programming_key435": "<b>Question:</b>",
	"programming_key436": "Please write a program to print the running time of execution of \"1+1\" for 100 times.",
	"programming_key437": "Hints:<br>Use timeit() function to measure the running time.",
	"programming_key438": "Solution:",
	"programming_key439": "<b>Question:</b>",
	"programming_key440": "Please write a program to shuffle and print the list [3,6,7,8].",
	"programming_key441": "Hints:<br>Use shuffle() function to shuffle a list.",
	"programming_key442": "Solution:",
	"programming_key443": "<b>Question:</b>",
	"programming_key444": "Please write a program to shuffle and print the list [3,6,7,8].",
	"programming_key445": "Hints:<br>Use shuffle() function to shuffle a list.",
	"programming_key446": "Solution:",
	"programming_key447": "<b>Question:</b>",
	"programming_key448": "Please write a program to generate all sentences where subject is in [\"I\", \"You\"] and verb is in [\"Play\", \"Love\"] and the object is in [\"Hoc<span style=\"\">key</span>\",\"Football\"].",
	"programming_key449": "Hints:<br>Use list[index] notation to get a element from a list.",
	"programming_key450": "Solution:",
	"programming_key451": "Please write a program to print the list after removing delete even numbers in [5,6,77,45,22,12,24].",
	"programming_key452": "Hints:<br>Use list comprehension to delete a bunch of element from a list.",
	"programming_key453": "Solution:",
	"programming_key454": "<b>Question:</b>",
	"programming_key455": "By using list comprehension, please write a program to print the list after removing delete numbers which are divisible by 5 and 7 in [12,24,35,70,88,120,155].",
	"programming_key456": "Hints:<br>Use list comprehension to delete a bunch of element from a list.",
	"programming_key457": "Solution:",
	"programming_key458": "<b>Question:</b>",
	"programming_key459": "By using list comprehension, please write a program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].",
	"programming_key460": "Hints:<br>Use list comprehension to delete a bunch of element from a list.<br>Use enumerate() to get (index, value) tuple.",
	"programming_key461": "Solution:",
	"programming_key462": "<b>Question:</b>",
	"programming_key463": "By using list comprehension, please write a program generate a 3<i>5</i>8 3D array whose each element is 0.",
	"programming_key464": "Hints:<br>Use list comprehension to make an array.",
	"programming_key465": "Solution:",
	"programming_key466": "<b>Question:</b>",
	"programming_key467": "By using list comprehension, please write a program to print the list after removing the 0th,4th,5th numbers in [12,24,35,70,88,120,155].",
	"programming_key468": "Hints:<br>Use list comprehension to delete a bunch of element from a list.<br>Use enumerate() to get (index, value) tuple.",
	"programming_key469": "Solution:",
	"programming_key470": "<b>Question:</b>",
	"programming_key471": "By using list comprehension, please write a program to print the list after removing the value 24 in [12,24,35,24,88,120,155].",
	"programming_key472": "Hints:<br>Use list's remove method to delete a value.",
	"programming_key473": "Solution:",
	"programming_key474": "<b>Question:</b>",
	"programming_key475": "With two given lists [1,3,6,78,35,55] and [12,24,35,24,88,120,155], write a program to make a list whose elements are intersection of the above given lists.",
	"programming_key476": "Hints:<br>Use set() and \"&amp;=\" to do set intersection operation.",
	"programming_key477": "Solution:",
	"programming_key478": "With a given list [12,24,35,24,88,120,155,88,120,155], write a program to print this list after removing all duplicate values with original order reserved.",
	"programming_key479": "Hints:<br>Use set() to store a number of values without duplicate.",
	"programming_key480": "Solution:",
	"programming_key481": "<b>Question:</b>",
	"programming_key482": "Define a class Person and its two child classes: Male and Female. All classes have a method \"getGender\" which can print \"Male\" for Male class and \"Female\" for Female class.",
	"programming_key483": "Hints:<br>Use Subclass(Parentclass) to define a child class.",
	"programming_key484": "Solution:",
	"programming_key485": "<b>Question:</b>",
	"programming_key486": "Please write a program which count and print the numbers of each character in a <span style=\"\">string</span> <span style=\"\">input</span> by console.",
	"programming_key487": "Example:<br>If the following <span style=\"\">string</span> is given as <span style=\"\">input</span> to the program:",
	"programming_key488": "abcdefgabc",
	"programming_key489": "Then, the <span style=\"\">output</span> of the program should be:",
	"programming_key490": "a,2<br>c,2<br>b,2<br>e,1<br>d,1<br>g,1<br>f,1",
	"programming_key491": "Hints:<br>Use dict to store <span style=\"\">key</span>/value pairs.<br>Use dict.get() method to lookup a <span style=\"\">key</span> with default value.",
	"programming_key492": "Solution:",
	"programming_key493": "<b>Question:</b>",
	"programming_key494": "Please write a program which accepts a <span style=\"\">string</span> from console and print it in reverse order.",
	"programming_key495": "Example:<br>If the following <span style=\"\">string</span> is given as <span style=\"\">input</span> to the program:",
	"programming_key496": "rise to vote sir",
	"programming_key497": "Then, the <span style=\"\">output</span> of the program should be:",
	"programming_key498": "ris etov ot esir",
	"programming_key499": "Hints:<br>Use list[::-1] to iterate a list in a reverse order.",
	"programming_key500": "Solution:",
	"programming_key501": "<b>Question:</b>",
	"programming_key502": "Please write a program which accepts a <span style=\"\">string</span> from console and print the characters that have even indexes.",
	"programming_key503": "Example:<br>If the following <span style=\"\">string</span> is given as <span style=\"\">input</span> to the program:",
	"programming_key504": "H1e2l3l4o5w6o7r8l9d",
	"programming_key505": "Then, the <span style=\"\">output</span> of the program should be:",
	"programming_key506": "Helloworld",
	"programming_key507": "Hints:<br>Use list[::2] to iterate a list by step 2.",
	"programming_key508": "Solution:",
	"programming_key509": "<b>Question:</b>",
	"programming_key510": "Please write a program which prints all permutations of [1,2,3]",
	"programming_key511": "Hints:<br>Use itertools.permutations() to get permutations of list.",
	"programming_key512": "Solution:",
	"programming_key513": "<b>Question:</b>",
	"programming_key514": "Write a program to solve a classic ancient Chinese puzzle: <br>We count 35 heads and 94 legs among the chickens and rabbits in a farm. How many rabbits and how many chickens do we have?",
	"programming_key515": "Hint:<br>Use for <span style=\"\">loop</span> to iterate all possible solutions.",
	"programming_key516": "Solution:"
}