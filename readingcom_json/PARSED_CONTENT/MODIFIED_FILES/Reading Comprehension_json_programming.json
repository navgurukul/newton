[
  {
    "component": "text",
    "value": "programming_key1"
  },
  {
    "component": "text",
    "value": "programming_key2",
    "decoration": {
      "type": "number",
      "value": 1
    }
  },
  {
    "component": "text",
    "value": "programming_key3",
    "decoration": {
      "type": "number",
      "value": 2
    }
  },
  {
    "component": "text",
    "value": "programming_key4"
  },
  {
    "component": "text",
    "value": "programming_key5",
    "decoration": {
      "type": "number",
      "value": 3
    }
  },
  {
    "component": "text",
    "value": "programming_key6"
  },
  {
    "component": "text",
    "value": "programming_key7"
  },
  {
    "component": "text",
    "value": "programming_key8"
  },
  {
    "component": "text",
    "value": "programming_key9"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "l=[]<br>for i in range(2000, 3201):<br>    if (i%7==0) and (i%5!=0):<br>        l.append(str(i))<br><br>print ','.join(l)"
  },
  {
    "component": "text",
    "value": "programming_key10"
  },
  {
    "component": "text",
    "value": "programming_key11"
  },
  {
    "component": "text",
    "value": "programming_key12"
  },
  {
    "component": "text",
    "value": "programming_key13"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def fact(x):<br>    if x == 0:<br>        return 1<br>    return x * fact(x - 1)<br><br>x=int(raw_input())<br>print fact(x)"
  },
  {
    "component": "text",
    "value": "programming_key14"
  },
  {
    "component": "text",
    "value": "programming_key15"
  },
  {
    "component": "text",
    "value": "programming_key16"
  },
  {
    "component": "text",
    "value": "programming_key17"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "n=int(raw_input())<br>d=dict()<br>for i in range(1,n+1):<br>    d[i]=i*i<br><br>print d"
  },
  {
    "component": "text",
    "value": "programming_key18"
  },
  {
    "component": "text",
    "value": "programming_key19"
  },
  {
    "component": "text",
    "value": "programming_key20"
  },
  {
    "component": "text",
    "value": "programming_key21"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "values=raw_input()<br>l=values.split(\",\")<br>t=tuple(l)<br>print l<br>print t"
  },
  {
    "component": "text",
    "value": "programming_key22"
  },
  {
    "component": "text",
    "value": "programming_key23"
  },
  {
    "component": "text",
    "value": "programming_key24"
  },
  {
    "component": "text",
    "value": "programming_key25"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "class InputOutString(object):<br>    def __init__(self):<br>        self.s = \"\"<br><br>    def getString(self):<br>        self.s = raw_input()<br><br>    def printString(self):<br>        print self.s.upper()<br><br>strObj = InputOutString()<br>strObj.getString()<br>strObj.printString()"
  },
  {
    "component": "text",
    "value": "programming_key26"
  },
  {
    "component": "text",
    "value": "programming_key27"
  },
  {
    "component": "blockquote",
    "value": "programming_key28"
  },
  {
    "component": "text",
    "value": "programming_key29"
  },
  {
    "component": "text",
    "value": "programming_key30"
  },
  {
    "component": "text",
    "value": "programming_key31"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "!/usr/bin/env python<br>import math<br>c=50<br>h=30<br>value = []<br>items=[x for x in raw_input().split(',')]<br>for d in items:<br>    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))<br><br>print ','.join(value)"
  },
  {
    "component": "text",
    "value": "programming_key32"
  },
  {
    "component": "text",
    "value": "programming_key33"
  },
  {
    "component": "text",
    "value": "programming_key34"
  },
  {
    "component": "text",
    "value": "programming_key35"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "input_str = raw_input()<br>dimensions=[int(x) for x in input_str.split(',')]<br>rowNum=dimensions[0]<br>colNum=dimensions[1]<br>multilist = [[0 for col in range(colNum)] for row in range(rowNum)]<br><br>for row in range(rowNum):<br>    for col in range(colNum):<br>        multilist[row][col]= row*col<br><br>print multilist"
  },
  {
    "component": "text",
    "value": "programming_key36"
  },
  {
    "component": "text",
    "value": "programming_key37"
  },
  {
    "component": "text",
    "value": "programming_key38"
  },
  {
    "component": "text",
    "value": "programming_key39"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "items=[x for x in raw_input().split(',')]<br>items.sort()<br>print ','.join(items)"
  },
  {
    "component": "text",
    "value": "programming_key40"
  },
  {
    "component": "text",
    "value": "programming_key41"
  },
  {
    "component": "text",
    "value": "programming_key42"
  },
  {
    "component": "text",
    "value": "programming_key43"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "lines = []<br>while True:<br>    s = raw_input()<br>    if s:<br>        lines.append(s.upper())<br>    else:<br>        break;<br><br>for sentence in lines:<br>    print sentence"
  },
  {
    "component": "text",
    "value": "programming_key44"
  },
  {
    "component": "text",
    "value": "programming_key45"
  },
  {
    "component": "text",
    "value": "programming_key46"
  },
  {
    "component": "text",
    "value": "programming_key47"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "s = raw_input()<br>words = [word for word in s.split(\" \")]<br>print \" \".join(sorted(list(set(words))))"
  },
  {
    "component": "text",
    "value": "programming_key48"
  },
  {
    "component": "text",
    "value": "programming_key49"
  },
  {
    "component": "text",
    "value": "programming_key50"
  },
  {
    "component": "text",
    "value": "programming_key51"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "value = []<br>items=[x for x in raw_input().split(',')]<br>for p in items:<br>    intp = int(p, 2)<br>    if not intp%5:<br>        value.append(p)<br><br>print ','.join(value)"
  },
  {
    "component": "text",
    "value": "programming_key52"
  },
  {
    "component": "text",
    "value": "programming_key53"
  },
  {
    "component": "text",
    "value": "programming_key54"
  },
  {
    "component": "text",
    "value": "programming_key55"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "values = []<br>for i in range(1000, 3001):<br>    s = str(i)<br>    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):<br>        values.append(s)<br>print \",\".join(values)"
  },
  {
    "component": "text",
    "value": "programming_key56"
  },
  {
    "component": "text",
    "value": "programming_key57"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "LETTERS 10<br>DIGITS 3"
  },
  {
    "component": "text",
    "value": "programming_key58"
  },
  {
    "component": "text",
    "value": "programming_key59"
  },
  {
    "component": "text",
    "value": "programming_key60"
  },
  {
    "component": "text",
    "value": "programming_key61"
  },
  {
    "component": "text",
    "value": "programming_key62"
  },
  {
    "component": "text",
    "value": "programming_key63"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "s = raw_input()<br>d={\"UPPER CASE\":0, \"LOWER CASE\":0}<br>for c in s:<br>    if c.isupper():<br>        d[\"UPPER CASE\"]+=1<br>    elif c.islower():<br>        d[\"LOWER CASE\"]+=1<br>    else:<br>        pass<br>print \"UPPER CASE\", d[\"UPPER CASE\"]<br>print \"LOWER CASE\", d[\"LOWER CASE\"]"
  },
  {
    "component": "text",
    "value": "programming_key64"
  },
  {
    "component": "text",
    "value": "programming_key65"
  },
  {
    "component": "text",
    "value": "programming_key66"
  },
  {
    "component": "text",
    "value": "programming_key67"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "a = raw_input()<br>n1 = int( \"%s\" % a )<br>n2 = int( \"%s%s\" % (a,a) )<br>n3 = int( \"%s%s%s\" % (a,a,a) )<br>n4 = int( \"%s%s%s%s\" % (a,a,a,a) )<br>print n1+n2+n3+n4"
  },
  {
    "component": "text",
    "value": "programming_key68"
  },
  {
    "component": "text",
    "value": "programming_key69"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "1,2,3,4,5,6,7,8,9"
  },
  {
    "component": "text",
    "value": "programming_key70"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "1,3,5,7,9"
  },
  {
    "component": "text",
    "value": "programming_key71"
  },
  {
    "component": "text",
    "value": "programming_key72"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "values = raw_input()<br>numbers = [x for x in values.split(\",\") if int(x)%2!=0]<br>print \",\".join(numbers)"
  },
  {
    "component": "text",
    "value": "programming_key73"
  },
  {
    "component": "text",
    "value": "programming_key74"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "D 100<br>W 200"
  },
  {
    "component": "text",
    "value": "programming_key75"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "D 300<br>D 300<br>W 200<br>D 100"
  },
  {
    "component": "text",
    "value": "programming_key76"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "500"
  },
  {
    "component": "text",
    "value": "programming_key77"
  },
  {
    "component": "text",
    "value": "programming_key78"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "netAmount = 0<br>while True:<br>    s = raw_input()<br>    if not s:<br>        break<br>    values = s.split(\" \")<br>    operation = values[0]<br>    amount = int(values[1])<br>    if operation==\"D\":<br>        netAmount+=amount<br>    elif operation==\"W\":<br>        netAmount-=amount<br>    else:<br>        pass<br>print netAmount"
  },
  {
    "component": "text",
    "value": "programming_key79"
  },
  {
    "component": "text",
    "value": "programming_key80"
  },
  {
    "component": "text",
    "value": "programming_key81",
    "decoration": {
      "type": "number",
      "value": 1
    }
  },
  {
    "component": "text",
    "value": "programming_key82",
    "decoration": {
      "type": "number",
      "value": 2
    }
  },
  {
    "component": "text",
    "value": "programming_key83",
    "decoration": {
      "type": "number",
      "value": 1
    }
  },
  {
    "component": "text",
    "value": "programming_key84",
    "decoration": {
      "type": "number",
      "value": 3
    }
  },
  {
    "component": "text",
    "value": "programming_key85",
    "decoration": {
      "type": "number",
      "value": 4
    }
  },
  {
    "component": "header",
    "variant": 4,
    "value": "programming_key86"
  },
  {
    "component": "text",
    "value": "programming_key87"
  },
  {
    "component": "text",
    "value": "programming_key88"
  },
  {
    "component": "text",
    "value": "programming_key89"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import re<br>value = []<br>items=[x for x in raw_input().split(',')]<br>for p in items:<br>    if len(p)<6 or len(p)>12:<br>        continue<br>    else:<br>        pass<br>    if not re.search(\"[a-z]\",p):<br>        continue<br>    elif not re.search(\"[0-9]\",p):<br>        continue<br>    elif not re.search(\"[A-Z]\",p):<br>        continue<br>    elif not re.search(\"[$#@]\",p):<br>        continue<br>    elif re.search(\"\\s\",p):<br>        continue<br>    else:<br>        pass<br>    value.append(p)<br>print \",\".join(value)"
  },
  {
    "component": "text",
    "value": "programming_key90"
  },
  {
    "component": "text",
    "value": "programming_key91"
  },
  {
    "component": "text",
    "value": "programming_key92"
  },
  {
    "component": "text",
    "value": "programming_key93"
  },
  {
    "component": "text",
    "value": "programming_key94"
  },
  {
    "component": "text",
    "value": "programming_key95"
  },
  {
    "component": "text",
    "value": "programming_key96"
  },
  {
    "component": "text",
    "value": "programming_key97"
  },
  {
    "component": "text",
    "value": "programming_key98"
  },
  {
    "component": "text",
    "value": "programming_key99"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def putNumbers(n):<br>    i = 0<br>    while i<n:<br>        j=i<br>        i=i+1<br>        if j%7==0:<br>            yield j<br><br>for i in reverse(100):<br>    print i"
  },
  {
    "component": "text",
    "value": "programming_key100"
  },
  {
    "component": "text",
    "value": "programming_key101"
  },
  {
    "component": "text",
    "value": "programming_key102"
  },
  {
    "component": "text",
    "value": "programming_key103"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import math<br>pos = [0,0]<br>while True:<br>    s = raw_input()<br>    if not s:<br>        break<br>    movement = s.split(\" \")<br>    direction = movement[0]<br>    steps = int(movement[1])<br>    if direction==\"UP\":<br>        pos[0]+=steps<br>    elif direction==\"DOWN\":<br>        pos[0]-=steps<br>    elif direction==\"LEFT\":<br>        pos[1]-=steps<br>    elif direction==\"RIGHT\":<br>        pos[1]+=steps<br>    else:<br>        pass<br><br>print int(round(math.sqrt(pos[1]**2+pos[0]**2)))"
  },
  {
    "component": "text",
    "value": "programming_key104"
  },
  {
    "component": "text",
    "value": "programming_key105"
  },
  {
    "component": "text",
    "value": "programming_key106"
  },
  {
    "component": "text",
    "value": "programming_key107"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "freq = {}   # frequency of words in text<br>line = raw_input()<br>for word in line.split():<br>    freq[word] = freq.get(word,0)+1<br><br>words = freq.keys()<br>words.sort()<br><br>for w in words:<br>    print \"%s:%d\" % (w,freq[w])<br>"
  },
  {
    "component": "text",
    "value": "programming_key108"
  },
  {
    "component": "text",
    "value": "programming_key109"
  },
  {
    "component": "text",
    "value": "programming_key110"
  },
  {
    "component": "text",
    "value": "programming_key111"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def square(num):<br>    return num ** 2<br><br>print square(2)<br>print square(3)"
  },
  {
    "component": "text",
    "value": "programming_key112"
  },
  {
    "component": "text",
    "value": "programming_key113"
  },
  {
    "component": "text",
    "value": "programming_key114"
  },
  {
    "component": "text",
    "value": "programming_key115"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "print abs.__doc__<br>print int.__doc__<br>print raw_input.__doc__<br><br>def square(num):<br>    '''Return the square value of the input number.<br>    <br>    The input number must be integer.<br>    '''<br>    return num ** 2<br><br>print square(2)<br>print square.__doc__"
  },
  {
    "component": "text",
    "value": "programming_key116"
  },
  {
    "component": "text",
    "value": "programming_key117"
  },
  {
    "component": "text",
    "value": "programming_key118"
  },
  {
    "component": "text",
    "value": "programming_key119"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "class Person:<br>    # Define the class parameter \"name\"<br>    name = \"Person\"<br>    <br>    def __init__(self, name = None):<br>        # self.name is the instance parameter<br>        self.name = name<br><br>jeffrey = Person(\"Jeffrey\")<br>print \"%s name is %s\" % (Person.name, jeffrey.name)<br><br>nico = Person()<br>nico.name = \"Nico\"<br>print \"%s name is %s\" % (Person.name, nico.name)"
  },
  {
    "component": "text",
    "value": "programming_key120"
  },
  {
    "component": "text",
    "value": "programming_key121"
  },
  {
    "component": "text",
    "value": "programming_key122"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def SumFunction(number1, number2):<br>    return number1+number2<br><br>print SumFunction(1,2)"
  },
  {
    "component": "text",
    "value": "programming_key123"
  },
  {
    "component": "text",
    "value": "programming_key124"
  },
  {
    "component": "text",
    "value": "programming_key125"
  },
  {
    "component": "text",
    "value": "programming_key126"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def printValue(n):<br>    print str(n)<br><br>printValue(3)"
  },
  {
    "component": "text",
    "value": "programming_key127"
  },
  {
    "component": "text",
    "value": "programming_key128"
  },
  {
    "component": "text",
    "value": "programming_key129"
  },
  {
    "component": "text",
    "value": "programming_key130"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def printValue(n):<br>    print str(n)<br><br>printValue(3)"
  },
  {
    "component": "text",
    "value": "programming_key131"
  },
  {
    "component": "text",
    "value": "programming_key132"
  },
  {
    "component": "text",
    "value": "programming_key133"
  },
  {
    "component": "text",
    "value": "programming_key134"
  },
  {
    "component": "text",
    "value": "programming_key135"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def printValue(s1,s2):<br>    print int(s1)+int(s2)<br><br>printValue(\"3\",\"4\") #7"
  },
  {
    "component": "text",
    "value": "programming_key136"
  },
  {
    "component": "text",
    "value": "programming_key137"
  },
  {
    "component": "text",
    "value": "programming_key138"
  },
  {
    "component": "text",
    "value": "programming_key139"
  },
  {
    "component": "text",
    "value": "programming_key140"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def printValue(s1,s2):<br>    print s1+s2<br><br>printValue(\"3\",\"4\") #34"
  },
  {
    "component": "text",
    "value": "programming_key141"
  },
  {
    "component": "text",
    "value": "programming_key142"
  },
  {
    "component": "text",
    "value": "programming_key143"
  },
  {
    "component": "text",
    "value": "programming_key144"
  },
  {
    "component": "text",
    "value": "programming_key145"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def printValue(s1,s2):<br>    len1 = len(s1)<br>    len2 = len(s2)<br>    if len1>len2:<br>        print s1<br>    elif len2>len1:<br>        print s2<br>    else:<br>        print s1<br>        print s2<br>        <br><br>printValue(\"one\",\"three\")"
  },
  {
    "component": "text",
    "value": "programming_key146"
  },
  {
    "component": "text",
    "value": "programming_key147"
  },
  {
    "component": "text",
    "value": "programming_key148"
  },
  {
    "component": "text",
    "value": "programming_key149"
  },
  {
    "component": "text",
    "value": "programming_key150"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def checkValue(n):<br>    if n%2 == 0:<br>        print \"It is an even number\"<br>    else:<br>        print \"It is an odd number\"<br>        <br><br>checkValue(7)"
  },
  {
    "component": "text",
    "value": "programming_key151"
  },
  {
    "component": "text",
    "value": "programming_key152"
  },
  {
    "component": "text",
    "value": "programming_key153"
  },
  {
    "component": "text",
    "value": "programming_key154"
  },
  {
    "component": "text",
    "value": "programming_key155"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def printDict():<br>    d=dict()<br>    d[1]=1<br>    d[2]=2**2<br>    d[3]=3**2<br>    print d<br>        <br><br>printDict()"
  },
  {
    "component": "text",
    "value": "programming_key156"
  },
  {
    "component": "text",
    "value": "programming_key157"
  },
  {
    "component": "text",
    "value": "programming_key158"
  },
  {
    "component": "text",
    "value": "programming_key159"
  },
  {
    "component": "text",
    "value": "programming_key160"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def printDict():<br>    d=dict()<br>    for i in range(1,21):<br>        d[i]=i**2<br>    print d<br>        <br><br>printDict()"
  },
  {
    "component": "text",
    "value": "programming_key161"
  },
  {
    "component": "text",
    "value": "programming_key162"
  },
  {
    "component": "text",
    "value": "programming_key163"
  },
  {
    "component": "text",
    "value": "programming_key164"
  },
  {
    "component": "text",
    "value": "programming_key165"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def printDict():<br>    d=dict()<br>    for i in range(1,21):<br>        d[i]=i**2<br>    for (k,v) in d.items():    <br>        print v<br>        <br><br>printDict()"
  },
  {
    "component": "text",
    "value": "programming_key166"
  },
  {
    "component": "text",
    "value": "programming_key167"
  },
  {
    "component": "text",
    "value": "programming_key168"
  },
  {
    "component": "text",
    "value": "programming_key169"
  },
  {
    "component": "text",
    "value": "programming_key170"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def printDict():<br>    d=dict()<br>    for i in range(1,21):<br>        d[i]=i**2<br>    for k in d.keys():    <br>        print k<br>        <br><br>printDict()"
  },
  {
    "component": "text",
    "value": "programming_key171"
  },
  {
    "component": "text",
    "value": "programming_key172"
  },
  {
    "component": "text",
    "value": "programming_key173"
  },
  {
    "component": "text",
    "value": "programming_key174"
  },
  {
    "component": "text",
    "value": "programming_key175"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def printList():<br>    li=list()<br>    for i in range(1,21):<br>        li.append(i**2)<br>    print li<br>        <br><br>printList()"
  },
  {
    "component": "text",
    "value": "programming_key176"
  },
  {
    "component": "text",
    "value": "programming_key177"
  },
  {
    "component": "text",
    "value": "programming_key178"
  },
  {
    "component": "text",
    "value": "programming_key179"
  },
  {
    "component": "text",
    "value": "programming_key180"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def printList():<br>    li=list()<br>    for i in range(1,21):<br>        li.append(i**2)<br>    print li[:5]<br>        <br><br>printList()"
  },
  {
    "component": "text",
    "value": "programming_key181"
  },
  {
    "component": "text",
    "value": "programming_key182"
  },
  {
    "component": "text",
    "value": "programming_key183"
  },
  {
    "component": "text",
    "value": "programming_key184"
  },
  {
    "component": "text",
    "value": "programming_key185"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def printList():<br>    li=list()<br>    for i in range(1,21):<br>        li.append(i**2)<br>    print li[-5:]<br>        <br><br>printList()"
  },
  {
    "component": "text",
    "value": "programming_key186"
  },
  {
    "component": "text",
    "value": "programming_key187"
  },
  {
    "component": "text",
    "value": "programming_key188"
  },
  {
    "component": "text",
    "value": "programming_key189"
  },
  {
    "component": "text",
    "value": "programming_key190"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def printList():<br>    li=list()<br>    for i in range(1,21):<br>        li.append(i**2)<br>    print li[5:]<br>        <br><br>printList()"
  },
  {
    "component": "text",
    "value": "programming_key191"
  },
  {
    "component": "text",
    "value": "programming_key192"
  },
  {
    "component": "text",
    "value": "programming_key193"
  },
  {
    "component": "text",
    "value": "programming_key194"
  },
  {
    "component": "text",
    "value": "programming_key195"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def printTuple():<br>    li=list()<br>    for i in range(1,21):<br>        li.append(i**2)<br>    print tuple(li)<br>        <br>printTuple()"
  },
  {
    "component": "text",
    "value": "programming_key196"
  },
  {
    "component": "text",
    "value": "programming_key197"
  },
  {
    "component": "text",
    "value": "programming_key198"
  },
  {
    "component": "text",
    "value": "programming_key199"
  },
  {
    "component": "text",
    "value": "programming_key200"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "tp=(1,2,3,4,5,6,7,8,9,10)<br>tp1=tp[:5]<br>tp2=tp[5:]<br>print tp1<br>print tp2"
  },
  {
    "component": "text",
    "value": "programming_key201"
  },
  {
    "component": "text",
    "value": "programming_key202"
  },
  {
    "component": "text",
    "value": "programming_key203"
  },
  {
    "component": "text",
    "value": "programming_key204"
  },
  {
    "component": "text",
    "value": "programming_key205"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "tp=(1,2,3,4,5,6,7,8,9,10)<br>li=list()<br>for i in tp:<br>    if tp[i]%2==0:<br>        li.append(tp[i])<br><br>tp2=tuple(li)<br>print tp2"
  },
  {
    "component": "text",
    "value": "programming_key206"
  },
  {
    "component": "text",
    "value": "programming_key207"
  },
  {
    "component": "text",
    "value": "programming_key208"
  },
  {
    "component": "text",
    "value": "programming_key209"
  },
  {
    "component": "text",
    "value": "programming_key210"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "s= raw_input()<br>if s==\"yes\" or s==\"YES\" or s==\"Yes\":<br>    print \"Yes\"<br>else:<br>    print \"No\""
  },
  {
    "component": "text",
    "value": "programming_key211"
  },
  {
    "component": "text",
    "value": "programming_key212"
  },
  {
    "component": "text",
    "value": "programming_key213"
  },
  {
    "component": "text",
    "value": "programming_key214"
  },
  {
    "component": "text",
    "value": "programming_key215"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "li = [1,2,3,4,5,6,7,8,9,10]<br>evenNumbers = filter(lambda x: x%2==0, li)<br>print evenNumbers"
  },
  {
    "component": "text",
    "value": "programming_key216"
  },
  {
    "component": "text",
    "value": "programming_key217"
  },
  {
    "component": "text",
    "value": "programming_key218"
  },
  {
    "component": "text",
    "value": "programming_key219"
  },
  {
    "component": "text",
    "value": "programming_key220"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "li = [1,2,3,4,5,6,7,8,9,10]<br>squaredNumbers = map(lambda x: x**2, li)<br>print squaredNumbers"
  },
  {
    "component": "text",
    "value": "programming_key221"
  },
  {
    "component": "text",
    "value": "programming_key222"
  },
  {
    "component": "text",
    "value": "programming_key223"
  },
  {
    "component": "text",
    "value": "programming_key224"
  },
  {
    "component": "text",
    "value": "programming_key225"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "li = [1,2,3,4,5,6,7,8,9,10]<br>evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))<br>print evenNumbers"
  },
  {
    "component": "text",
    "value": "programming_key226"
  },
  {
    "component": "text",
    "value": "programming_key227"
  },
  {
    "component": "text",
    "value": "programming_key228"
  },
  {
    "component": "text",
    "value": "programming_key229"
  },
  {
    "component": "text",
    "value": "programming_key230"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "evenNumbers = filter(lambda x: x%2==0, range(1,21))<br>print evenNumbers"
  },
  {
    "component": "text",
    "value": "programming_key231"
  },
  {
    "component": "text",
    "value": "programming_key232"
  },
  {
    "component": "text",
    "value": "programming_key233"
  },
  {
    "component": "text",
    "value": "programming_key234"
  },
  {
    "component": "text",
    "value": "programming_key235"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "squaredNumbers = map(lambda x: x**2, range(1,21))<br>print squaredNumbers"
  },
  {
    "component": "text",
    "value": "programming_key236"
  },
  {
    "component": "text",
    "value": "programming_key237"
  },
  {
    "component": "text",
    "value": "programming_key238"
  },
  {
    "component": "text",
    "value": "programming_key239"
  },
  {
    "component": "text",
    "value": "programming_key240"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "class American(object):<br>    @staticmethod<br>    def printNationality():<br>        print \"America\"<br><br>anAmerican = American()<br>anAmerican.printNationality()<br>American.printNationality()"
  },
  {
    "component": "text",
    "value": "programming_key241"
  },
  {
    "component": "text",
    "value": "programming_key242"
  },
  {
    "component": "text",
    "value": "programming_key243"
  },
  {
    "component": "text",
    "value": "programming_key244"
  },
  {
    "component": "text",
    "value": "programming_key245"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "class American(object):<br>    pass<br><br>class NewYorker(American):<br>    pass<br><br>anAmerican = American()<br>aNewYorker = NewYorker()<br>print anAmerican<br>print aNewYorker"
  },
  {
    "component": "text",
    "value": "programming_key246"
  },
  {
    "component": "text",
    "value": "programming_key247"
  },
  {
    "component": "text",
    "value": "programming_key248"
  },
  {
    "component": "text",
    "value": "programming_key249"
  },
  {
    "component": "text",
    "value": "programming_key250"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "class Circle(object):<br>    def __init__(self, r):<br>        self.radius = r<br><br>    def area(self):<br>        return self.radius**2*3.14<br><br>aCircle = Circle(2)<br>print aCircle.area()<br>"
  },
  {
    "component": "text",
    "value": "programming_key251"
  },
  {
    "component": "text",
    "value": "programming_key252"
  },
  {
    "component": "text",
    "value": "programming_key253"
  },
  {
    "component": "text",
    "value": "programming_key254"
  },
  {
    "component": "text",
    "value": "programming_key255"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "class Rectangle(object):<br>    def __init__(self, l, w):<br>        self.length = l<br>        self.width  = w<br><br>    def area(self):<br>        return self.length*self.width<br><br>aRectangle = Rectangle(2,10)<br>print aRectangle.area()"
  },
  {
    "component": "text",
    "value": "programming_key256"
  },
  {
    "component": "text",
    "value": "programming_key257"
  },
  {
    "component": "text",
    "value": "programming_key258"
  },
  {
    "component": "text",
    "value": "programming_key259"
  },
  {
    "component": "text",
    "value": "programming_key260"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "class Shape(object):<br>    def __init__(self):<br>        pass<br><br>    def area(self):<br>        return 0<br><br>class Square(Shape):<br>    def __init__(self, l):<br>        Shape.__init__(self)<br>        self.length = l<br><br>    def area(self):<br>        return self.length*self.length<br><br>aSquare= Square(3)<br>print aSquare.area()"
  },
  {
    "component": "text",
    "value": "programming_key261"
  },
  {
    "component": "text",
    "value": "programming_key262"
  },
  {
    "component": "text",
    "value": "programming_key263"
  },
  {
    "component": "text",
    "value": "programming_key264"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "raise RuntimeError('something wrong')"
  },
  {
    "component": "text",
    "value": "programming_key265"
  },
  {
    "component": "text",
    "value": "programming_key266"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "Use try/except to catch exceptions.<br><br>Solution:<br><br>def throws():<br>    return 5/0<br><br>try:<br>    throws()<br>except ZeroDivisionError:<br>    print \"division by zero!\"<br>except Exception, err:<br>    print 'Caught an exception'<br>finally:<br>    print 'In finally block for cleanup'"
  },
  {
    "component": "text",
    "value": "programming_key267"
  },
  {
    "component": "text",
    "value": "programming_key268"
  },
  {
    "component": "text",
    "value": "programming_key269"
  },
  {
    "component": "text",
    "value": "programming_key270"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "class MyError(Exception):<br>    \"\"\"My own exception class<br><br>    Attributes:<br>        msg  -- explanation of the error<br>    \"\"\"<br><br>    def __init__(self, msg):<br>        self.msg = msg<br><br>error = MyError(\"something wrong\")"
  },
  {
    "component": "text",
    "value": "programming_key271"
  },
  {
    "component": "text",
    "value": "programming_key272"
  },
  {
    "component": "text",
    "value": "programming_key273"
  },
  {
    "component": "text",
    "value": "programming_key274"
  },
  {
    "component": "text",
    "value": "programming_key275"
  },
  {
    "component": "text",
    "value": "programming_key276"
  },
  {
    "component": "text",
    "value": "programming_key277"
  },
  {
    "component": "text",
    "value": "programming_key278"
  },
  {
    "component": "text",
    "value": "programming_key279"
  },
  {
    "component": "text",
    "value": "programming_key280"
  },
  {
    "component": "text",
    "value": "programming_key281"
  },
  {
    "component": "text",
    "value": "programming_key282"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import re<br>emailAddress = raw_input()<br>pat2 = \"(\\w+)@((\\w+\\.)+(com))\"<br>r2 = re.match(pat2,emailAddress)<br>print r2.group(1)"
  },
  {
    "component": "text",
    "value": "programming_key283"
  },
  {
    "component": "text",
    "value": "programming_key284"
  },
  {
    "component": "text",
    "value": "programming_key285"
  },
  {
    "component": "text",
    "value": "programming_key286"
  },
  {
    "component": "text",
    "value": "programming_key287"
  },
  {
    "component": "text",
    "value": "programming_key288"
  },
  {
    "component": "text",
    "value": "programming_key289"
  },
  {
    "component": "text",
    "value": "programming_key290"
  },
  {
    "component": "text",
    "value": "programming_key291"
  },
  {
    "component": "text",
    "value": "programming_key292"
  },
  {
    "component": "text",
    "value": "programming_key293"
  },
  {
    "component": "text",
    "value": "programming_key294"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import re<br>emailAddress = raw_input()<br>pat2 = \"(\\w+)@(\\w+)\\.(com)\"<br>r2 = re.match(pat2,emailAddress)<br>print r2.group(2)"
  },
  {
    "component": "text",
    "value": "programming_key295"
  },
  {
    "component": "text",
    "value": "programming_key296"
  },
  {
    "component": "text",
    "value": "programming_key297"
  },
  {
    "component": "text",
    "value": "programming_key298"
  },
  {
    "component": "text",
    "value": "programming_key299"
  },
  {
    "component": "text",
    "value": "programming_key300"
  },
  {
    "component": "text",
    "value": "programming_key301"
  },
  {
    "component": "text",
    "value": "programming_key302"
  },
  {
    "component": "text",
    "value": "programming_key303"
  },
  {
    "component": "text",
    "value": "programming_key304"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import re<br>s = raw_input()<br>print re.findall(\"\\d+\",s)"
  },
  {
    "component": "text",
    "value": "programming_key305"
  },
  {
    "component": "text",
    "value": "programming_key306"
  },
  {
    "component": "text",
    "value": "programming_key307"
  },
  {
    "component": "text",
    "value": "programming_key308"
  },
  {
    "component": "text",
    "value": "programming_key309"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "unicodeString = u\"hello world!\"<br>print unicodeString"
  },
  {
    "component": "text",
    "value": "programming_key310"
  },
  {
    "component": "text",
    "value": "programming_key311"
  },
  {
    "component": "text",
    "value": "programming_key312"
  },
  {
    "component": "text",
    "value": "programming_key313"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "s = raw_input()<br>u = unicode( s ,\"utf-8\")<br>print u"
  },
  {
    "component": "text",
    "value": "programming_key314"
  },
  {
    "component": "text",
    "value": "programming_key315"
  },
  {
    "component": "text",
    "value": "programming_key316"
  },
  {
    "component": "text",
    "value": "programming_key317"
  },
  {
    "component": "text",
    "value": "programming_key318"
  },
  {
    "component": "text",
    "value": "programming_key319"
  },
  {
    "component": "text",
    "value": "programming_key320"
  },
  {
    "component": "text",
    "value": "programming_key321"
  },
  {
    "component": "text",
    "value": "programming_key322"
  },
  {
    "component": "text",
    "value": "programming_key323"
  },
  {
    "component": "text",
    "value": "programming_key324"
  },
  {
    "component": "text",
    "value": "programming_key325"
  },
  {
    "component": "text",
    "value": "programming_key326"
  },
  {
    "component": "text",
    "value": "programming_key327"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "n=int(raw_input())<br>sum=0.0<br>for i in range(1,n+1):<br>    sum += float(float(i)/(i+1))<br>print sum"
  },
  {
    "component": "text",
    "value": "programming_key328"
  },
  {
    "component": "text",
    "value": "programming_key329"
  },
  {
    "component": "text",
    "value": "programming_key330"
  },
  {
    "component": "text",
    "value": "programming_key331"
  },
  {
    "component": "text",
    "value": "programming_key332"
  },
  {
    "component": "text",
    "value": "programming_key333"
  },
  {
    "component": "text",
    "value": "programming_key334"
  },
  {
    "component": "text",
    "value": "programming_key335"
  },
  {
    "component": "text",
    "value": "programming_key336"
  },
  {
    "component": "text",
    "value": "programming_key337"
  },
  {
    "component": "text",
    "value": "programming_key338"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def f(n):<br>    if n==0:<br>        return 0<br>    else:<br>        return f(n-1)+100<br><br>n=int(raw_input())<br>print f(n)"
  },
  {
    "component": "text",
    "value": "programming_key339"
  },
  {
    "component": "text",
    "value": "programming_key340"
  },
  {
    "component": "text",
    "value": "programming_key341"
  },
  {
    "component": "text",
    "value": "programming_key342"
  },
  {
    "component": "text",
    "value": "programming_key343"
  },
  {
    "component": "text",
    "value": "programming_key344"
  },
  {
    "component": "text",
    "value": "programming_key345"
  },
  {
    "component": "text",
    "value": "programming_key346"
  },
  {
    "component": "text",
    "value": "programming_key347"
  },
  {
    "component": "text",
    "value": "programming_key348"
  },
  {
    "component": "text",
    "value": "programming_key349"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def f(n):<br>    if n == 0: return 0<br>    elif n == 1: return 1<br>    else: return f(n-1)+f(n-2)<br><br>n=int(raw_input())<br>print f(n)"
  },
  {
    "component": "text",
    "value": "programming_key350"
  },
  {
    "component": "text",
    "value": "programming_key351"
  },
  {
    "component": "text",
    "value": "programming_key352"
  },
  {
    "component": "text",
    "value": "programming_key353"
  },
  {
    "component": "text",
    "value": "programming_key354"
  },
  {
    "component": "text",
    "value": "programming_key355"
  },
  {
    "component": "text",
    "value": "programming_key356"
  },
  {
    "component": "text",
    "value": "programming_key357"
  },
  {
    "component": "text",
    "value": "programming_key358"
  },
  {
    "component": "text",
    "value": "programming_key359"
  },
  {
    "component": "text",
    "value": "programming_key360"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def f(n):<br>    if n == 0: return 0<br>    elif n == 1: return 1<br>    else: return f(n-1)+f(n-2)<br><br>n=int(raw_input())<br>values = [str(f(x)) for x in range(0, n+1)]<br>print \",\".join(values)"
  },
  {
    "component": "text",
    "value": "programming_key361"
  },
  {
    "component": "text",
    "value": "programming_key362"
  },
  {
    "component": "text",
    "value": "programming_key363"
  },
  {
    "component": "text",
    "value": "programming_key364"
  },
  {
    "component": "text",
    "value": "programming_key365"
  },
  {
    "component": "text",
    "value": "programming_key366"
  },
  {
    "component": "text",
    "value": "programming_key367"
  },
  {
    "component": "text",
    "value": "programming_key368"
  },
  {
    "component": "text",
    "value": "programming_key369"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def EvenGenerator(n):<br>    i=0<br>    while i<=n:<br>        if i%2==0:<br>            yield i<br>        i+=1<br><br><br>n=int(raw_input())<br>values = []<br>for i in EvenGenerator(n):<br>    values.append(str(i))<br><br>print \",\".join(values)"
  },
  {
    "component": "text",
    "value": "programming_key370"
  },
  {
    "component": "text",
    "value": "programming_key371"
  },
  {
    "component": "text",
    "value": "programming_key372"
  },
  {
    "component": "text",
    "value": "programming_key373"
  },
  {
    "component": "text",
    "value": "programming_key374"
  },
  {
    "component": "text",
    "value": "programming_key375"
  },
  {
    "component": "text",
    "value": "programming_key376"
  },
  {
    "component": "text",
    "value": "programming_key377"
  },
  {
    "component": "text",
    "value": "programming_key378"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def NumGenerator(n):<br>    for i in range(n+1):<br>        if i%5==0 and i%7==0:<br>            yield i<br><br>n=int(raw_input())<br>values = []<br>for i in NumGenerator(n):<br>    values.append(str(i))<br><br>print \",\".join(values)"
  },
  {
    "component": "text",
    "value": "programming_key379"
  },
  {
    "component": "text",
    "value": "programming_key380"
  },
  {
    "component": "text",
    "value": "programming_key381"
  },
  {
    "component": "text",
    "value": "programming_key382"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "li = [2,4,6,8]<br>for i in li:<br>    assert i%2==0"
  },
  {
    "component": "text",
    "value": "programming_key383"
  },
  {
    "component": "text",
    "value": "programming_key384"
  },
  {
    "component": "text",
    "value": "programming_key385"
  },
  {
    "component": "text",
    "value": "programming_key386"
  },
  {
    "component": "text",
    "value": "programming_key387"
  },
  {
    "component": "text",
    "value": "programming_key388"
  },
  {
    "component": "text",
    "value": "programming_key389"
  },
  {
    "component": "text",
    "value": "programming_key390"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "expression = raw_input()<br>print eval(expression)"
  },
  {
    "component": "text",
    "value": "programming_key391"
  },
  {
    "component": "text",
    "value": "programming_key392"
  },
  {
    "component": "text",
    "value": "programming_key393"
  },
  {
    "component": "text",
    "value": "programming_key394"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import math<br>def bin_search(li, element):<br>    bottom = 0<br>    top = len(li)-1<br>    index = -1<br>    while top>=bottom and index==-1:<br>        mid = int(math.floor((top+bottom)/2.0))<br>        if li[mid]==element:<br>            index = mid<br>        elif li[mid]>element:<br>            top = mid-1<br>        else:<br>            bottom = mid+1<br><br>    return index<br><br>li=[2,5,7,9,11,17,222]<br>print bin_search(li,11)<br>print bin_search(li,12)"
  },
  {
    "component": "text",
    "value": "programming_key395"
  },
  {
    "component": "text",
    "value": "programming_key396"
  },
  {
    "component": "text",
    "value": "programming_key397"
  },
  {
    "component": "text",
    "value": "programming_key398"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import math<br>def bin_search(li, element):<br>    bottom = 0<br>    top = len(li)-1<br>    index = -1<br>    while top>=bottom and index==-1:<br>        mid = int(math.floor((top+bottom)/2.0))<br>        if li[mid]==element:<br>            index = mid<br>        elif li[mid]>element:<br>            top = mid-1<br>        else:<br>            bottom = mid+1<br><br>    return index<br><br>li=[2,5,7,9,11,17,222]<br>print bin_search(li,11)<br>print bin_search(li,12)"
  },
  {
    "component": "text",
    "value": "programming_key399"
  },
  {
    "component": "text",
    "value": "programming_key400"
  },
  {
    "component": "text",
    "value": "programming_key401"
  },
  {
    "component": "text",
    "value": "programming_key402"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import random<br>print random.random()*100"
  },
  {
    "component": "text",
    "value": "programming_key403"
  },
  {
    "component": "text",
    "value": "programming_key404"
  },
  {
    "component": "text",
    "value": "programming_key405"
  },
  {
    "component": "text",
    "value": "programming_key406"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import random<br>print random.random()*100-5"
  },
  {
    "component": "text",
    "value": "programming_key407"
  },
  {
    "component": "text",
    "value": "programming_key408"
  },
  {
    "component": "text",
    "value": "programming_key409"
  },
  {
    "component": "text",
    "value": "programming_key410"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import random<br>print random.choice([i for i in range(11) if i%2==0])"
  },
  {
    "component": "text",
    "value": "programming_key411"
  },
  {
    "component": "text",
    "value": "programming_key412"
  },
  {
    "component": "text",
    "value": "programming_key413"
  },
  {
    "component": "text",
    "value": "programming_key414"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import random<br>print random.choice([i for i in range(201) if i%5==0 and i%7==0])"
  },
  {
    "component": "text",
    "value": "programming_key415"
  },
  {
    "component": "text",
    "value": "programming_key416"
  },
  {
    "component": "text",
    "value": "programming_key417"
  },
  {
    "component": "text",
    "value": "programming_key418"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import random<br>print random.sample(range(100), 5)"
  },
  {
    "component": "text",
    "value": "programming_key419"
  },
  {
    "component": "text",
    "value": "programming_key420"
  },
  {
    "component": "text",
    "value": "programming_key421"
  },
  {
    "component": "text",
    "value": "programming_key422"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import random<br>print random.sample([i for i in range(100,201) if i%2==0], 5)"
  },
  {
    "component": "text",
    "value": "programming_key423"
  },
  {
    "component": "text",
    "value": "programming_key424"
  },
  {
    "component": "text",
    "value": "programming_key425"
  },
  {
    "component": "text",
    "value": "programming_key426"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import random<br>print random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5)"
  },
  {
    "component": "text",
    "value": "programming_key427"
  },
  {
    "component": "text",
    "value": "programming_key428"
  },
  {
    "component": "text",
    "value": "programming_key429"
  },
  {
    "component": "text",
    "value": "programming_key430"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import random<br>print random.randrange(7,16)"
  },
  {
    "component": "text",
    "value": "programming_key431"
  },
  {
    "component": "text",
    "value": "programming_key432"
  },
  {
    "component": "text",
    "value": "programming_key433"
  },
  {
    "component": "text",
    "value": "programming_key434"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import zlib<br>s = 'hello world!hello world!hello world!hello world!'<br>t = zlib.compress(s)<br>print t<br>print zlib.decompress(t)"
  },
  {
    "component": "text",
    "value": "programming_key435"
  },
  {
    "component": "text",
    "value": "programming_key436"
  },
  {
    "component": "text",
    "value": "programming_key437"
  },
  {
    "component": "text",
    "value": "programming_key438"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "from timeit import Timer<br>t = Timer(\"for i in range(100):1+1\")<br>print t.timeit()"
  },
  {
    "component": "text",
    "value": "programming_key439"
  },
  {
    "component": "text",
    "value": "programming_key440"
  },
  {
    "component": "text",
    "value": "programming_key441"
  },
  {
    "component": "text",
    "value": "programming_key442"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "from random import shuffle<br>li = [3,6,7,8]<br>shuffle(li)<br>print li"
  },
  {
    "component": "text",
    "value": "programming_key443"
  },
  {
    "component": "text",
    "value": "programming_key444"
  },
  {
    "component": "text",
    "value": "programming_key445"
  },
  {
    "component": "text",
    "value": "programming_key446"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "from random import shuffle<br>li = [3,6,7,8]<br>shuffle(li)<br>print li"
  },
  {
    "component": "text",
    "value": "programming_key447"
  },
  {
    "component": "text",
    "value": "programming_key448"
  },
  {
    "component": "text",
    "value": "programming_key449"
  },
  {
    "component": "text",
    "value": "programming_key450"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "subjects=[\"I\", \"You\"]<br>verbs=[\"Play\", \"Love\"]<br>objects=[\"Hockey\",\"Football\"]<br>for i in range(len(subjects)):<br>    for j in range(len(verbs)):<br>        for k in range(len(objects)):<br>            sentence = \"%s %s %s.\" % (subjects[i], verbs[j], objects[k])<br>            print sentence"
  },
  {
    "component": "text",
    "value": "programming_key451"
  },
  {
    "component": "text",
    "value": "programming_key452"
  },
  {
    "component": "text",
    "value": "programming_key453"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "li = [5,6,77,45,22,12,24]<br>li = [x for x in li if x%2!=0]<br>print li"
  },
  {
    "component": "text",
    "value": "programming_key454"
  },
  {
    "component": "text",
    "value": "programming_key455"
  },
  {
    "component": "text",
    "value": "programming_key456"
  },
  {
    "component": "text",
    "value": "programming_key457"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "li = [12,24,35,70,88,120,155]<br>li = [x for x in li if x%5!=0 and x%7!=0]<br>print li"
  },
  {
    "component": "text",
    "value": "programming_key458"
  },
  {
    "component": "text",
    "value": "programming_key459"
  },
  {
    "component": "text",
    "value": "programming_key460"
  },
  {
    "component": "text",
    "value": "programming_key461"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "li = [12,24,35,70,88,120,155]<br>li = [x for (i,x) in enumerate(li) if i%2!=0]<br>print li"
  },
  {
    "component": "text",
    "value": "programming_key462"
  },
  {
    "component": "text",
    "value": "programming_key463"
  },
  {
    "component": "text",
    "value": "programming_key464"
  },
  {
    "component": "text",
    "value": "programming_key465"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]<br>print array"
  },
  {
    "component": "text",
    "value": "programming_key466"
  },
  {
    "component": "text",
    "value": "programming_key467"
  },
  {
    "component": "text",
    "value": "programming_key468"
  },
  {
    "component": "text",
    "value": "programming_key469"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "li = [12,24,35,70,88,120,155]<br>li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]<br>print li"
  },
  {
    "component": "text",
    "value": "programming_key470"
  },
  {
    "component": "text",
    "value": "programming_key471"
  },
  {
    "component": "text",
    "value": "programming_key472"
  },
  {
    "component": "text",
    "value": "programming_key473"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "li = [12,24,35,24,88,120,155]<br>li = [x for x in li if x!=24]<br>print li"
  },
  {
    "component": "text",
    "value": "programming_key474"
  },
  {
    "component": "text",
    "value": "programming_key475"
  },
  {
    "component": "text",
    "value": "programming_key476"
  },
  {
    "component": "text",
    "value": "programming_key477"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "set1=set([1,3,6,78,35,55])<br>set2=set([12,24,35,24,88,120,155])<br>set1 &= set2<br>li=list(set1)<br>print li"
  },
  {
    "component": "text",
    "value": "programming_key478"
  },
  {
    "component": "text",
    "value": "programming_key479"
  },
  {
    "component": "text",
    "value": "programming_key480"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def removeDuplicate( li ):<br>    newli=[]<br>    seen = set()<br>    for item in li:<br>        if item not in seen:<br>            seen.add( item )<br>            newli.append(item)<br><br>    return newli<br><br>li=[12,24,35,24,88,120,155,88,120,155]<br>print removeDuplicate(li)"
  },
  {
    "component": "text",
    "value": "programming_key481"
  },
  {
    "component": "text",
    "value": "programming_key482"
  },
  {
    "component": "text",
    "value": "programming_key483"
  },
  {
    "component": "text",
    "value": "programming_key484"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "class Person(object):<br>    def getGender( self ):<br>        return \"Unknown\"<br><br>class Male( Person ):<br>    def getGender( self ):<br>        return \"Male\"<br><br>class Female( Person ):<br>    def getGender( self ):<br>        return \"Female\"<br><br>aMale = Male()<br>aFemale= Female()<br>print aMale.getGender()<br>print aFemale.getGender()"
  },
  {
    "component": "text",
    "value": "programming_key485"
  },
  {
    "component": "text",
    "value": "programming_key486"
  },
  {
    "component": "text",
    "value": "programming_key487"
  },
  {
    "component": "text",
    "value": "programming_key488"
  },
  {
    "component": "text",
    "value": "programming_key489"
  },
  {
    "component": "text",
    "value": "programming_key490"
  },
  {
    "component": "text",
    "value": "programming_key491"
  },
  {
    "component": "text",
    "value": "programming_key492"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "dic = {}<br>s=raw_input()<br>for s in s:<br>    dic[s] = dic.get(s,0)+1<br>print '\\n'.join(['%s,%s' % (k, v) for k, v in dic.items()])"
  },
  {
    "component": "text",
    "value": "programming_key493"
  },
  {
    "component": "text",
    "value": "programming_key494"
  },
  {
    "component": "text",
    "value": "programming_key495"
  },
  {
    "component": "text",
    "value": "programming_key496"
  },
  {
    "component": "text",
    "value": "programming_key497"
  },
  {
    "component": "text",
    "value": "programming_key498"
  },
  {
    "component": "text",
    "value": "programming_key499"
  },
  {
    "component": "text",
    "value": "programming_key500"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "s=raw_input()<br>s = s[::-1]<br>print s"
  },
  {
    "component": "text",
    "value": "programming_key501"
  },
  {
    "component": "text",
    "value": "programming_key502"
  },
  {
    "component": "text",
    "value": "programming_key503"
  },
  {
    "component": "text",
    "value": "programming_key504"
  },
  {
    "component": "text",
    "value": "programming_key505"
  },
  {
    "component": "text",
    "value": "programming_key506"
  },
  {
    "component": "text",
    "value": "programming_key507"
  },
  {
    "component": "text",
    "value": "programming_key508"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "s=raw_input()<br>s = s[::2]<br>print s"
  },
  {
    "component": "text",
    "value": "programming_key509"
  },
  {
    "component": "text",
    "value": "programming_key510"
  },
  {
    "component": "text",
    "value": "programming_key511"
  },
  {
    "component": "text",
    "value": "programming_key512"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "import itertools<br>print list(itertools.permutations([1,2,3]))"
  },
  {
    "component": "text",
    "value": "programming_key513"
  },
  {
    "component": "text",
    "value": "programming_key514"
  },
  {
    "component": "text",
    "value": "programming_key515"
  },
  {
    "component": "text",
    "value": "programming_key516"
  },
  {
    "component": "code",
    "type": "other",
    "title": "",
    "value": "def solve(numheads,numlegs):<br>    ns='No solutions!'<br>    for i in range(numheads+1):<br>        j=numheads-i<br>        if 2*i+4*j==numlegs:<br>            return i,j<br>    return ns,ns<br><br>numheads=35<br>numlegs=94<br>solutions=solve(numheads,numlegs)<br>print solutions"
  }
]