{
    "Comparison_key1": "नाम: तुलना ऑपरेटर\nसबमिशन_टाइप: यूआरएल\n",
    "Comparison_key2": "### तुलना `operators`:-\n\n\n",
    "Comparison_key3": "हम 2 मानों की तुलना करने के लिए `comparison `ऑपरेटर्स`��\u0006�wL��=\u001b�v�c4�ҽ\u001d",
    "Comparison_key4": "`OPERATORS`",
    "Comparison_key5": "नाम",
    "Comparison_key6": "उदाहरण",
    "Comparison_key7": "``",
    "Comparison_key8": "बराबरी का",
    "Comparison_key9": "`10 == 10`",
    "Comparison_key10": "``",
    "Comparison_key11": "सम नही",
    "Comparison_key12": "`10 != 13`",
    "Comparison_key13": "``",
    "Comparison_key14": "से अधिक",
    "Comparison_key15": "`��`",
    "Comparison_key16": "``",
    "Comparison_key17": "से कम",
    "Comparison_key18": "`��`",
    "Comparison_key19": "`\u001b`",
    "Comparison_key20": "इससे बड़ा या इसके बराबर",
    "Comparison_key21": "`��`",
    "Comparison_key22": "``",
    "Comparison_key23": "से कम या बराबर",
    "Comparison_key24": "`��`",
    "Comparison_key25": "1.**समान(==):-** यह जांचने के लिए कि क्या 2 मान बराबर हैं, `==` `operator` का उपयोग किया जाता है। (चूंकि हम जानते हैं कि `=` का उपयोग असाइनमेंट के लिए किया जाता है इसलिए समानता के लिए यह `==` है)\n",
    "Comparison_key26": "`Example-1 :-`\n",
    "Comparison_key27": "`Output :-`\n",
    "Comparison_key28": "`true`\n",
    "Comparison_key29": "`Example 2 :-`\n",
    "Comparison_key30": "`Output`\n",
    "Comparison_key31": "`false`\n",
    "Comparison_key32": "2.**समान नहीं (!=) :-** `!=` `operator` का उपयोग यह जांचने के लिए किया जाता है कि 2 मान असमान हैं या नहीं।\n",
    "Comparison_key33": "`Example 1 :-`\n",
    "Comparison_key34": "`Output :-`\n",
    "Comparison_key35": "`true`\n",
    "Comparison_key36": "इसका मतलब है कि x=10 और y=13 बराबर नहीं हैं।\n",
    "Comparison_key37": "`Example 2 :-`\n",
    "Comparison_key38": "`Output :-`\n",
    "Comparison_key39": "`false`\n",
    "Comparison_key40": "उपरोक्त उदाहरण में, दोनों मान समान हैं, जिसका अर्थ है \"क्या 2 मान असमान हैं?\" `false` है।\n",
    "Comparison_key41": "3.**से बड़ा (>) :-** यह गणित जैसा ही है, यह जांचता है कि बाईं ओर का मान दाईं ओर के मान से अधिक है या नहीं। यदि हाँ तो `output` `true` है अन्यथा यह `false` है।\n",
    "Comparison_key42": "`Example1 :-`\n",
    "Comparison_key43": "`Output :-`\n",
    "Comparison_key44": "`true`\n",
    "Comparison_key45": "इसका मतलब है कि a=6, b=4 से बड़ा है और इसलिए `output` को `true` के रूप में देखा जाता है।\n",
    "Comparison_key46": "`Example2 :-`\n",
    "Comparison_key47": "`Output :-`\n",
    "Comparison_key48": "`false`\n",
    "Comparison_key49": "इस उदाहरण में हम कह रहे हैं कि x का मान y से बड़ा है, जो गलत है इसलिए `output` है `false`।\n",
    "Comparison_key50": "4.**से कम (<):-** यह गणित की तरह ही है, यह जांचता है कि बाईं ओर का मान दाईं ओर के मान से कम है या नहीं। यदि हाँ तो `output` `true` है अन्यथा यह `false` है।\n",
    "Comparison_key51": "`Example 1:-`\n",
    "Comparison_key52": "`Output :-`\n",
    "Comparison_key53": "`true`\nइस उदाहरण में, x, y से छोटा है इसलिए `output` है `true`।\n",
    "Comparison_key54": "`Example 2 :-`\n",
    "Comparison_key55": "`Output :-`\n",
    "Comparison_key56": "`false`\n",
    "Comparison_key57": "इस उदाहरण में, a, b से बड़ा है, इसलिए `output`, `false` है।\n",
    "Comparison_key58": "5.**से बड़ा या बराबर (>=) :-** यह गणित के समान है, यह जांचता है कि बाईं ओर का मान दाईं ओर के मान से अधिक या बराबर है या नहीं। यदि हाँ तो `output` `true` है अन्यथा यह `false` है।\n",
    "Comparison_key59": "`Example 1:-`\n",
    "Comparison_key60": "`Output :-`\n",
    "Comparison_key61": "`true`\n",
    "Comparison_key62": "यहाँ, a, b से बड़ा है इसलिए `output` है `true`।\n",
    "Comparison_key63": "`Example 2 :-`\n",
    "Comparison_key64": "`Output :-`\n",
    "Comparison_key65": "`false`\n",
    "Comparison_key66": "यहाँ चूँकि a, b से बड़ा नहीं है और a भी b के बराबर नहीं है, इसलिए `output` है `false`।\n",
    "Comparison_key67": "6.** से कम या इसके बराबर (<=) :-**\n",
    "Comparison_key68": "यह गणित की तरह ही है, यह जाँचता है कि बाईं ओर का मान दाईं ओर के मान से कम है या उसके बराबर है। यदि हाँ तो `output` `true` है अन्यथा यह `false` है।\n",
    "Comparison_key69": "`Example 1:-`\n",
    "Comparison_key70": "`Output :-`\n",
    "Comparison_key71": "`true`\n",
    "Comparison_key72": "ऊपर के उदाहरण में, x=6, y=9 से छोटा है और इस प्रकार, `output` है `true`।\n",
    "Comparison_key73": "`Example 2 :-`\n",
    "Comparison_key74": "`Output :-`\n",
    "Comparison_key75": "`false`\n",
    "Comparison_key76": "यहाँ, x न तो y से कम है और न ही y के बराबर है, इसलिए `output` है `false`।\n"
}