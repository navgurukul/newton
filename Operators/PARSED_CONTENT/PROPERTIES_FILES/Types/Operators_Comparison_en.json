{
	"Comparison_key1": "COMPARISON `OPERATORS`\n",
	"Comparison_key2": "We use `comparison operators` to compare two values. Their answer or result is always of the `Boolean Data Type`.\n",
	"Comparison_key3": "OPERATORS",
	"Comparison_key4": "NAME",
	"Comparison_key5": "EXAMPLE",
	"Comparison_key6": "`==`",
	"Comparison_key7": "`Equal`",
	"Comparison_key8": "`10 == 10`",
	"Comparison_key9": "`!=`",
	"Comparison_key10": "`Not Equal`",
	"Comparison_key11": "`10 != 13`",
	"Comparison_key12": "`>`",
	"Comparison_key13": "`Greater than`",
	"Comparison_key14": "`2 > 5`",
	"Comparison_key15": "`<`",
	"Comparison_key16": "`Less than`",
	"Comparison_key17": "`2 < 5`",
	"Comparison_key18": "`>=`",
	"Comparison_key19": "`Greater than or  equal to`",
	"Comparison_key20": "`2 >= 5`",
	"Comparison_key21": "`<=`",
	"Comparison_key22": "`Less than or equal to`",
	"Comparison_key23": "`2 <= 5`",
	"Comparison_key24": "`Equal(==):-`\n",
	"Comparison_key25": " To check whether two values are equal, the `==` `operator` is used. (Since we know `=` is used for assignment so for equality it is `==`)\n",
	"Comparison_key26": "Example :-\n",
	"Comparison_key27": "`Output` :-\n",
	"Comparison_key28": "`True`\n",
	"Comparison_key29": "Example :-\n",
	"Comparison_key30": "`Output` :-\n",
	"Comparison_key31": "`False`\n",
	"Comparison_key32": "`Not Equal (!=) :-`\n",
	"Comparison_key33": " The `!=` `operator` is used to check if two values are unequal or not equal .\n",
	"Comparison_key34": "Example :-\n",
	"Comparison_key35": "`Output` :-\n",
	"Comparison_key36": "`True`\n",
	"Comparison_key37": "This means that x=10 and y=13 are not equal.\n",
	"Comparison_key38": "Example :-\n",
	"Comparison_key39": "`Output` :-\n",
	"Comparison_key40": "`False`\n",
	"Comparison_key41": "In the above example, both the values are equal, meaning the answer to the question \"Are the 2 values unequal?\" is `false`.\n",
	"Comparison_key42": "`Greater than (>) :-`\n",
	"Comparison_key43": " It is the same as in mathematics, it checks whether the value on the left is greater than the value on the right. If yes, then the `output` is `true` otherwise `false`.\n",
	"Comparison_key44": "Example  :-\n",
	"Comparison_key45": "`Output` :-\n",
	"Comparison_key46": "`True`\n",
	"Comparison_key47": "This means a=6 is greater than b=4 and so the `output` is seen to be `true`.\n",
	"Comparison_key48": "Example  :-\n",
	"Comparison_key49": "`Output` :-\n",
	"Comparison_key50": "`False`\n",
	"Comparison_key51": "In this example we are saying that the value of x is greater than y, which is wrong hence the `output` is `false`.\n",
	"Comparison_key52": "`Less than (<) :-`\n",
	"Comparison_key53": "It is the same as in mathematics, it checks whether the value on the left is less than the value on the right. If yes then the `output` is `true` otherwise it is `false`.\n",
	"Comparison_key54": "Example :-\n",
	"Comparison_key55": "`Output` :-\n",
	"Comparison_key56": "`True`\n",
	"Comparison_key57": "In this example, x is smaller than y so the `output` is `true`.\n",
	"Comparison_key58": "Example :-\n",
	"Comparison_key59": "`Output` :-\n",
	"Comparison_key60": "`False`\n",
	"Comparison_key61": "In this example, a is greater than b so the `output` is `false`.\n",
	"Comparison_key62": "`Greater than or  equal to (>=):-`\n",
	"Comparison_key63": " It is the same as in mathematics, it checks whether the value on the left is greater than or equal to the value on the right. If yes then the `output` is `true` otherwise it is `false`.\n",
	"Comparison_key64": "Example  :-\n",
	"Comparison_key65": "`Output` :-\n",
	"Comparison_key66": "`True`\n",
	"Comparison_key67": "Here, a is greater than b so the `output` is `true`.\n",
	"Comparison_key68": "Example  :-\n",
	"Comparison_key69": "`Output` :-\n",
	"Comparison_key70": "`False`\n",
	"Comparison_key71": "Here since a is not greater than b and a is also not equal to b, the `output` is `false`.\n",
	"Comparison_key72": "`Less than or equal to (<=) :-`\n",
	"Comparison_key73": "It is the same as in mathematics, it checks whether the value on the left is lesser than or equal to the value on the right. If yes then the `output` is `true` otherwise it is `false`.\n",
	"Comparison_key74": "Example :-\n",
	"Comparison_key75": "`Output` :-\n",
	"Comparison_key76": "`True`\n",
	"Comparison_key77": "In the example above, x=6 is smaller than y=9 and thus, the `output` is `true`.\n",
	"Comparison_key78": "Example :-\n",
	"Comparison_key79": "`Output` :-\n",
	"Comparison_key80": "`False`\n",
	"Comparison_key81": "Here, x is neither less than y, nor equal to y, hence the `output` is `false`.\n"
}