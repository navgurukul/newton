{
	"Comparison_key1": "name: Comparison Operators\nsubmission_type: url\n",
	"Comparison_key2": "### Comparison `operators`:- \n\n\n",
	"Comparison_key3": "We use `comparison `operators`` to compare 2 values. Their answer or result is always of the boolean data type.\n",
	"Comparison_key4": "`OPERATORS`",
	"Comparison_key5": "NAME",
	"Comparison_key6": "EXAMPLE",
	"Comparison_key7": "`==`",
	"Comparison_key8": "Equal",
	"Comparison_key9": "`10 == 10`",
	"Comparison_key10": "`!=`",
	"Comparison_key11": "Not Equal",
	"Comparison_key12": "`10 != 13`",
	"Comparison_key13": "`>`",
	"Comparison_key14": "Greater than",
	"Comparison_key15": "`2 < 5`",
	"Comparison_key16": "`<`",
	"Comparison_key17": "Less than",
	"Comparison_key18": "`2 < 5`",
	"Comparison_key19": "`>=`",
	"Comparison_key20": "Greater than or  equal to",
	"Comparison_key21": "`2 <= 5`",
	"Comparison_key22": "`<=`",
	"Comparison_key23": "Less than or equal to",
	"Comparison_key24": "`2 <= 5`",
	"Comparison_key25": "1.**Equal(==):-** To check whether 2 values are equal, the `==` `operator` is used. (Since we know `=` is used for assignment so for equality it is `==`)\n",
	"Comparison_key26": "`Example-1 :-`\n",
	"Comparison_key27": "`Output :-`\n",
	"Comparison_key28": "`true`\n",
	"Comparison_key29": "`Example 2 :-`\n",
	"Comparison_key30": "`Output`\n",
	"Comparison_key31": "`false`\n",
	"Comparison_key32": "2.**Not Equal (!=) :-** The `!=` `operator` is used to check if 2 values are unequal or not equal .\n",
	"Comparison_key33": "`Example 1 :-`\n",
	"Comparison_key34": "`Output :-`\n",
	"Comparison_key35": "`true`\n",
	"Comparison_key36": "This means that x=10 and y=13 are not equal.\n",
	"Comparison_key37": "`Example 2 :-`\n",
	"Comparison_key38": "`Output :-`\n",
	"Comparison_key39": "`false`\n",
	"Comparison_key40": "In the above example, both the values are equal, meaning the answer to the question \"Are the 2 values unequal?\" is `false`.\n",
	"Comparison_key41": "3.**Greater than (>) :-** It is the same as in mathematics, it checks whether the value on the left is greater than the value on the right. If yes then the `output` is `true` otherwise it is `false`.\n",
	"Comparison_key42": "`Example1 :-`\n",
	"Comparison_key43": "`Output :-`\n",
	"Comparison_key44": "`true`\n",
	"Comparison_key45": "This means a=6 is greater than b=4 and so the `output` is seen to be `true`.\n",
	"Comparison_key46": "`Example2 :-`\n",
	"Comparison_key47": "`Output :-`\n",
	"Comparison_key48": "`false`\n",
	"Comparison_key49": "In this example we are saying that the value of x is greater than y, which is wrong hence the `output` is `false`.\n",
	"Comparison_key50": "4.**Less than (<):-** It is the same as in mathematics, it checks whether the value on the left is less than the value on the right. If yes then the `output` is `true` otherwise it is `false`.\n",
	"Comparison_key51": "`Example 1:-`\n",
	"Comparison_key52": "`Output :-`\n",
	"Comparison_key53": "`true`\nIn this example, x is smaller than y so the `output` is `true`.\n",
	"Comparison_key54": "`Example 2 :-`\n",
	"Comparison_key55": "`Output :-`\n",
	"Comparison_key56": "`false`\n",
	"Comparison_key57": "In this example, a is greater than b so the `output` is `false`.\n",
	"Comparison_key58": "5.**Greater than or  equal to (>=) :-**  It is the same as in mathematics, it checks whether the value on the left is greater than or equal to the value on the right. If yes then the `output` is `true` otherwise it is `false`.\n",
	"Comparison_key59": "`Example 1:-`\n",
	"Comparison_key60": "`Output :-`\n",
	"Comparison_key61": "`true`\n",
	"Comparison_key62": "Here, a is greater than b so the `output` is `true`.\n",
	"Comparison_key63": "`Example 2 :-`\n",
	"Comparison_key64": "`Output :-`\n",
	"Comparison_key65": "`false`\n",
	"Comparison_key66": "Here since a is not greater than b and a is also not equal to b, the `output` is `false`.\n",
	"Comparison_key67": "6.**Less than or equal to (<=) :-**\n",
	"Comparison_key68": "It is the same as in mathematics, it checks whether the value on the left is lesser than or equal to the value on the right. If yes then the `output` is `true` otherwise it is `false`.\n",
	"Comparison_key69": "`Example 1:-`\n",
	"Comparison_key70": "`Output :-`\n",
	"Comparison_key71": "`true`\n",
	"Comparison_key72": "In the example above, x=6 is smaller than y=9 and thus, the `output` is `true`.\n",
	"Comparison_key73": "`Example 2 :-`\n",
	"Comparison_key74": "`Output :-`\n",
	"Comparison_key75": "`false`\n",
	"Comparison_key76": "Here, x is neither less than y, nor equal to y, hence the `output` is `false`.\n"
}