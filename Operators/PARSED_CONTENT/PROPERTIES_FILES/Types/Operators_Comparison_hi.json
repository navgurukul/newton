{
    "Comparison_key1": "## तुलना `OPERATORS`\n\n\n",
    "Comparison_key2": "हम दो मानों की तुलना करने के लिए `comparison `ऑपरेटर्स`��\u0006�wL��=\u001b`Qm9vbGVhbiBEYXRhIFR5cGU=`��G",
    "Comparison_key3": "ऑपरेटरों",
    "Comparison_key4": "नाम",
    "Comparison_key5": "उदाहरण",
    "Comparison_key6": "``",
    "Comparison_key7": "`Equal`",
    "Comparison_key8": "`10 == 10`",
    "Comparison_key9": "``",
    "Comparison_key10": "`Not Equal`",
    "Comparison_key11": "`10 != 13`",
    "Comparison_key12": "``",
    "Comparison_key13": "`Greater than`",
    "Comparison_key14": "`���`",
    "Comparison_key15": "``",
    "Comparison_key16": "`Less than`",
    "Comparison_key17": "`��`",
    "Comparison_key18": "`\u001b`",
    "Comparison_key19": "`Greater than or  equal to`",
    "Comparison_key20": "`���\u0003`",
    "Comparison_key21": "``",
    "Comparison_key22": "`Less than or equal to`",
    "Comparison_key23": "`��`",
    "Comparison_key24": "### `Equal(==):-`\n\n",
    "Comparison_key25": " यह जाँचने के लिए कि क्या दो मान समान हैं, `==` `operator` का प्रयोग किया जाता है। (चूंकि हम जानते हैं कि `=` का उपयोग असाइनमेंट के लिए किया जाता है इसलिए समानता के लिए यह `==` है)\n",
    "Comparison_key26": "#### उदाहरण :-\n\n\n",
    "Comparison_key27": "#### `Output`: -\n\n\n",
    "Comparison_key28": "`�mF3�`\n",
    "Comparison_key29": "#### उदाहरण :-\n\n\n",
    "Comparison_key30": "#### `Output`: -\n\n\n",
    "Comparison_key31": "`��<��`\n",
    "Comparison_key32": "### `Not Equal (!=) :-`\n\n",
    "Comparison_key33": " `!=` `operator` का उपयोग यह जांचने के लिए किया जाता है कि दो मान असमान हैं या नहीं।\n",
    "Comparison_key34": "#### उदाहरण :-\n\n\n",
    "Comparison_key35": "#### `Output`: -\n\n\n",
    "Comparison_key36": "`�mF3�`\n",
    "Comparison_key37": "इसका मतलब है कि x=10 और y=13 बराबर नहीं हैं।\n",
    "Comparison_key38": "#### उदाहरण :-\n\n\n",
    "Comparison_key39": "#### `Output`: -\n\n\n",
    "Comparison_key40": "`��<��`\n",
    "Comparison_key41": "उपरोक्त उदाहरण में, दोनों मान समान हैं, जिसका अर्थ है \"क्या 2 मान असमान हैं?\" `false` है।\n",
    "Comparison_key42": "#### `Greater than (>) :-`\n\n",
    "Comparison_key43": " यह गणित की तरह ही है, यह जाँचता है कि बाईं ओर का मान दाईं ओर के मान से अधिक है या नहीं। यदि हाँ, तो `output` `true` है अन्यथा `false` है।\n",
    "Comparison_key44": "#### उदाहरण  :-\n\n\n",
    "Comparison_key45": "#### `Output`: -\n\n\n",
    "Comparison_key46": "`�mF3�`\n",
    "Comparison_key47": "इसका मतलब है कि a=6, b=4 से बड़ा है और इसलिए `output` को `true` के रूप में देखा जाता है।\n",
    "Comparison_key48": "#### उदाहरण  :-\n\n\n",
    "Comparison_key49": "#### `Output`: -\n\n\n",
    "Comparison_key50": "`��<��`\n",
    "Comparison_key51": "इस उदाहरण में हम कह रहे हैं कि x का मान y से बड़ा है, जो गलत है इसलिए `output` है `false`।\n",
    "Comparison_key52": "### `Less than (<) :-`\n\n",
    "Comparison_key53": "यह गणित की तरह ही है, यह जाँचता है कि बाईं ओर का मान दाईं ओर के मान से कम है या नहीं। यदि हाँ तो `output` `true` है अन्यथा यह `false` है।\n",
    "Comparison_key54": "#### उदाहरण :-\n\n\n",
    "Comparison_key55": "#### `Output`: -\n\n\n",
    "Comparison_key56": "`�mF3�`\n",
    "Comparison_key57": "इस उदाहरण में, x, y से छोटा है इसलिए `output` है `true`।\n",
    "Comparison_key58": "#### उदाहरण :-\n\n\n",
    "Comparison_key59": "#### `Output`: -\n\n\n",
    "Comparison_key60": "`��<��`\n",
    "Comparison_key61": "इस उदाहरण में, a, b से बड़ा है, इसलिए `output`, `false` है।\n",
    "Comparison_key62": "### `Greater than or  equal t\u0002��ғ�`\n\n",
    "Comparison_key63": " यह गणित की तरह ही है, यह जाँचता है कि बाईं ओर का मान दाईं ओर के मान से अधिक है या उसके बराबर है। यदि हाँ तो `output` `true` है अन्यथा यह `false` है।\n",
    "Comparison_key64": "#### उदाहरण  :-\n\n\n",
    "Comparison_key65": "#### `Output`: -\n\n\n",
    "Comparison_key66": "`�mF3�`\n",
    "Comparison_key67": "यहाँ, a, b से बड़ा है इसलिए `output` है `true`।\n",
    "Comparison_key68": "#### उदाहरण  :-\n\n\n",
    "Comparison_key69": "#### `Output`: -\n\n\n",
    "Comparison_key70": "`��<��`\n",
    "Comparison_key71": "यहाँ चूँकि a, b से बड़ा नहीं है और a भी b के बराबर नहीं है, इसलिए `output` है `false`।\n",
    "Comparison_key72": "### `Less than or equal to (<=) :-`\n\n\n",
    "Comparison_key73": "यह गणित की तरह ही है, यह जाँचता है कि बाईं ओर का मान दाईं ओर के मान से कम है या उसके बराबर है। यदि हाँ तो `output` `true` है अन्यथा यह `false` है।\n",
    "Comparison_key74": "#### उदाहरण :-\n\n\n",
    "Comparison_key75": "#### `Output`: -\n\n\n",
    "Comparison_key76": "`�mF3�`\n",
    "Comparison_key77": "ऊपर के उदाहरण में, x=6, y=9 से छोटा है और इस प्रकार, `output` है `true`।\n",
    "Comparison_key78": "#### उदाहरण :-\n\n\n",
    "Comparison_key79": "#### `Output`: -\n\n\n",
    "Comparison_key80": "`��<��`\n",
    "Comparison_key81": "यहाँ, x न तो y से कम है और न ही y के बराबर है, इसलिए `output` है `false`।\n"
}