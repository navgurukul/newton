{
	"introduction_key1": "What are `loops`?\n",
	"introduction_key2": "If we want to do a task again and again, so computers can help us with that task.\n",
	"introduction_key3": "Not Translated\n",
	"introduction_key4": "If I want to send mail to my 100 friends to inform about certain event. If I send the mails one by one it will be a very tedious task for me and I might commit a mistake also. With the help of `loops` we can do this work very easily and efficiently.\n",
	"introduction_key5": "Writing `code` for `loops`\n",
	"introduction_key6": "In this `code` :\n",
	"introduction_key7": "Take a `variable` named as `counter` whose value is 0. Same thing is happening in the flowchart.\n",
	"introduction_key8": "Then a `while` `loop` `statement` is written with the condition `counter < 5`. `While` `statement` means (till). So,`while` `loop` tells `python` that till the given condition `True`, you can run the `loop`.\n",
	"introduction_key9": "When the `loop` finishes, the `code` outside the while `loop` will run. To understand the run the `code` given below.\n\n\n",
	"introduction_key10": "If you run this `code` so`\"NavGurukul\"`will be printed 5 times and last line is printed one time.\n",
	"introduction_key11": "One more example\n",
	"introduction_key12": "Suppose we need to write a `code` where we need to print the numbers divisible by 2 between 1 to 100.\n",
	"introduction_key13": "Note:\n",
	"introduction_key14": "Here, we have taken the `counter` as 1  as we have to print from `1 to 100` and not from `0 to 99`.\n",
	"introduction_key15": "In this video, we will understand `loops` and learn how to write their `code`.\n",
	"introduction_key16": " -->\n",
	"introduction_key17": "`Loops` help us do the same things again and again. The same work can be done again and again.\n\n",
	"introduction_key18": "Take an example of getting laptops from a car to the house. If there are 50 laptops in the car.\n\n",
	"introduction_key19": "Explain this from the concept of `(till / until)`. `Until` the laptops inside the home becomes 0 `till` then take the laptops and keep them in the car. \n   - Do this work again and again.\n   - But till when we will do this work? This is decided by `until`.\n   - Whatever condition we put inside  `until`, `till then` the `loop` runs.\n   - Here, under the `until` condition, we will write `laptops >= 10`.\n   - Means when laptops become 10 or greater than 10 then stop doing the work.\n   - What is the work inside `until`?\n   The work inside until is to bring a laptop from home and keep it in the car.\n   \n   - The moment this work is done one time, one laptop becomes less.\n   - We will write this in `python`.\n",
	"introduction_key20": "Take the example of teaching this in `python`.\n   - Let's say the total number of laptops is 10. `Laptops = 0`, this `variable` will maintain the number of laptops.\n   - Until the number of laptops becomes 10, till then bring the laptops from the home and keep it in the car.\n   -`while laptops <= 10` means this work happens 10 times.\n   - Our work is to keep the laptops in the car? print( \"One laptop kept in the car.\")\n   - Then how we will track that we have kept the laptop or done our work?\n   - or that we will add +1 to laptop `variable` means that much laptop we kept in the car.\n   - Let's do the dry run of the same program to see if this works fine.\n",
	"introduction_key21": "Second we will write the same program in the `python` visualizer to see if it works the same way as we thought it would. And now explain how the visualizer would run this `code`.\n",
	"introduction_key22": "Similarly take another example of printing numbers from 1 to 20.\n",
	"introduction_key23": "Take another example of how to print the even numbers from 20 to 40.\n",
	"introduction_key24": "In the `20 to 40` example talk about where to add the `if `statements``. Adding the` if `statement` outside and adding the if `statement` inside.` (This also needs to be shown on how writing if `statements` inside and outside will create a difference.). `i+1 and % `should be used.\n",
	"introduction_key25": "Take the same example to print the `even numbers` between `20 to 40`. But here do `i+2` to do it.\n"
}