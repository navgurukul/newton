{
    "introduction_key1": "## `loops` क्या हैं?\n\n\n",
    "introduction_key2": "अगर हम किसी काम को बार-बार करना चाहते हैं तो कंप्यूटर उस काम में हमारी मदद कर सकता है।\n",
    "introduction_key3": "### अनुवादित नहीं\n\n\n",
    "introduction_key4": "अगर मैं अपने 100 दोस्तों को किसी खास घटना के बारे में सूचित करने के लिए मेल भेजना चाहता हूं। अगर मैं एक-एक करके मेल भेजता हूं तो यह मेरे लिए बहुत कठिन काम होगा और मैं गलती भी कर सकता हूं। `loops` की सहायता से हम इस काम को बहुत आसानी से और कुशलता से कर सकते हैं।\n",
    "introduction_key5": "### `\u0004oops` . के लिए `code` लिखना\n\n\n",
    "introduction_key6": "इसमें `code` :\n",
    "introduction_key7": "एक `variable` लें जिसका नाम `counter` है जिसका मान 0 है। फ़्लोचार्ट में भी यही हो रहा है।\n",
    "introduction_key8": "फिर एक `while` `loop` `statement` को `counter < 5` शर्त के साथ लिखा जाता है। `While` `statement` का अर्थ है (तक)। तो, `while` `loop` `python` को बताता है कि दी गई शर्त `True` तक, आप `loop` चला सकते हैं।\n",
    "introduction_key9": "जब `loop` समाप्त हो जाता है, तो `code` थोड़ी देर के बाहर `loop` चलेगा। रन को समझने के लिए नीचे दिया गया `code` रन करें।\n\n\n",
    "introduction_key10": "अगर आप इसे `code` चलाते हैं तो `\"NavGurukul\"` 5 बार प्रिंट होगा और आखिरी लाइन एक बार प्रिंट होगी।\n",
    "introduction_key11": "### एक और उदाहरण\n\n\n",
    "introduction_key12": "मान लीजिए हमें एक `code` लिखने की आवश्यकता है, जहां हमें 1 से 100 के बीच 2 से विभाज्य संख्याओं को प्रिंट करने की आवश्यकता है।\n",
    "introduction_key13": "#### ध्यान दें:\n\n",
    "introduction_key14": "यहां, हमने `counter` को 1 के रूप में लिया है क्योंकि हमें `1 to 100` से प्रिंट करना है न कि `0 to 99` से।\n",
    "introduction_key15": "इस वीडियो में, हम `loops` को समझेंगे और सीखेंगे कि उनका `code` कैसे लिखना है।\n",
    "introduction_key16": " ->\n",
    "introduction_key17": "`Loops` एक ही काम को बार-बार करने में हमारी मदद करता है। वही काम बार-बार किया जा सकता है।\n\n",
    "introduction_key18": "एक कार से घर तक लैपटॉप लाने का एक उदाहरण लें। अगर कार में 50 लैपटॉप हैं।\n\n",
    "introduction_key19": "इसे `(till / until)` की अवधारणा से समझाएं। `Until` घर के अंदर के लैपटॉप 0 हो जाते हैं `till` फिर लैपटॉप लें और उन्हें कार में रखें।\n   - इस काम को बार-बार करें।\n   - लेकिन हम यह काम कब तक करेंगे? यह `until` द्वारा तय किया जाता है।\n   - `until`, `till then` के अंदर हम जो भी शर्त लगाते हैं, `loop` चलता है।\n   - यहां, `until` शर्त के तहत, हम `laptops >= 10` लिखेंगे।\n   - मतलब जब लैपटॉप 10 या 10 से ज्यादा हो जाएं तो काम करना बंद कर दें।\n   - `until` के अंदर क्या काम है?\n   अंदर तक का काम है घर से लैपटॉप लाकर कार में रखना।\n   \n   - जैसे ही यह काम एक बार किया जाता है, एक लैपटॉप कम हो जाता है।\n   - हम इसे `python` में लिखेंगे।\n",
    "introduction_key20": "इसे `python` में पढ़ाने का उदाहरण लें।\n   - मान लें कि लैपटॉप की कुल संख्या 10 है। `Laptops = 0`, यह `variable` लैपटॉप की संख्या को बनाए रखेगा।\n   - जब तक लैपटॉप की संख्या 10 न हो जाए तब तक लैपटॉप को घर से लाकर कार में रख दें.\n   -`while laptops <= 10` यानी यह काम 10 बार होता है।\n   - हमारा काम लैपटॉप को कार में रखना है? प्रिंट (\"कार में रखा एक लैपटॉप।\")\n   - फिर हम कैसे ट्रैक करेंगे कि हमने लैपटॉप रखा है या अपना काम किया है?\n   - या कि हम लैपटॉप में +1 जोड़ देंगे `variable` का अर्थ है कि हमने कार में कितना लैपटॉप रखा है।\n   - यह ठीक काम करता है या नहीं, यह देखने के लिए उसी प्रोग्राम का ड्राई रन करते हैं।\n",
    "introduction_key21": "दूसरा, हम उसी प्रोग्राम को `python` विज़ुअलाइज़र में लिखेंगे, यह देखने के लिए कि क्या यह उसी तरह काम करता है जैसा हमने सोचा था। और अब समझाएं कि विज़ुअलाइज़र इस `code` को कैसे चलाएगा।\n",
    "introduction_key22": "इसी प्रकार 1 से 20 तक मुद्रण संख्याओं का एक और उदाहरण लें।\n",
    "introduction_key23": "एक और उदाहरण लें कि कैसे 20 से 40 तक की सम संख्याओं को प्रिंट किया जाए।\n",
    "introduction_key24": "`20 to 40` उदाहरण में इस बारे में बात करें कि `if `statements`+ҝ`IGlmIA==`�֭zg�`IG91dHNpZGUgYW5kIGFkZGluZyB0aGUgaWYg`�֭zg�`IGluc2lkZS4=`(o\u0006�߿�`c3RhdGVtZW50cw==`�Ot�}\u0006(\u0006�ҝ`aSsxIGFuZCAlIA==`3O���",
    "introduction_key25": "`even numbers` को `20 to 40` के बीच प्रिंट करने के लिए एक ही उदाहरण लें। लेकिन यहाँ इसे करने के लिए `i+2` करें।\n"
}