{
    "loops-code-question7_key1": "## प्रश्न 7\n\n\n",
    "loops-code-question7_key2": "अब, हम `loops` का प्रयोग करके एक गेम बनाएंगे। हम इस गेम को **अनुमान लगाने वाला गेम** कहेंगे।\n",
    "loops-code-question7_key3": "इस खेल में हम कोई भी संख्या लेते हैं, मान लीजिए कि यह संख्या **`number 5`** है।\n\n",
    "loops-code-question7_key4": "इसके बाद हम उपयोगकर्ता से **`1 to 10`** के बीच कोई भी संख्या `input` के रूप में लेते हैं। उपयोगकर्ता इस संख्या का अनुमान लगाने की कोशिश करता है।\n\n",
    "loops-code-question7_key5": "मान लीजिए कि उपयोगकर्ता `3` एक `input` के रूप में देता है। फिर हम जांच करेंगे कि `3` 5 के बराबर है या नहीं?\n",
    "loops-code-question7_key6": "`3 is not equal to 5` इसलिए हम उपयोगकर्ता से एक और `input` मांगेंगे।\n",
    "loops-code-question7_key7": "अब, हम जांच करेंगे कि वह संख्या 5 के बराबर है या नहीं।\n",
    "loops-code-question7_key8": "उपयोगकर्ता को अनुमान लगाने के लिए **`5 chances`** मिलेगा।\n\n\n",
    "loops-code-question7_key9": "यदि उसने 5 अवसरों के भीतर सही अनुमान लगाया तो वह जीत जाता है और यदि वह गलत अनुमान लगाता है तो खेल हार जाता है।\n",
    "loops-code-question7_key10": "#### संकेत :\n\n",
    "loops-code-question7_key11": " `\bython` में `break ` Statement`` के बारे में अध्ययन करें।\n"
}