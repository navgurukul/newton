[
	{
		"component": "header",
		"variant": 3,
		"value": "Example:"
	},
	{
		"component": "code",
		"type": "javascript",
		"title": "",
		"value": "var empty = null;<br>console.log(empty); // Output: null<br>console.log(typeof(empty)); // Output: object"
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Explanation:"
	},
	{
		"component": "text",
		"value": "Null is the value which we can assign to a <span style=\"\">variable</span> and it means nothing. As you can see in the above example we have assigned a value “null” to a <span style=\"\">variable</span> named “empty”. when we check the type of it, It will show us its type as object, which is the by default <span style=\"\">error</span> in javascript which should not be there, but it can’t be changed also. "
	},
	{
		"component": "text",
		"value": "Where as,"
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Example:"
	},
	{
		"component": "code",
		"type": "javascript",
		"title": "",
		"value": "var notDefined;<br>console.log(notDefined); // Output: undefined<br>console.log(typeof(notDefined)); // Output: undefined"
	},
	{
		"component": "header",
		"variant": 3,
		"value": "Explanation:"
	},
	{
		"component": "text",
		"value": "Here in notDefined <span style=\"\">variable</span> we have declared a <span style=\"\">variable</span> but didn’t assign a value to it which means the <span style=\"\">variable</span> is there but nothing is stored in it, so when we try to console it the <span style=\"\">output</span> will be “undefined” as it is not defined yet. Here the value of a <span style=\"\">variable</span> is not defined so it shows the type also as undefined."
	}
]