{
	"if-statement-code-intro_key1": "Introduction\n",
	"if-statement-code-intro_key2": "We have learned how to create `flowcharts` for `if conditions`. But we cannot use these `flowcharts` unless we learn how to write a `code` by looking at a `flowchart`.\n",
	"if-statement-code-intro_key3": "In the above example, we take the day as `input` from the user. According to the day entered, we print the food item for that particular day. Read the comments carefully to understand how the `code` is `execute`d at every step.\n",
	"if-statement-code-intro_key4": "Note:\n",
	"if-statement-code-intro_key5": " While entering the `input` for the day, you'll have to enter it exactly as it is used in the if conditions. Since `Python` is case-sensitive, it will treat `Monday` and `monday` differently.\n",
	"if-statement-code-intro_key6": "More examples\n",
	"if-statement-code-intro_key7": "We have only used `==`, `comparison operator` in the `if statements`. In the booleans exercise, we had seen other comparison `operators` as well. For example: \n",
	"if-statement-code-intro_key8": "`>`  : `Greater than`\n",
	"if-statement-code-intro_key9": "`<`  : `Less than` \n",
	"if-statement-code-intro_key10": "`>=` : `Greater than equal to` \n",
	"if-statement-code-intro_key11": "`<=` : `Less than equal to` \n",
	"if-statement-code-intro_key12": "`!=` : `Not equal to` \n\n\n",
	"if-statement-code-intro_key13": "The following examples use these above mentioned comparison `operators`.\n",
	"if-statement-code-intro_key14": "Example 1 :-\n",
	"if-statement-code-intro_key15": "In this program, you have set the value of the `variable`. The user will have to guess the `string`.\n",
	"if-statement-code-intro_key16": "Example 2 :-\n",
	"if-statement-code-intro_key17": "Let's assume a rule that if the speed of our vehicle is less than or equal to 60, it will not be considered as overspeeding. Otherwise, it will be considered as overspeeding. We can write the program for it as shown below:\n",
	"if-statement-code-intro_key18": "Note:\n",
	"if-statement-code-intro_key19": "Notice we have converted the value in the `speed` `variable` to an `int` before using in if condition. This is because the `output` of the `input` function is always a `string` and we cannot compare a `string` with a number correctly using `<=` `operator`.\n",
	"if-statement-code-intro_key20": "`Nested If Condition`\n",
	"if-statement-code-intro_key21": "We can easily use an if `statement` inside another if `statement`.\n",
	"if-statement-code-intro_key22": "Consider the example where we want to display the food menu based on the day and time. For example on monday, \"Poha\" in breakfast, \"Rajma Chawal\" for lunch and \"Roti Sabzi\" for dinner. Similary on tuesday, \"Poori Sabzi\" for breakfast, \"Thukpa\" for lunch and \"Chicken Chawal\" for dinner. We can write a program for this question as shown below:-\n",
	"if-statement-code-intro_key23": "`TODO: We need to add a flowchart here somehow. #studentsShouldIgnore`\n",
	"if-statement-code-intro_key24": "Observe how we have used if `statement` inside another if `statement`. The if `statement` inside will only be checked if the outer `if condition` is `True`.\n"
}