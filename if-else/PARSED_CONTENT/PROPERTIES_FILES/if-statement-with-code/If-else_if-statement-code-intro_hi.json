{
    "if-statement-code-intro_key1": "नाम: इफ स्टेटमेंट के लिए कोड लिखना\n",
    "if-statement-code-intro_key2": "# परिचय\n\n\n",
    "if-statement-code-intro_key3": "हमने सीखा है कि if स्थितियों के लिए फ़्लोचार्ट कैसे बनाया जाता है। लेकिन हम इन फ़्लोचार्ट का उपयोग तब तक नहीं कर सकते जब तक कि हम फ़्लोचार्ट को देखकर `code` लिखना नहीं सीख जाते।\n",
    "if-statement-code-intro_key4": "उपरोक्त उदाहरण में, हम उपयोगकर्ता से दिन को `input` के रूप में लेते हैं। उस दिन के हिसाब से हम उस खास दिन के खाने का सामान छापते हैं। हर कदम पर `code` `execute`d कैसे है, यह समझने के लिए टिप्पणियों को ध्यान से पढ़ें।\n",
    "if-statement-code-intro_key5": "*ध्यान दें: दिन के लिए `input` दर्ज करते समय, आपको इसे ठीक उसी तरह दर्ज करना होगा जैसे कि अगर शर्तों में इसका उपयोग किया जाता है। चूंकि `Python` केस-संवेदी है, इसलिए यह `Monday` और `monday` को अलग तरह से व्यवहार करेगा।*\n",
    "if-statement-code-intro_key6": "# और ज्यादा उदाहरण\n\n\n",
    "if-statement-code-intro_key7": "हमने यदि `statements` में केवल `==` तुलना `operator` का उपयोग किया है। बूलियन अभ्यास में, हमने अन्य तुलना `operators` भी देखी थी। उदाहरण के लिए:\n",
    "if-statement-code-intro_key8": "`>`: से बड़ा\n",
    "if-statement-code-intro_key9": "`<`: से कम\n",
    "if-statement-code-intro_key10": "`>=`: बराबर से बड़ा\n",
    "if-statement-code-intro_key11": "`<=`: बराबर से कम\n",
    "if-statement-code-intro_key12": "`!=`: बराबर नहीं\n\n\n",
    "if-statement-code-intro_key13": "निम्नलिखित उदाहरण इन उपर्युक्त तुलना `operators` का उपयोग करते हैं।\n",
    "if-statement-code-intro_key14": "## उदाहरण 1\n\n",
    "if-statement-code-intro_key15": "इस प्रोग्राम में, आपने `variable` का मान निर्धारित किया है। उपयोगकर्ता को `string` का अनुमान लगाना होगा।\n",
    "if-statement-code-intro_key16": "## उदाहरण 2\n\n",
    "if-statement-code-intro_key17": "आइए एक नियम मान लें कि यदि हमारे वाहन की गति 60 से कम या उसके बराबर है, तो इसे ओवरस्पीडिंग नहीं माना जाएगा। अन्यथा, इसे ओवरस्पीडिंग माना जाएगा। हम इसके लिए प्रोग्राम लिख सकते हैं जैसा कि नीचे दिखाया गया है:\n",
    "if-statement-code-intro_key18": "*नोट: ध्यान दें कि हमने if कंडीशन में उपयोग करने से पहले `speed` `variable` के मान को `int` में बदल दिया है। ऐसा इसलिए है क्योंकि `input` फ़ंक्शन का `output` हमेशा `string` होता है और हम `<=` `operator` का उपयोग करके किसी संख्या के साथ `string` की तुलना नहीं कर सकते।\n",
    "if-statement-code-intro_key19": "# नेस्टेड अगर कंडीशन\n\n",
    "if-statement-code-intro_key20": "हम आसानी से एक if `statement` का उपयोग दूसरे के अंदर कर सकते हैं यदि `statement`।\n",
    "if-statement-code-intro_key21": "उस उदाहरण पर विचार करें जहां हम दिन और समय के आधार पर भोजन मेनू प्रदर्शित करना चाहते हैं। उदाहरण के लिए सोमवार को नाश्ते में \"पोहा\", दोपहर के भोजन के लिए \"राजमा चावल\" और रात के खाने के लिए \"रोटी सब्जी\"। इसी तरह मंगलवार को नाश्ते के लिए \"पूरी सब्जी\", दोपहर के भोजन के लिए \"थुकपा\" और रात के खाने के लिए \"चिकन चावल\"। हम इस प्रश्न के लिए एक प्रोग्राम लिख सकते हैं जैसा कि नीचे दिखाया गया है:\n",
    "if-statement-code-intro_key22": "`TODO:` हमें यहां किसी तरह एक फ़्लोचार्ट जोड़ने की आवश्यकता है। #छात्रों को अनदेखा करना चाहिए\n",
    "if-statement-code-intro_key23": "देखें कि हमने कैसे इस्तेमाल किया है अगर `statement` दूसरे के अंदर अगर `statement`। अगर अंदर `statement` की जांच की जाएगी तो बाहरी स्थिति `True` होने पर ही जांची जाएगी।\n"
}