{
    "Different-types-to-write-a-function_key1": "**नाम समारोह**\n\n\n",
    "Different-types-to-write-a-function_key2": "इससे पहले इस ट्यूटोरियल में, आपने सीखा था कि निम्नलिखित `syntax` के साथ फ़ंक्शन घोषित किए जाते हैं:\n",
    "Different-types-to-write-a-function_key3": "फ़ंक्शननाम (तर्क 1, तर्क 2);\n",
    "Different-types-to-write-a-function_key4": "हम किसी फ़ंक्शन को किसी नाम के साथ कॉल कर सकते हैं, जैसे ऊपर दिए गए नंबर, किसी भी समय हमें इसके नाम का संदर्भ देकर और इसके लिए कुछ तर्क पारित करके इसकी आवश्यकता होती है। इस फ़ंक्शन का एक नाम है। नामांकित फ़ंक्शन उपयोगी होते हैं यदि हमें किसी फ़ंक्शन को अलग-अलग मानों को पास करने या इसे कई बार चलाने के लिए कई बार कॉल करने की आवश्यकता होती है।\n",
    "Different-types-to-write-a-function_key5": "**फ़ंक्शन एक्सप्रेशन (बेनामी फ़ंक्शन)**\n\n\n",
    "Different-types-to-write-a-function_key6": "यहां हमने अभी फ़ंक्शन getSum घोषित किया है। हमने इसे अभी तक नहीं बुलाया है। घोषित फ़ंक्शन तुरंत `execute`d नहीं हैं। वे \"`save`d बाद में उपयोग के लिए\" हैं, और बाद में `execute` d होंगे, जब उन्हें बुलाया जाएगा (आह्वान किया गया)।\n",
    "Different-types-to-write-a-function_key7": "ध्यान दें कि ऊपर दिए गए फंक्शन डिक्लेरेशन में हम फंक्शन लिखकर फंक्शन की घोषणा कैसे करेंगे और टास्क को करेंगे, लेकिन फंक्शन एक्सप्रेशंस में हम इसे एक `variable` असाइन करेंगे और टास्क करेंगे।\n",
    "Different-types-to-write-a-function_key8": "फ़ंक्शन बनाने के लिए हमने पहले जिस `syntax` का उपयोग किया है, उसे फ़ंक्शन घोषणा कहा जाता है। एक फ़ंक्शन बनाने के लिए एक और `syntax` है जिसे फ़ंक्शन एक्सप्रेशन कहा जाता है। एक फंक्शन एक्सप्रेशन को `variable` में स्टोर किया जा सकता है:\n",
    "Different-types-to-write-a-function_key9": "**उदाहरण:**\n",
    "Different-types-to-write-a-function_key10": "`variables` में संग्रहीत कार्यों को फ़ंक्शन नामों की आवश्यकता नहीं होती है। उन्हें हमेशा `variable` नाम का उपयोग करके बुलाया जाता है।\n",
    "Different-types-to-write-a-function_key11": "उपरोक्त फ़ंक्शन वास्तव में एक अनाम फ़ंक्शन (बिना नाम वाला फ़ंक्शन) है।\n",
    "Different-types-to-write-a-function_key12": "**व्यायाम:**\n",
    "Different-types-to-write-a-function_key13": "एक बेनामी फ़ंक्शन को परिभाषित करें और दो तर्क देकर इसे कॉल करें कि क्या वे बराबर हैं या नहीं?\n",
    "Different-types-to-write-a-function_key14": "सबमिट करने के बाद प्रतिक्रिया\n",
    "Different-types-to-write-a-function_key15": "**सेल्फ-इनवोकिंग फंक्शन्स (तुरंत इनवाइटेड फंक्शन एक्सप्रेशन)**\n\n\n",
    "Different-types-to-write-a-function_key16": "यह इंगित करने के लिए कि यह एक फ़ंक्शन अभिव्यक्ति है, आपको फ़ंक्शन के चारों ओर कोष्ठक जोड़ना होगा:\n",
    "Different-types-to-write-a-function_key17": "**व्याख्या:**\n",
    "Different-types-to-write-a-function_key18": "जैसा कि हम उदाहरण में देखते हैं, हम किसी भी `variable` में नाम नहीं दे रहे हैं और फ़ंक्शन को संग्रहीत नहीं कर रहे हैं। हम इसे घोषित कर रहे हैं उसके बाद हम इसे कोष्ठक का उपयोग करके एक्सेस कर रहे हैं। तो, `output` हैलो दिखा रहा है\n",
    "Different-types-to-write-a-function_key19": "जावास्क्रिप्ट\n(फ़ंक्शन (str1, str2) {\n   कंसोल.लॉग(str1===str2)\n}) (\"कुमार\", \"कुमार\");\n`` `"
}