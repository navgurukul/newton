{
	"Different-types-to-write-a-function_key1": "### Name Function\n\n\n",
	"Different-types-to-write-a-function_key2": "Earlier in this tutorial, you learned that functions are declared with the following `syntax`:\n",
	"Different-types-to-write-a-function_key3": "We can call a function with a name, like addNumbers above, any time we need it by referencing its name and passing some arguments to it. This function has a name.\n",
	"Different-types-to-write-a-function_key4": "Note:\n",
	"Different-types-to-write-a-function_key5": "Named functions are useful if we need to call a function many times to pass different values to it or run it several times.\n",
	"Different-types-to-write-a-function_key6": "### Function Expressions ( Anonymous function )\n\n\n\n",
	"Different-types-to-write-a-function_key7": "`Syntax` for Function Declaration\n",
	"Different-types-to-write-a-function_key8": "Here we have just declared the function getSum. We havenâ€™t called it yet. Declared functions are not `execute`d immediately. They are \"`save`d for later use\", and will be `execute`d later, when they are invoked (called upon).\n",
	"Different-types-to-write-a-function_key9": "`Syntax` for Function Expression\n",
	"Different-types-to-write-a-function_key10": "Notice how in the function declaration above we will declare function by writing a function and do the tasks, but in function expressions we will assign to it a `variable` and perform tasks.\n",
	"Different-types-to-write-a-function_key11": "Note:\n",
	"Different-types-to-write-a-function_key12": "The `syntax` that we've used before to create functions is called function declaration. There is another `syntax` for creating a function that is called a function expression. A function expression can be stored in a `variable`:\n",
	"Different-types-to-write-a-function_key13": "Example:\n",
	"Different-types-to-write-a-function_key14": "Functions stored in `variables` do not need function names. They are always invoked (called) using the `variable` name.\n",
	"Different-types-to-write-a-function_key15": "Note:\n",
	"Different-types-to-write-a-function_key16": "The function above is actually an anonymous function (a function without a name).\n",
	"Different-types-to-write-a-function_key17": "Exercises:\n",
	"Different-types-to-write-a-function_key18": "Define an Anonymous function and call it by taking two arguments to whether they are equal or not?\n",
	"Different-types-to-write-a-function_key19": "### Self-Invoking Functions ( Immediately invoked function expression)\n\n\n",
	"Different-types-to-write-a-function_key20": "You have to add parentheses around the function to indicate that it is a function expression:\n",
	"Different-types-to-write-a-function_key21": "Explanation:\n",
	"Different-types-to-write-a-function_key22": "As we see in the example, we are not giving names and not storing the function in any `variable`. We are declaring it after that we are accessing it using parentheses. So, `output` is showing **Hello!! Nayak**\n",
	"Different-types-to-write-a-function_key23": "A self-invoking expression is invoked (started) automatically, without being called.\n",
	"Different-types-to-write-a-function_key24": "Function expressions will `execute` automatically if the expression is followed by ().\n",
	"Different-types-to-write-a-function_key25": "You cannot self-invoke a function declaration.\n",
	"Different-types-to-write-a-function_key26": "Exercises:\n",
	"Different-types-to-write-a-function_key27": "1.Define an Self invoking function and call it by taking two arguments to whether they are  equal or not?\n"
}