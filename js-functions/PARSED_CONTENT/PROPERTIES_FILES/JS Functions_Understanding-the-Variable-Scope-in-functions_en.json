{
	"Understanding-the-Variable-Scope-in-functions_key1": "`variables` declared within a function have local scope that means they cannot be viewed or used from outside of that function, as shown in the example below:\n",
	"Understanding-the-Variable-Scope-in-functions_key2": "See in the above example, if you see greet is declared inside a function and we tried to print it outside. So, it gave a Reference `error`. Here we will get to know that greet has local scope (inside the function block). \n",
	"Understanding-the-Variable-Scope-in-functions_key3": "However, any `variables` declared in a program at outside of a function have global scope(defined outside the function block) i.e. it will be available to the whole `file`, whether that `variable` we are going to use in inside a function or outside. \n",
	"Understanding-the-Variable-Scope-in-functions_key4": "Here's an **example**:\n",
	"Understanding-the-Variable-Scope-in-functions_key5": "Explanation:\n",
	"Understanding-the-Variable-Scope-in-functions_key6": "`variable` greet is defined outside of our function, it will have the global that means we can use it inside a function or anywhere in the whole `code`. \n",
	"Understanding-the-Variable-Scope-in-functions_key7": "inside the function we asked to console greet, it printed Hello World!.\n",
	"Understanding-the-Variable-Scope-in-functions_key8": "Outside of the function somewhere in the `code` we asked to print greet again, it again printed Hello World!.\n"
}